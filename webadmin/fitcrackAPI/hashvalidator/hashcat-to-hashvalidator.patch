diff --git a/src/Makefile b/src/Makefile
index f860a2d8..6ae0b3ea 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -129,7 +129,7 @@ WIN_ICONV_64            := /opt/win-iconv-64
 ## Filenames for library and frontend
 ##
 
-HASHCAT_FRONTEND        := hashcat
+HASHCAT_FRONTEND        := hashValidator
 HASHCAT_LIBRARY         := libhashcat.so.$(VERSION_PURE)
 
 ifeq ($(UNAME),Darwin)
diff --git a/src/hashcat.c b/src/hashcat.c
index 1dccc3a4..8ec38d4d 100644
--- a/src/hashcat.c
+++ b/src/hashcat.c
@@ -433,6 +433,17 @@ static int inner1_loop (hashcat_ctx_t *hashcat_ctx)
   return 0;
 }
 
+static int outer_loop(hashcat_ctx_t *hashcat_ctx) {
+  const int rc_hashconfig = hashconfig_init(hashcat_ctx);
+  if (rc_hashconfig == -1) {
+    return -1;
+  }
+
+  hashes_init_filename(hashcat_ctx);
+  return hashes_init_stage1(hashcat_ctx);
+}
+
+#if 0
 // outer_loop iterates through hash_modes (in benchmark mode)
 // also initializes stuff that depend on hash mode
 
@@ -888,7 +899,7 @@ static int outer_loop (hashcat_ctx_t *hashcat_ctx)
 
   return 0;
 }
-
+#endif
 static void event_stub (MAYBE_UNUSED const u32 id, MAYBE_UNUSED hashcat_ctx_t *hashcat_ctx, MAYBE_UNUSED const void *buf, MAYBE_UNUSED const size_t len)
 {
 
@@ -1157,6 +1168,7 @@ int hashcat_session_init (hashcat_ctx_t *hashcat_ctx, const char *install_folder
 
   if (rc_user_options_check_files == -1) return -1;
 
+  #if 0
   /**
    * Init OpenCL library loader
    */
@@ -1180,12 +1192,17 @@ int hashcat_session_init (hashcat_ctx_t *hashcat_ctx, const char *install_folder
   const int rc_hwmon_init = hwmon_ctx_init (hashcat_ctx);
 
   if (rc_hwmon_init == -1) return -1;
-
+  #endif
   // done
 
   return 0;
 }
 
+int hashcat_session_execute (hashcat_ctx_t *hashcat_ctx) {
+  return outer_loop (hashcat_ctx);
+}
+
+#if 0
 int hashcat_session_execute (hashcat_ctx_t *hashcat_ctx)
 {
   logfile_ctx_t  *logfile_ctx  = hashcat_ctx->logfile_ctx;
@@ -1291,6 +1308,7 @@ int hashcat_session_execute (hashcat_ctx_t *hashcat_ctx)
 
   return rc_final;
 }
+#endif
 
 int hashcat_session_pause (hashcat_ctx_t *hashcat_ctx)
 {
diff --git a/src/hashes.c b/src/hashes.c
index 523cd304..f6487a2a 100644
--- a/src/hashes.c
+++ b/src/hashes.c
@@ -130,6 +130,17 @@ int sort_by_hash_no_salt (const void *v1, const void *v2, void *v3)
   return sort_by_digest_p0p1 (d1, d2, v3);
 }
 
+int fitcrack_hash_validator(int parser_result, char *hash) {
+
+  if (parser_result == PARSER_OK) {
+    printf("%s OK\n", hash);
+  } else {
+    printf("%s %s\n", hash, strparser(parser_result));
+  }
+  // Pretend that it is OK to silence hashcat's own logic to report broken hashes
+  return PARSER_OK;
+}
+
 int save_hash (hashcat_ctx_t *hashcat_ctx)
 {
   hashes_t        *hashes       = hashcat_ctx->hashes;
@@ -920,6 +931,7 @@ int hashes_init_stage1 (hashcat_ctx_t *hashcat_ctx)
             }
 
             parser_status = hashconfig->parse_func ((u8 *) in, sizeof (hccapx_t), &hashes_buf[hashes_cnt], hashconfig);
+            parser_status = fitcrack_hash_validator(parser_status, hash_buf);
 
             if (parser_status != PARSER_OK)
             {
@@ -940,6 +952,7 @@ int hashes_init_stage1 (hashcat_ctx_t *hashcat_ctx)
           if (hash_len == 32)
           {
             parser_status = hashconfig->parse_func ((u8 *) hash_buf, 16, &hashes_buf[hashes_cnt], hashconfig);
+            parser_status = fitcrack_hash_validator(parser_status, hash_buf);
 
             if (parser_status == PARSER_OK)
             {
@@ -954,6 +967,7 @@ int hashes_init_stage1 (hashcat_ctx_t *hashcat_ctx)
             }
 
             parser_status = hashconfig->parse_func ((u8 *) hash_buf + 16, 16, &hashes_buf[hashes_cnt], hashconfig);
+            parser_status = fitcrack_hash_validator(parser_status, hash_buf);
 
             if (parser_status == PARSER_OK)
             {
@@ -970,6 +984,7 @@ int hashes_init_stage1 (hashcat_ctx_t *hashcat_ctx)
           else
           {
             parser_status = hashconfig->parse_func ((u8 *) hash_buf, (u32) hash_len, &hashes_buf[hashes_cnt], hashconfig);
+            parser_status = fitcrack_hash_validator(parser_status, hash_buf);
 
             if (parser_status == PARSER_OK)
             {
@@ -1008,6 +1023,7 @@ int hashes_init_stage1 (hashcat_ctx_t *hashcat_ctx)
         else
         {
           parser_status = hashconfig->parse_func ((u8 *) hash_buf, (u32) hash_len, &hashes_buf[hashes_cnt], hashconfig);
+          parser_status = fitcrack_hash_validator(parser_status, hash_buf);
 
           if (parser_status == PARSER_OK)
           {
@@ -1138,6 +1154,7 @@ int hashes_init_stage1 (hashcat_ctx_t *hashcat_ctx)
           if (hash_len == 32)
           {
             int parser_status = hashconfig->parse_func ((u8 *) hash_buf, 16, &hashes_buf[hashes_cnt], hashconfig);
+            parser_status = fitcrack_hash_validator(parser_status, hash_buf);
 
             if (parser_status < PARSER_GLOBAL_ZERO)
             {
@@ -1160,6 +1177,7 @@ int hashes_init_stage1 (hashcat_ctx_t *hashcat_ctx)
             hashes_cnt++;
 
             parser_status = hashconfig->parse_func ((u8 *) hash_buf + 16, 16, &hashes_buf[hashes_cnt], hashconfig);
+            parser_status = fitcrack_hash_validator(parser_status, hash_buf);
 
             if (parser_status < PARSER_GLOBAL_ZERO)
             {
@@ -1184,6 +1202,7 @@ int hashes_init_stage1 (hashcat_ctx_t *hashcat_ctx)
           else
           {
             int parser_status = hashconfig->parse_func ((u8 *) hash_buf, (u32) hash_len, &hashes_buf[hashes_cnt], hashconfig);
+            parser_status = fitcrack_hash_validator(parser_status, hash_buf);
 
             if (parser_status < PARSER_GLOBAL_ZERO)
             {
@@ -1209,6 +1228,7 @@ int hashes_init_stage1 (hashcat_ctx_t *hashcat_ctx)
         else
         {
           int parser_status = hashconfig->parse_func ((u8 *) hash_buf, (u32) hash_len, &hashes_buf[hashes_cnt], hashconfig);
+          parser_status = fitcrack_hash_validator(parser_status, hash_buf);
 
           if (parser_status < PARSER_GLOBAL_ZERO)
           {
diff --git a/src/main.c b/src/main.c
index 4db13d08..c2db7d64 100644
--- a/src/main.c
+++ b/src/main.c
@@ -1083,6 +1083,7 @@ int main (int argc, char **argv)
   // some early exits
 
   user_options_t *user_options = hashcat_ctx->user_options;
+  user_options->quiet = true;
 
   #ifdef WITH_BRAIN
   if (user_options->brain_server == true)
