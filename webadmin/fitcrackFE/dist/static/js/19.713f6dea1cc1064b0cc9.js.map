{"version":3,"sources":["webpack:///static/js/19.713f6dea1cc1064b0cc9.js","webpack:///./src/components/hwMon/hwMonView.vue","webpack:///src/components/tile/fc_tile.vue","webpack:///./src/components/tile/fc_tile.vue","webpack:///./src/components/tile/fc_tile.vue?9885","webpack:///./node_modules/raphael/raphael.js","webpack:///./node_modules/vue-morris/dist/vue-morris.min.js","webpack:///src/components/graph/fc_usage_graph.vue","webpack:///./src/components/graph/fc_usage_graph.vue","webpack:///./src/components/graph/fc_usage_graph.vue?bcbd","webpack:///./src/components/graph/fc_usage_graph.vue?7811","webpack:///./src/components/graph/fc_usage_graph.vue?9221","webpack:///src/components/hwMon/hwMonView.vue","webpack:///./src/components/hwMon/hwMonView.vue?3b0d","webpack:///./src/components/hwMon/hwMonView.vue?1710","webpack:///./src/components/hwMon/hwMonView.vue?80f0"],"names":["webpackJsonp","503","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_hwMonView_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0d554a5c_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_hwMonView_vue__","normalizeComponent","__vue_styles__","Component","506","name","props","title","String","loading","Boolean","icon","508","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_fc_tile_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_562e96ed_hasScoped_false_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_fc_tile_vue__","511","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","flat","left","_v","_s","_e","type","_t","staticRenderFns","esExports","560","exports","root","factory","window","modules","moduleId","installedModules","i","l","call","m","c","d","getter","o","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","./dev/raphael.amd.js","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","R","apply","./dev/raphael.core.js","eve","first","is","loaded","on","array","_engine","splice","nu","add","args","Array","slice","arguments","length","f","pop","clone","obj","res","constructor","has","repush","item","ii","push","cacher","scope","postprocessor","newf","arg","join","cache","count","shift","clrToString","hex","catmullRom2bezier","crp","z","iLen","x","y","base3","p1","p2","p3","p4","bezlen","x1","y1","x2","y2","x3","y3","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","math","sqrt","getTatLen","ll","step","t2","abs","intersect","mmax","mmin","nx","ny","denominator","px","py","px2","toFixed","py2","interHelper","bez1","bez2","justCount","bbox1","bezierBBox","bbox2","isBBoxIntersect","l1","l2","n1","n2","dots1","dots2","xy","findDotsAtSegment","concat","j","di","di1","dj","dj1","ci","cj","t1","interPathHelper","path1","path2","_path2curve","x1m","y1m","x2m","y2m","pi","jj","pj","intr","k","kk","segment1","segment2","Matrix","a","b","e","x_y_w_h","S","width","height","CubicBezierAtTime","p1x","p1y","p2x","p2y","duration","sampleCurveX","ax","bx","cx","solveCurveX","epsilon","t0","d2","cy","by","ay","Animation","anim","ms","percents","newAnim","times","attr","toFloat","sort","sortByNumber","top","runAnimation","element","percent","status","totalOrigin","params","isInAnim","isInAnimSet","next","prev","timestamp","from","to","diff","animationElements","el","id","initstatus","start","Date","availableAnimAttrs","paper","customAttributes","availableAttrs","getRGB","toColour","g","pathes","path2curve","toPath","_","eq","equaliseTransform","real","matrix","to2","transform","getBBox","extractTransform","values","Str","split","separator","from2","easing","easyeasy","easing_formulas","match","bezierrg","curve","pipe","del","stop","callback","repeat","origin","animation","requestAnimFrame","stopAnimation","version","paperproto","elements","circle","rect","path","ellipse","text","image","formatrg","doc","document","win","oldRaphael","was","Raphael","Paper","ca","supportsTouch","TouchEvent","DocumentTouch","E","events","touchMap","mousedown","mousemove","mouseup","lowerCase","toLowerCase","Math","max","min","pow","PI","objectToString","toString","colourRegExp","_ISURL","isnan","NaN","Infinity","-Infinity","round","parseFloat","toInt","parseInt","upperCase","toUpperCase","_availableAttrs","arrow-end","arrow-start","blur","clip-rect","cursor","fill","fill-opacity","font","font-family","font-size","font-style","font-weight","gradient","href","letter-spacing","opacity","rx","ry","src","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","target","text-anchor","class","_availableAnimAttrs","commaSpaces","hsrg","hs","rg","p2s","pathCommand","tCommand","pathValues","eldata","_radial_gradient","rectPath","_rectPath","w","h","ellipsePath","getPath","_getPath","bbox","_getBBox","set","mapPath","pathi","_g","SVGAngle","implementation","hasFeature","createElement","innerHTML","firstChild","style","behavior","adj","svg","vml","_Paper","fn","_id","isArray","angle","atan2","rad","deg","snapTo","tolerance","rem","createUUID","uuidRegEx","uuidReplacer","replace","random","setWindow","newwin","initWin","toHex","color","bod","trim","docum","ActiveXObject","write","close","body","createPopup","range","createTextRange","queryCommandValue","display","appendChild","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","rgbtoString","prepareRGB","clr","packageRGB","rgb","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","v","G","B","X","C","H","V","L","M","_path2string","_preload","img","cssText","onload","removeChild","onerror","colour","indexOf","error","substring","charAt","red","green","blue","hsb","hsl","getColor","reset","parsePathString","pathString","pth","paths","arr","pathClone","paramCounts","q","data","parseTransformString","TString","elem","newData","newLevel","ps","sleep","setTimeout","c1x","c1y","c2x","c2y","t13","t12","t3","mx","my","alpha","end","curveDim","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","methodname","pathDimensions","Y","dim","xmin","ymin","xmax","ymax","bb","pathArray","pathToRelative","_pathToRelative","rel","pa","len","pathToAbsolute","_pathToAbsolute","crz","dots","l2c","q2c","a2c","large_arc_flag","sweep_flag","recursive","_120","rotate","cos","sin","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","dot","qx","qy","attrs2","processPath","pcom","tq","T","Q","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","tear","_parseDots","par","offset","_tear","bottom","toMatrix","_tofront","_toback","_insertafter","el2","_insertbefore","transformPath","_extractTransform","tstr","tdata","dx","dy","sx","sy","tlen","command","absolute","inver","invert","translate","scale","dirtyT","getEmpty","_equaliseTransform","tt1","tt2","maxlength","_getContainer","container","getElementById","tagName","pixelWidth","offsetWidth","pixelHeight","offsetHeight","matrixproto","norm","normalize","mag","out","me","fromCharCode","toFilter","row","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","shorter","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","getEventPosition","scrollY","documentElement","scrollTop","scrollX","scrollLeft","clientX","clientY","addEvent","addEventListener","pos","_f","olde","targetTouches","removeEventListener","attachEvent","event","detachEvent","drag","dragMove","dragi","touches","touch","identifier","_drag","node","nextSibling","parent","parentNode","opera","getElementByPoint","insertBefore","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","elproto","eventName","unbind","shape","removeData","getData","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","onDragOver","undrag","unmousedown","__set__","format","itemsArray","Set","setStart","setFinish","getSize","canvas","setSize","setViewBox","fit","raphael","getOffset","box","getBoundingClientRect","ownerDocument","docElem","clientTop","clientLeft","pageYOffset","pageXOffset","elementFromPoint","so","sr","createSVGRect","hits","getIntersectionList","getById","raphaelid","getElementsByBBox","forEach","bot","thisArg","getElementsByPoint","isPointInside","rp","realPath","isWithoutTransform","removed","dirty","bboxwt","glow","offsetx","offsety","getPointAtSegmentLength","getLengthFactory","istotal","subpath","onlystart","point","sp","subpaths","getTotalLength","getPointAtLength","getSubpathsAtLength","getSubpath","ef","linear","<",">","<>","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Now","paused","now","time","that","init","upto255","animateWith","onAnimation","delay","floor","json","100","lastKey","animate","setTime","pause","resume","items","setproto","method","clear","index","insertion","tail","todel","arglen","exclude","collector","insertAfter","glowConfig","ret","shape2","index2","registerFont","face","fonts","fontcopy","glyphs","family","prop","glyph","getFont","weight","stretch","normal","bold","lighter","bolder","RegExp","fontName","test","thefont","print","string","size","letter_spacing","line_spacing","letters","notfirst","lineHeight","shifty","descent","curr","token","str","fullfill","tokenRegex","objNotationRegex","replacer","all","quote","quotedName","isFunc","ninja","st","isLoaded","readyState","./dev/raphael.svg.js","xlink","markers","block","classic","diamond","open","oval","markerCounter","$","setAttributeNS","setAttribute","createElementNS","webkitTapHighlightColor","addGradientFill","fx","fy","SVG","_fx","_fy","dir","isNaN","vector","defs","gradientTransform","stop-color","stop-opacity","isFinite","fillurl","fillOpacity","isIE9or10","documentMode","location","protocol","host","pathname","search","updatePosition","pattern","patternTransform","addArrow","isEnd","refX","se","arrows","endPath","endMarker","startPath","startMarker","pathId","markerId","use","marker","getElementsByTagName","markerHeight","markerWidth","orient","refY","xlink:href","delta","startdx","enddx","dasharray","-",".","-.","-..",". ","- ","--","- .","--.","--..","addDashes","butt","square","dashes","setFillAndStroke","vis","visibility","att","nodeValue","val","createTextNode","pn","hl","clip","rc","clip-path","getAttribute","startString","endString","isURL","ig","patternUnits","stops","cssrule","tuneText","fontSize","tspan","texts","tspans","dif","getRealNode","Element","sw","hide","show","remove","containerStyle","canvasHidden","parentElement","clientWidth","clientHeight","names","def","subkey","toFront","toBack","afterNode","beforeNode","fltr","stdDeviation","_blur","filter","removeAttribute","preserveAspectRatio","_viewBox","con","Error","isFloating","cnvs","css","xmlns","xmlns:xlink","_left","_top","renderfix","vb","paperSize","aspectRatio","_vbSize","viewBox","getScreenCTM","createSVGMatrix","desc","./dev/raphael.vml.js","map","Z","bites","blurregexp","cssDot","zoom","pathTypes","ovalTypes","path2vml","total","vals","isMove","compensation","setCoords","fillpos","flip","kx","ky","coordsize","rotation","coordorigin","fillsize","position","newpath","isOval","div","clipRect","dstyle","textpath","textpathStyle","fontFamily","fontWeight","fontStyle","createNode","newstroke","strokeColor","joinstyle","miterlimit","endcap","dashstyle","span","brect","W","right","dirtyattrs","dd","bbx","fxfy","color2","clrs","colors","focus","focussize","focusposition","_oid","oldt","vbs","_viewBoxShift","vbt","skew","isGrad","isPatt","bbt","auxGetBBox","runtimeStyle","margin","Path","textpathok","cs","styleSheets","createStyleSheet","addRule","namespaces","rvml","./node_modules/eve-raphael/eve.js","glob","current_event","comaseparator","numsort","firstDefined","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","zIndex","_events","nes","es","sep","exist","nt","subname","cur","nts","off","funcs","once","561","jQuery","configurable","default","toObject","JSON","parse","toBoolean","required","barColors","Function","xkey","ykeys","labels","hoverCallback","axes","hideHover","stacked","resize","horizontal","grid","gridTextColor","gridTextSize","Number","gridTextFamily","gridTextWeight","formatter","lineColors","xLabels","lineWidth","pointSize","pointFillColors","pointStrokeColors","smooth","parseTime","postUnits","preUnits","dateFormat","xLabelFormat","yLabelFormat","xLabelAngle","goals","goalStrokeWidth","goalLineColors","eventStrokeWidth","eventLineColors","behaveLikeLine","u","addOption","addOptionAsObject","bar","methods","donut","line","area","__super__","Morris","EventEmitter","handlers","fire","commas","pad2","Grid","hasToShow","resizeHandler","options","extend","gridDefaults","defaults","units","elementWidth","elementHeight","selectFrom","setData","pageX","hitTest","_x","selectionRect","pageY","changedTouches","rangeSelect","innerHeight","rangeSelectColor","startRange","endRange","timeoutId","clearTimeout","postInit","gridLineColor","gridStrokeWidth","numLines","padding","cumulative","label","parseDate","yboundary","autoGridLines","redraw","log","ceil","_calc","measureText","yAxisFormat","yStart","yEnd","xStart","xEnd","xSize","ySize","calc","transY","transX","drawGrid","drawGoals","drawEvents","draw","getYAxisLabelX","getXAxisLabelY","drawXAxisLabel","drawYAxisLabel","drawGridLine","drawGoal","drawEvent","shown","getTime","getDay","setMonth","UTC","Hover","append","update","html","moveTo","innerWidth","outerWidth","outerHeight","Line","hilight","onHoverOut","onHoverMove","onGridClick","pointStrokeWidths","xLabelMargin","trendLine","trendLineWidth","trendLineColors","calcPoints","generatePaths","_y","_ymax","displayHoverForRow","hoverContentForRow","colorFor","createPath","drawXAxis","drawSeries","labelSeries","reverse","seriesPoints","_drawTrendLine","_drawLineFor","_drawPointFor","drawLinePoint","drawLinePath","gradients","prevHilight","pointShrinkSeries","pointGrowSeries","lineWidthForSeries","pointSizeForSeries","pointStrokeWidthForSeries","pointStrokeColorForSeries","LABEL_SPECS","AUTO_LABEL_ORDER","second","fmt","incr","getFullYear","getMonth","getDate","getHours","getMinutes","setUTCMinutes","getUTCMinutes","getSeconds","setUTCSeconds","getUTCSeconds","decade","setFullYear","year","month","week","setDate","day","hour","30min","15min","10min","5min","minute","30sec","15sec","10sec","5sec","Area","_drawFillFor","drawFilledPath","fillForSeries","Bar","barSizeRatio","barGap","barOpacity","barRadius","calcBars","xAxisLabelTopPadding","barSize","bars","verticalGridCondition","drawBar","verticalGridColor","verticalGridOpacity","roundedRect","Donut","select","click","backgroundColor","labelColor","segments","DonutSegment","text1","drawEmptyDonutLabel","text2","deselect","setLabels","inner","outer","sin_p0","cos_p0","sin_p1","cos_p1","is_long","calcSegment","selectedPath","calcArc","calcArcPoints","arc","drawDonutArc","drawDonutSegment","selected","_scopeId","computed","keys","esModule","locals","mixins","chart","watch","$nextTick","mounted","createChart","DonutChart","BarChart","LineChart","AreaChart","refs","parts","media","sourceMap","insertAt","singleton","styleSheet","childNodes","sources","btoa","unescape","encodeURIComponent","stringify","navigator","userAgent","head","DEBUG","588","global","__WEBPACK_IMPORTED_MODULE_0_raphael_raphael__","__WEBPACK_IMPORTED_MODULE_0_raphael_raphael___default","__WEBPACK_IMPORTED_MODULE_1_vue_morris__","components","labelsText","604","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_fc_usage_graph_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_525850b2_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_fc_usage_graph_vue__","605","content","606","mappings","file","sourcesContent","sourceRoot","607","indeterminate","staticStyle","hide-hover","line-colors","692","__WEBPACK_IMPORTED_MODULE_0__components_tile_fc_tile__","__WEBPACK_IMPORTED_MODULE_1__components_graph_fc_usage_graph__","fc-tile","fc-graph","deviceCount","hosts","selectedHost","usageData","cpumemLabels","cpumemLabelsFriendly","deviceLabels","deviceLabelsFriendly","deviceUsage","platforms","dataObtainedForDevices","hostSelectedBool","getDeviceStats","hostSelected","loadData","interval","setInterval","beforeDestroy","clearInterval","_this","axios","$serverAddr","$route","then","response","_this2","_this3","962","963","964","change","$event","model","$$v","expression","_l","domProps","textContent","labels-text","platform","cols","dvcs"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,SAAAC,GAAAC,GACAF,EAAA,KDKAG,OAAOC,eAAeL,EAAqB,cAAgBM,OAAO,GAC7C,IAAIC,GAAqHN,EAAoB,KCPlKO,EAAAP,EAAA,KAGAQ,EAAAR,EAAA,IASAS,EAAAR,EAKAS,EAAAF,EACAF,EAAA,EACAC,EAAA,GATA,EAWAE,EAPA,kBAEA,KAUAV,GAAA,QAAAW,EAAA,SDeMC,IACA,SAAUb,EAAQC,EAAqBC,GAE7C,YEhBAD,GAAA,GACAa,KAAA,SACAC,OACAC,MAAAC,OACAC,QAAAC,QACAC,KAAAH,UFmDMI,IACA,SAAUrB,EAAQC,EAAqBC,GAE7C,YACqB,IAAIoB,GAAmHpB,EAAoB,KGxFhKqB,EAAArB,EAAA,KAAAQ,EAAAR,EAAA,IAcAU,EAAAF,EACAY,EAAA,EACAC,EAAA,GATA,EAEA,KAEA,KAEA,KAUAtB,GAAA,EAAAW,EAAA,SHgGMY,IACA,SAAUxB,EAAQC,EAAqBC,GAE7C,YI1HA,IAAAuB,GAAA,WAA0B,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,CAAwB,OAAAE,GAAA,UAAoBE,YAAA,UAAAC,OAA6BC,KAAA,MAAWJ,EAAA,gBAAAJ,EAAA,KAAAI,EAAA,UAA6CG,OAAOE,KAAA,MAAWT,EAAAU,GAAA,WAAAV,EAAAW,GAAAX,EAAAN,MAAA,YAAAM,EAAAY,KAAAZ,EAAAU,GAAA,SAAAV,EAAAW,GAAAX,EAAAV,OAAA,YAAAU,EAAAU,GAAA,KAAAN,EAAA,eAAsIE,YAAA,kBAA4BN,EAAA,QAAAI,EAAA,qBAAwCE,YAAA,UAAAC,OAA6BM,KAAA,aAAkBb,EAAAc,GAAA,oBAC7cC,KACAC,GAAiBjB,SAAAgB,kBACjBxC,GAAA,KJ+HM0C,IACA,SAAU3C,EAAQ4C,EAAS1C,IK1HjC,SAAA2C,EAAAC,GAEA9C,EAAA4C,QAAAE,KAOCC,OAAA,WACD,gBAAAC,GAKA,QAAA9C,GAAA+C,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAL,OAGA,IAAA5C,GAAAkD,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAR,WAUA,OANAI,GAAAC,GAAAI,KAAArD,EAAA4C,QAAA5C,IAAA4C,QAAA1C,GAGAF,EAAAoD,GAAA,EAGApD,EAAA4C,QAvBA,GAAAM,KAiFA,OArDAhD,GAAAoD,EAAAN,EAGA9C,EAAAqD,EAAAL,EAGAhD,EAAAsD,EAAA,SAAAZ,EAAA9B,EAAA2C,GACAvD,EAAAwD,EAAAd,EAAA9B,IACAT,OAAAC,eAAAsC,EAAA9B,GAAkD6C,YAAA,EAAAC,IAAAH,KAKlDvD,EAAA2D,EAAA,SAAAjB,GACA,mBAAAkB,gBAAAC,aACA1D,OAAAC,eAAAsC,EAAAkB,OAAAC,aAAgExD,MAAA,WAEhEF,OAAAC,eAAAsC,EAAA,cAAyDrC,OAAA,KAQzDL,EAAA8D,EAAA,SAAAzD,EAAA0D,GAEA,GADA,EAAAA,IAAA1D,EAAAL,EAAAK,IACA,EAAA0D,EAAA,MAAA1D,EACA,MAAA0D,GAAA,gBAAA1D,SAAA2D,WAAA,MAAA3D,EACA,IAAA4D,GAAA9D,OAAA+D,OAAA,KAGA,IAFAlE,EAAA2D,EAAAM,GACA9D,OAAAC,eAAA6D,EAAA,WAAiDR,YAAA,EAAApD,UACjD,EAAA0D,GAAA,gBAAA1D,GAAA,OAAA8D,KAAA9D,GAAAL,EAAAsD,EAAAW,EAAAE,EAAA,SAAAA,GAAwH,MAAA9D,GAAA8D,IAAqBC,KAAA,KAAAD,GAC7I,OAAAF,IAIAjE,EAAAqE,EAAA,SAAAvE,GACA,GAAAyD,GAAAzD,KAAAkE,WACA,WAAmC,MAAAlE,GAAA,SACnC,WAAyC,MAAAA,GAEzC,OADAE,GAAAsD,EAAAC,EAAA,IAAAA,GACAA,GAIAvD,EAAAwD,EAAA,SAAAc,EAAAC,GAA8D,MAAApE,QAAAqE,UAAAC,eAAAtB,KAAAmB,EAAAC,IAG9DvE,EAAA0E,EAAA,GAIA1E,IAAA2E,EAAA,0BAKAC;;;;AAKA,SAAA9E,EAAA4C,EAAA1C,GAEA,GAAA6E,GAAAC,CAAgED,IAAA7E,uBAAA,yBAAAA,sBAAA,wBAAAA,sBAAA,6BAKhE+E,MALgED,EAAA,SAAAE,GAEhE,MAAAA,IAECC,MAAAvC,EAAAmC,MACD/E,EAAA4C,QAAAoC,IAIAI;;;;AAKA,SAAApF,EAAA4C,EAAA1C,GAEA,GAAA6E,GAAAC,CAAgED,IAAA7E,YAAA,0CAwyKhE+E,MAxyKgED,EAAA,SAAAK,GAoDhE,QAAAH,GAAAI,GACA,GAAAJ,EAAAK,GAAAD,EAAA,YACA,MAAAE,GAAAF,IAAAD,EAAAI,GAAA,kBAAAH,EACS,IAAAJ,EAAAK,GAAAD,EAAAI,GACT,MAAAR,GAAAS,QAAAvB,OAAAe,GAAAD,EAAAI,EAAAM,OAAA,IAAAV,EAAAK,GAAAD,EAAA,GAAAO,KAAAC,IAAAR,EAEA,IAAAS,GAAAC,MAAAtB,UAAAuB,MAAA5C,KAAA6C,UAAA,EACA,IAAAhB,EAAAK,GAAAQ,IAAAI,OAAA,gBACA,GAAAC,GAAAL,EAAAM,KACA,OAAAb,GAAAY,EAAA/C,KAAA6B,EAAAS,QAAAvB,OAAAe,GAAAD,EAAAa,IAAAV,EAAAI,GAAA,6BACAW,EAAA/C,KAAA6B,EAAAS,QAAAvB,OAAAe,GAAAD,EAAAa,MAGA,MAAAb,GAAAS,QAAAvB,OAAAe,GAAAD,EAAAgB,WA4UA,QAAAI,GAAAC,GACA,qBAAAA,IAAAlG,OAAAkG,OACA,MAAAA,EAEA,IAAAC,GAAA,GAAAD,GAAAE,WACA,QAAApC,KAAAkC,KAAAG,GAAArC,KACAmC,EAAAnC,GAAAiC,EAAAC,EAAAlC,IAEA,OAAAmC,GAiZA,QAAAG,GAAAjB,EAAAkB,GACA,OAAAzD,GAAA,EAAA0D,EAAAnB,EAAAS,OAA0ChD,EAAA0D,EAAQ1D,IAAA,GAAAuC,EAAAvC,KAAAyD,EAClD,MAAAlB,GAAAoB,KAAApB,EAAAE,OAAAzC,EAAA,OAGA,QAAA4D,GAAAX,EAAAY,EAAAC,GACA,QAAAC,KACA,GAAAC,GAAAnB,MAAAtB,UAAAuB,MAAA5C,KAAA6C,UAAA,GACAH,EAAAoB,EAAAC,KAAA,KACAC,EAAAH,EAAAG,MAAAH,EAAAG,UACAC,EAAAJ,EAAAI,MAAAJ,EAAAI,SACA,OAAAD,GAAAX,GAAAX,IACAY,EAAAW,EAAAvB,GACAkB,IAAAI,EAAAtB,IAAAsB,EAAAtB,KAEAuB,EAAAnB,QAAA,WAAAkB,GAAAC,EAAAC,SACAD,EAAAR,KAAAf,GACAsB,EAAAtB,GAAAK,EAAAjB,GAAA6B,EAAAG,GACAF,IAAAI,EAAAtB,IAAAsB,EAAAtB,IAEA,MAAAmB,GAkBA,QAAAM,KACA,MAAA7F,MAAA8F,IA+KA,QAAAC,GAAAC,EAAAC,GAEA,OADApE,MACAL,EAAA,EAAA0E,EAAAF,EAAAxB,OAA0C0B,EAAA,GAAAD,EAAAzE,EAAmBA,GAAA,GAC7D,GAAAyB,KACyBkD,GAAAH,EAAAxE,EAAA,GAAA4E,GAAAJ,EAAAxE,EAAA,KACA2E,GAAAH,EAAAxE,GAAA4E,GAAAJ,EAAAxE,EAAA,KACA2E,GAAAH,EAAAxE,EAAA,GAAA4E,GAAAJ,EAAAxE,EAAA,KACA2E,GAAAH,EAAAxE,EAAA,GAAA4E,GAAAJ,EAAAxE,EAAA,IAEzByE,GACAzE,EAEiB0E,EAAA,GAAA1E,EACjByB,EAAA,IAA4BkD,GAAAH,EAAA,GAAAI,GAAAJ,EAAA,IACXE,EAAA,GAAA1E,IACjByB,EAAA,IAA4BkD,GAAAH,EAAA,GAAAI,GAAAJ,EAAA,IAC5B/C,EAAA,IAA4BkD,GAAAH,EAAA,GAAAI,GAAAJ,EAAA,KAL5B/C,EAAA,IAA4BkD,GAAAH,EAAAE,EAAA,GAAAE,GAAAJ,EAAAE,EAAA,IAQ5BA,EAAA,GAAA1E,EACAyB,EAAA,GAAAA,EAAA,GACiBzB,IACjByB,EAAA,IAA4BkD,GAAAH,EAAAxE,GAAA4E,GAAAJ,EAAAxE,EAAA,KAG5BK,EAAAsD,MAAA,MACAlC,EAAA,GAAAkD,EAAA,EAAAlD,EAAA,GAAAkD,EAAAlD,EAAA,GAAAkD,GAAA,IACAlD,EAAA,GAAAmD,EAAA,EAAAnD,EAAA,GAAAmD,EAAAnD,EAAA,GAAAmD,GAAA,GACAnD,EAAA,GAAAkD,EAAA,EAAAlD,EAAA,GAAAkD,EAAAlD,EAAA,GAAAkD,GAAA,GACAlD,EAAA,GAAAmD,EAAA,EAAAnD,EAAA,GAAAmD,EAAAnD,EAAA,GAAAmD,GAAA,EACAnD,EAAA,GAAAkD,EACAlD,EAAA,GAAAmD,IAIA,MAAAvE,GA2QA,QAAAwE,GAAAhE,EAAAiE,EAAAC,EAAAC,EAAAC,GAGA,MAAApE,IADAA,IADA,EAAAiE,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,GACA,EAAAH,EAAA,GAAAC,EAAA,EAAAC,GACA,EAAAF,EAAA,EAAAC,EAEA,QAAAG,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjB,GACA,MAAAA,IACAA,EAAA,GAEAA,IAAA,IAAAA,EAAA,IAAAA,CAMA,QALAkB,GAAAlB,EAAA,EAEAmB,IAAA,8EACAC,GAAA,yEACAC,EAAA,EACA9F,EAAA,EAAuBA,EAJvB,GAI8BA,IAAA,CAC9B,GAAA+F,GAAAJ,EAAAC,EAAA5F,GAAA2F,EACAK,EAAAnB,EAAAkB,EAAAZ,EAAAE,EAAAE,EAAAE,GACAQ,EAAApB,EAAAkB,EAAAX,EAAAE,EAAAE,EAAAE,GACAQ,EAAAF,IAAAC,GACAH,IAAAD,EAAA7F,GAAAmG,EAAAC,KAAAF,GAEA,MAAAP,GAAAG,EAEA,QAAAO,GAAAlB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAY,GACA,KAAAA,EAAA,GAAApB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAY,GAAA,CAGA,GAGArG,GAFAsG,EAAA1F,GACA2F,EAFA,EAEAD,CAIA,KADAtG,EAAAiF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAc,GACAC,EAAAxG,EAAAqG,GAFA,KAGAC,GAAA,EACAC,IAAAvG,EAAAqG,EAAA,MAAAC,EACAtG,EAAAiF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAc,EAEA,OAAAA,IAEA,QAAAE,GAAAvB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,KACAiB,EAAAxB,EAAAE,GAAAuB,EAAArB,EAAAE,IACAmB,EAAAzB,EAAAE,GAAAsB,EAAApB,EAAAE,IACAkB,EAAAvB,EAAAE,GAAAsB,EAAApB,EAAAE,IACAkB,EAAAxB,EAAAE,GAAAqB,EAAAnB,EAAAE,IAJA,CAQA,GAAAmB,IAAA1B,EAAAG,EAAAF,EAAAC,IAAAE,EAAAE,IAAAN,EAAAE,IAAAE,EAAAG,EAAAF,EAAAC,GACAqB,GAAA3B,EAAAG,EAAAF,EAAAC,IAAAG,EAAAE,IAAAN,EAAAE,IAAAC,EAAAG,EAAAF,EAAAC,GACAsB,GAAA5B,EAAAE,IAAAG,EAAAE,IAAAN,EAAAE,IAAAC,EAAAE,EAEA,IAAAsB,EAAA,CAGA,GAAAC,GAAAH,EAAAE,EACAE,EAAAH,EAAAC,EACAG,GAAAF,EAAAG,QAAA,GACAC,GAAAH,EAAAE,QAAA,EACA,MACAD,GAAAN,EAAAzB,EAAAE,GAAA8B,QAAA,IACAD,GAAAP,EAAAxB,EAAAE,GAAA8B,QAAA,IACAD,GAAAN,EAAArB,EAAAE,GAAA0B,QAAA,IACAD,GAAAP,EAAApB,EAAAE,GAAA0B,QAAA,IACAC,GAAAR,EAAAxB,EAAAE,GAAA6B,QAAA,IACAC,GAAAT,EAAAvB,EAAAE,GAAA6B,QAAA,IACAC,GAAAR,EAAApB,EAAAE,GAAAyB,QAAA,IACAC,GAAAT,EAAAnB,EAAAE,GAAAyB,QAAA,IAIA,OAAgBxC,EAAAqC,EAAApC,EAAAqC,KAQhB,QAAAI,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA1F,EAAA2F,WAAAJ,GACAK,EAAA5F,EAAA2F,WAAAH,EACA,KAAAxF,EAAA6F,gBAAAH,EAAAE,GACA,MAAAH,GAAA,IAUA,QARAK,GAAA3C,EAAAlD,MAAA,EAAAsF,GACAQ,EAAA5C,EAAAlD,MAAA,EAAAuF,GACAQ,EAAApB,KAAAkB,EAAA,MACAG,EAAArB,KAAAmB,EAAA,MACAG,KACAC,KACAC,KACA9E,EAAAmE,EAAA,KACAxH,EAAA,EAAuBA,EAAA+H,EAAA,EAAY/H,IAAA,CACnC,GAAAyB,GAAAM,EAAAqG,kBAAApG,MAAAD,EAAAuF,EAAAe,OAAArI,EAAA+H,GACAE,GAAAtE,MAAwBgB,EAAAlD,EAAAkD,EAAAC,EAAAnD,EAAAmD,EAAA/D,EAAAb,EAAA+H,IAExB,IAAA/H,EAAA,EAAmBA,EAAAgI,EAAA,EAAYhI,IAC/ByB,EAAAM,EAAAqG,kBAAApG,MAAAD,EAAAwF,EAAAc,OAAArI,EAAAgI,IACAE,EAAAvE,MAAwBgB,EAAAlD,EAAAkD,EAAAC,EAAAnD,EAAAmD,EAAA/D,EAAAb,EAAAgI,GAExB,KAAAhI,EAAA,EAAmBA,EAAA+H,EAAQ/H,IAC3B,OAAAsI,GAAA,EAA2BA,EAAAN,EAAQM,IAAA,CACnC,GAAAC,GAAAN,EAAAjI,GACAwI,EAAAP,EAAAjI,EAAA,GACAyI,EAAAP,EAAAI,GACAI,EAAAR,EAAAI,EAAA,GACAK,EAAAlC,EAAA+B,EAAA7D,EAAA4D,EAAA5D,GAAA,aACAiE,EAAAnC,EAAAiC,EAAA/D,EAAA8D,EAAA9D,GAAA,aACAvC,EAAAsE,EAAA6B,EAAA5D,EAAA4D,EAAA3D,EAAA4D,EAAA7D,EAAA6D,EAAA5D,EAAA6D,EAAA9D,EAAA8D,EAAA7D,EAAA8D,EAAA/D,EAAA+D,EAAA9D,EACA,IAAAxC,EAAA,CACA,GAAA+F,EAAA/F,EAAAuC,EAAAwC,QAAA,KAAA/E,EAAAwC,EAAAuC,QAAA,GACA,QAEAgB,GAAA/F,EAAAuC,EAAAwC,QAAA,IAAA/E,EAAAwC,EAAAuC,QAAA,EACA,IAAA0B,GAAAN,EAAA1H,EAAA4F,GAAArE,EAAAuG,GAAAJ,EAAAI,KAAAH,EAAAG,GAAAJ,EAAAI,MAAAH,EAAA3H,EAAA0H,EAAA1H,GACA2F,EAAAiC,EAAA5H,EAAA4F,GAAArE,EAAAwG,GAAAH,EAAAG,KAAAF,EAAAE,GAAAH,EAAAG,MAAAF,EAAA7H,EAAA4H,EAAA5H,EACAgI,IAAA,GAAAA,GAAA,OAAArC,GAAA,GAAAA,GAAA,QACAgB,EACAnE,IAEAA,EAAAM,MACAgB,EAAAvC,EAAAuC,EACAC,EAAAxC,EAAAwC,EACAiE,GAAAjC,EAAAiC,EAAA,GACArC,GAAAI,EAAAJ,EAAA,OAOA,MAAAnD,GAgCA,QAAAyF,GAAAC,EAAAC,EAAAxB,GACAuB,EAAAhH,EAAAkH,YAAAF,GACAC,EAAAjH,EAAAkH,YAAAD,EAGA,QAFA7D,GAAAC,EAAAC,EAAAC,EAAA4D,EAAAC,EAAAC,EAAAC,EAAA/B,EAAAC,EACAlE,EAAAmE,EAAA,KACAxH,EAAA,EAAA0D,EAAAqF,EAAA/F,OAA0ChD,EAAA0D,EAAQ1D,IAAA,CAClD,GAAAsJ,GAAAP,EAAA/I,EACA,SAAAsJ,EAAA,GACAnE,EAAA+D,EAAAI,EAAA,GACAlE,EAAA+D,EAAAG,EAAA,OACa,CACb,KAAAA,EAAA,IACAhC,GAAAnC,EAAAC,GAAAiD,OAAAiB,EAAAxG,MAAA,IACAqC,EAAAmC,EAAA,GACAlC,EAAAkC,EAAA,KAEAA,GAAAnC,EAAAC,EAAAD,EAAAC,EAAA8D,EAAAC,EAAAD,EAAAC,GACAhE,EAAA+D,EACA9D,EAAA+D,EAEA,QAAAb,GAAA,EAAAiB,EAAAP,EAAAhG,OAAkDsF,EAAAiB,EAAQjB,IAAA,CAC1D,GAAAkB,GAAAR,EAAAV,EACA,SAAAkB,EAAA,GACAnE,EAAA+D,EAAAI,EAAA,GACAlE,EAAA+D,EAAAG,EAAA,OACqB,CACrB,KAAAA,EAAA,IACAjC,GAAAlC,EAAAC,GAAA+C,OAAAmB,EAAA1G,MAAA,IACAuC,EAAAkC,EAAA,GACAjC,EAAAiC,EAAA,KAEAA,GAAAlC,EAAAC,EAAAD,EAAAC,EAAA8D,EAAAC,EAAAD,EAAAC,GACAhE,EAAA+D,EACA9D,EAAA+D,EAEA,IAAAI,GAAApC,EAAAC,EAAAC,EAAAC,EACA,IAAAA,EACAnE,GAAAoG,MACyB,CACzB,OAAAC,GAAA,EAAAC,EAAAF,EAAAzG,OAA6D0G,EAAAC,EAAQD,IACrED,EAAAC,GAAAE,SAAA5J,EACAyJ,EAAAC,GAAAG,SAAAvB,EACAmB,EAAAC,GAAApC,OACAmC,EAAAC,GAAAnC,MAEAlE,KAAAgF,OAAAoB,OAMA,MAAApG,GA64BA,QAAAyG,GAAAC,EAAAC,EAAA5J,EAAAC,EAAA4J,EAAAhH,GACA,MAAA8G,GACAvL,KAAAuL,KACAvL,KAAAwL,KACAxL,KAAA4B,KACA5B,KAAA6B,KACA7B,KAAAyL,KACAzL,KAAAyE,OAEAzE,KAAAuL,EAAA,EACAvL,KAAAwL,EAAA,EACAxL,KAAA4B,EAAA,EACA5B,KAAA6B,EAAA,EACA7B,KAAAyL,EAAA,EACAzL,KAAAyE,EAAA,GA2sCA,QAAAiH,KACA,MAAA1L,MAAAmG,EAAAwF,EAAA3L,KAAAoG,EAAAuF,EAAA3L,KAAA4L,MAAA,MAAA5L,KAAA6L,OAskBA,QAAAC,GAAAzJ,EAAA0J,EAAAC,EAAAC,EAAAC,EAAAC,GAOA,QAAAC,GAAA/J,GACA,QAAAgK,EAAAhK,EAAAiK,GAAAjK,EAAAkK,GAAAlK,EAMA,QAAAmK,GAAArG,EAAAsG,GACA,GAAAC,GAAArC,EAAArC,EAAAnB,EAAA8F,EAAAnL,CACA,KAAAwG,EAAA7B,EAAA3E,EAAA,EAA8BA,EAAA,EAAOA,IAAA,CAErC,GADAqF,EAAAuF,EAAApE,GAAA7B,EACA8B,EAAApB,GAAA4F,EACA,MAAAzE,EAGA,IADA2E,GAAA,EAAAN,EAAArE,EAAA,EAAAsE,GAAAtE,EAAAuE,EACAtE,EAAA0E,GAAA,KACA,KAEA3E,IAAAnB,EAAA8F,EAKA,GAHAD,EAAA,EACArC,EAAA,GACArC,EAAA7B,GACAuG,EACA,MAAAA,EAEA,IAAA1E,EAAAqC,EACA,MAAAA,EAEA,MAAAqC,EAAArC,GAAA,CAEA,GADAxD,EAAAuF,EAAApE,GACAC,EAAApB,EAAAV,GAAAsG,EACA,MAAAzE,EAEA7B,GAAAU,EACA6F,EAAA1E,EAEAqC,EAAArC,EAEAA,GAAAqC,EAAAqC,GAAA,EAAAA,EAEA,MAAA1E,GA/CA,GAAAuE,GAAA,EAAAR,EACAO,EAAA,GAAAL,EAAAF,GAAAQ,EACAF,EAAA,EAAAE,EAAAD,EACAM,EAAA,EAAAZ,EACAa,EAAA,GAAAX,EAAAF,GAAAY,EACAE,EAAA,EAAAF,EAAAC,CA4CA,OAxCA,UAAA1G,EAAAsG,GACA,GAAApK,GAAAmK,EAAArG,EAAAsG,EACA,SAAAK,EAAAzK,EAAAwK,GAAAxK,EAAAuK,GAAAvK,GAsCAA,EAAA,OAAA8J,IAMA,QAAAY,GAAAC,EAAAC,GACA,GAAAC,MACAC,IAGA,IAFAnN,KAAAiN,KACAjN,KAAAoN,MAAA,EACAJ,EAAA,CACA,OAAAK,KAAAL,KAAAjI,GAAAsI,KACAF,EAAAG,EAAAD,IAAAL,EAAAK,GACAH,EAAA/H,KAAAmI,EAAAD,IAEAH,GAAAK,KAAAC,IAEAxN,KAAAgN,KAAAG,EACAnN,KAAAyN,IAAAP,IAAA1I,OAAA,GACAxE,KAAAkN,WAyCA,QAAAQ,GAAAV,EAAAW,EAAAC,EAAAC,EAAAC,EAAAV,GACAQ,EAAAN,EAAAM,EACA,IAAAG,GACAC,EACAC,EAEAC,EACAC,EACAC,EACAnB,EAAAD,EAAAC,GACAoB,KACAC,KACAC,IACA,IAAAV,EACA,IAAArM,EAAA,EAAA0D,EAAAsJ,GAAAhK,OAAsDhD,EAAA0D,EAAQ1D,IAAA,CAC9D,GAAAiK,GAAA+C,GAAAhN,EACA,IAAAiK,EAAAgD,GAAAC,IAAAf,EAAAe,IAAAjD,EAAAuB,QAAA,CACAvB,EAAAmC,YACAY,GAAAvK,OAAAzC,EAAA,GACAyM,EAAA,GAEAD,EAAAvC,EAEAkC,EAAAN,KAAA5B,EAAAqC,YACA,YAIAD,IAAAS,CAEA,QAAA9M,GAAA,EAAA0D,EAAA8H,EAAAE,SAAA1I,OAAkDhD,EAAA0D,EAAQ1D,IAAA,CAC1D,GAAAwL,EAAAE,SAAA1L,IAAAoM,GAAAZ,EAAAE,SAAA1L,GAAAqM,EAAAb,EAAAS,IAAA,CACAG,EAAAZ,EAAAE,SAAA1L,GACA2M,EAAAnB,EAAAE,SAAA1L,EAAA,MACAyL,IAAAD,EAAAS,KAAAG,EAAAO,GACAD,EAAAlB,EAAAE,SAAA1L,EAAA,GACAuM,EAAAf,OAAAY,EACA,OACaC,GACbF,EAAAN,KAAAL,SAAAE,SAAA1L,KAGA,GAAAuM,EAAA,CAGA,GAAAC,EA4JAA,EAAAW,WAAAd,EACAG,EAAAY,MAAA,GAAAC,MAAAb,EAAAf,GAAAY,MA7JA,CACA,OAAAR,KAAAU,GAAA,GAAAA,EAAAhJ,GAAAsI,KACAyB,GAAA/J,GAAAsI,IAAAM,EAAAoB,MAAAC,iBAAAjK,GAAAsI,IAIA,OAHAgB,EAAAhB,GAAAM,EAAAN,QACA,MAAAgB,EAAAhB,KAAAgB,EAAAhB,GAAA4B,GAAA5B,IACAiB,EAAAjB,GAAAU,EAAAV,GACAyB,GAAAzB,IACA,IAAAnJ,GACAqK,EAAAlB,IAAAiB,EAAAjB,GAAAgB,EAAAhB,IAAAJ,CACA,MACA,cACAoB,EAAAhB,GAAA9J,EAAA2L,OAAAb,EAAAhB,GACA,IAAA8B,GAAA5L,EAAA2L,OAAAZ,EAAAjB,GACAkB,GAAAlB,IACAnL,GAAAiN,EAAAjN,EAAAmM,EAAAhB,GAAAnL,GAAA+K,EACAmC,GAAAD,EAAAC,EAAAf,EAAAhB,GAAA+B,GAAAnC,EACAzB,GAAA2D,EAAA3D,EAAA6C,EAAAhB,GAAA7B,GAAAyB,EAEA,MACA,YACA,GAAAoC,GAAAC,GAAAjB,EAAAhB,GAAAiB,EAAAjB,IACAkC,EAAAF,EAAA,EAGA,KAFAhB,EAAAhB,GAAAgC,EAAA,GACAd,EAAAlB,MACA7L,EAAA,EAAA0D,EAAAmJ,EAAAhB,GAAA7I,OAA+DhD,EAAA0D,EAAQ1D,IAAA,CACvE+M,EAAAlB,GAAA7L,IAAA,EACA,QAAAsI,GAAA,EAAAiB,EAAAsD,EAAAhB,GAAA7L,GAAAgD,OAA0EsF,EAAAiB,EAAQjB,IAClFyE,EAAAlB,GAAA7L,GAAAsI,IAAAyF,EAAA/N,GAAAsI,GAAAuE,EAAAhB,GAAA7L,GAAAsI,IAAAmD,EAGA,KACA,iBACA,GAAAuC,GAAA7B,EAAA6B,EACAC,EAAAC,GAAAF,EAAAnC,GAAAiB,EAAAjB,GACA,IAAAoC,EAKA,IAJApB,EAAAhB,GAAAoC,EAAApB,KACAC,EAAAjB,GAAAoC,EAAAnB,GACAC,EAAAlB,MACAkB,EAAAlB,GAAAsC,MAAA,EACAnO,EAAA,EAAA0D,EAAAmJ,EAAAhB,GAAA7I,OAAmEhD,EAAA0D,EAAQ1D,IAE3E,IADA+M,EAAAlB,GAAA7L,IAAA6M,EAAAhB,GAAA7L,GAAA,IACAsI,EAAA,EAAAiB,EAAAsD,EAAAhB,GAAA7L,GAAAgD,OAA0EsF,EAAAiB,EAAQjB,IAClFyE,EAAAlB,GAAA7L,GAAAsI,IAAAwE,EAAAjB,GAAA7L,GAAAsI,GAAAuE,EAAAhB,GAAA7L,GAAAsI,IAAAmD,MAG6B,CAC7B,GAAAtL,GAAAgM,EAAAiC,QAAA,GAAAtE,GACAuE,GACAL,GAA4CM,UAAAN,EAAAM,WAC5CC,QAAA,WACA,MAAApC,GAAAoC,QAAA,IAGA1B,GAAAhB,IACA1L,EAAA4J,EACA5J,EAAA6J,EACA7J,EAAAC,EACAD,EAAAE,EACAF,EAAA8J,EACA9J,EAAA8C,GAEAuL,GAAAH,EAAAvB,EAAAjB,IACAiB,EAAAjB,GAAAwC,EAAAL,EAAAM,UACAvB,EAAAlB,KACAwC,EAAAD,OAAArE,EAAA5J,EAAA4J,GAAA0B,GACA4C,EAAAD,OAAApE,EAAA7J,EAAA6J,GAAAyB,GACA4C,EAAAD,OAAAhO,EAAAD,EAAAC,GAAAqL,GACA4C,EAAAD,OAAA/N,EAAAF,EAAAE,GAAAoL,GACA4C,EAAAD,OAAAnE,EAAA9J,EAAA8J,GAAAwB,GACA4C,EAAAD,OAAAnL,EAAA9C,EAAA8C,GAAAwI,GAaA,KACA,WACA,GAAAgD,GAAAC,EAAAnC,EAAAV,IAAA8C,GAAAC,GACAC,EAAAH,EAAA7B,EAAAhB,IAAA8C,GAAAC,EACA,iBAAA/C,EAIA,IAHAgB,EAAAhB,GAAAgD,EACA9B,EAAAlB,MACA7L,EAAA6O,EAAA7L,OACAhD,KACA+M,EAAAlB,GAAA7L,IAAAyO,EAAAzO,GAAA6M,EAAAhB,GAAA7L,IAAAyL,CAGAqB,GAAAjB,GAAA4C,CACA,MACA,SAKA,IAJAA,KAAApG,GAAAkE,EAAAV,IACAgD,KAAAxG,GAAAwE,EAAAhB,IACAkB,EAAAlB,MACA7L,EAAAmM,EAAAoB,MAAAC,iBAAA3B,GAAA7I,OACAhD,KACA+M,EAAAlB,GAAA7L,KAAAyO,EAAAzO,IAAA,IAAA6O,EAAA7O,IAAA,IAAAyL,EAMA,GAAAqD,GAAAvC,EAAAuC,OACAC,EAAAhN,EAAAiN,gBAAAF,EACA,KAAAC,EAEA,IADAA,EAAAL,EAAAI,GAAAG,MAAAC,KACA,GAAAH,EAAA/L,OAAA,CACA,GAAAmM,GAAAJ,CACAA,GAAA,SAAAlO,GACA,MAAAyJ,GAAAzJ,GAAAsO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAA1D,QAGAsD,GAAAK,EA0BA,IAvBAxC,EAAAL,EAAAa,OAAA5B,EAAA4B,QAAA,GAAAC,MACApD,GACAuB,OACAY,UACAQ,YACAQ,MAAAR,GAAApB,EAAA6D,KAAA,GACAhD,OAAA,EACAc,WAAAd,GAAA,EACAiD,MAAA,EACA7D,KACAqD,OAAAC,EACAlC,OACAE,OACAD,KACAG,GAAAd,EACAoD,SAAAhD,EAAAgD,SACA5C,OACAD,OACA8C,OAAA5D,GAAAJ,EAAAI,MACA6D,OAAAtD,EAAAN,OACAS,eAEAU,GAAArJ,KAAAsG,GACAoC,IAAAG,IAAAC,IACAxC,EAAAqF,MAAA,EACArF,EAAAmD,MAAA,GAAAC,MAAA5B,EAAAY,EACA,GAAAW,GAAAhK,QACA,MAAA0M,KAGAjD,KACAxC,EAAAmD,MAAA,GAAAC,MAAApD,EAAAwB,GAAAY,GAEA,GAAAW,GAAAhK,QAAA2M,GAAAD,IAKAxN,EAAA,sBAAAiK,EAAAe,GAAAf,EAAAX,IAyNA,QAAAoE,GAAArC,GACA,OAAAvN,GAAA,EAAuBA,EAAAgN,GAAAhK,OAA8BhD,IAAAgN,GAAAhN,GAAAiN,GAAAM,UACrDP,GAAAvK,OAAAzC,IAAA,GAjoJA+B,EAAA8N,QAAA,QACA9N,EAAAG,KACA,IAAAG,GAiDAyN,EAhDAlB,EAAA,QACAmB,GAAoBC,OAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,MAAA,GACpBC,EAAA,aAEA/M,EAAA,iBACAqK,GACA2C,IAAAC,SACAC,IAAA7Q,QAEA8Q,GACAC,IAAAzT,OAAAqE,UAAAgC,GAAArD,KAAA0N,EAAA6C,IAAA,WACArO,GAAAwL,EAAA6C,IAAAG,SAEAC,EAAA,WAiCArS,KAAAsS,GAAAtS,KAAAgP,qBAIAxL,EAAA,QACAqG,EAAA,SAEA0I,EAAA,gBAAAnR,gBAAAoR,YAAApR,OAAAqR,eAAAT,mBAAAS,eACAC,EAAA,GACA/G,EAAA,IACAuE,EAAA5Q,OACA6Q,EAAA,QACAwC,EAAA,0GAAAxC,GAAAxE,GACAiH,GACAC,UAAA,aACAC,UAAA,YACAC,QAAA,YAEAC,EAAA9C,EAAAnN,UAAAkQ,YACAtL,EAAAuL,KACA/K,EAAAR,EAAAwL,IACA/K,EAAAT,EAAAyL,IACAnL,EAAAN,EAAAM,IACAoL,EAAA1L,EAAA0L,IACAC,EAAA3L,EAAA2L,GACApP,EAAA,SAEAH,EAAA,QAGAwP,EAAA7U,OAAAqE,UAAAyQ,SAIAC,GADAlQ,EAAAmQ,OAAA,4BACA,oTACAC,GAAiBC,IAAA,EAAAC,SAAA,EAAAC,YAAA,GACjBpD,EAAA,yDACAqD,EAAApM,EAAAoM,MAEAzG,EAAA0G,WACAC,EAAAC,SACAC,EAAAjE,EAAAnN,UAAAqR,YACAnF,GAAA1L,EAAA8Q,iBACAC,YAAA,OACAC,cAAA,OACAC,KAAA,EACAC,YAAA,cACAC,OAAA,UACAnI,GAAA,EACAK,GAAA,EACA+H,KAAA,OACAC,eAAA,EACAC,KAAA,eACAC,cAAA,UACAC,YAAA,KACAC,aAAA,SACAC,cAAA,IACAC,SAAA,EACArJ,OAAA,EACAsJ,KAAA,wBACAC,iBAAA,EACAC,QAAA,EACA3D,KAAA,OACAxP,EAAA,EACAoT,GAAA,EACAC,GAAA,EACAC,IAAA,GACAC,OAAA,OACAC,mBAAA,GACAC,iBAAA,OACAC,kBAAA,OACAC,oBAAA,EACAC,iBAAA,EACAC,eAAA,EACAC,OAAA,SACAC,cAAA,SACA5W,MAAA,UACAyQ,UAAA,GACAlE,MAAA,EACAzF,EAAA,EACAC,EAAA,EACA8P,MAAA,IAEApH,GAAAvL,EAAA4S,qBACA3B,KAAAtQ,EACAuQ,YAAA,MACAlI,GAAArI,EACA0I,GAAA1I,EACAyQ,KAAA,SACAC,eAAA1Q,EACA6Q,YAAA7Q,EACA2H,OAAA3H,EACAmR,QAAAnR,EACAwN,KAAA,OACAxP,EAAAgC,EACAoR,GAAApR,EACAqR,GAAArR,EACAuR,OAAA,SACAK,iBAAA5R,EACA6R,eAAA7R,EACA4L,UAAA,YACAlE,MAAA1H,EACAiC,EAAAjC,EACAkC,EAAAlC,GAGAkS,GAAA,0RACAC,IAAgBC,GAAA,EAAAC,GAAA,GAChBC,GAAA,yBACAC,GAAA,udACAC,GAAA,gdACAC,GAAA,yTAEAC,IADArT,EAAAsT,iBAAA,0TAKArJ,GAAA,SAAAjC,EAAAC,GACA,MAAA8B,GAAA/B,GAAA+B,EAAA9B,IAGAoF,GAAA,SAAAzK,GACA,MAAAA,IAEA2Q,GAAAvT,EAAAwT,UAAA,SAAA5Q,EAAAC,EAAA4Q,EAAAC,EAAA/U,GACA,MAAAA,KACA,IAAAiE,EAAAjE,EAAAkE,IAAA,IAAA4Q,EAAA,EAAA9U,EAAA,QAAAA,IAAA,MAAAA,MAAA,MAAA+U,EAAA,EAAA/U,IAAA,IAAAA,IAAA,OAAAA,MAAA,MAAAA,EAAA8U,EAAA,QAAA9U,IAAA,OAAAA,OAAA,QAAAA,EAAA+U,IAAA,IAAA/U,IAAA,MAAAA,OAAA,QAEA,IAAAiE,EAAAC,IAAA,IAAA4Q,EAAA,UAAAC,IAAA,KAAAD,EAAA,WAEAE,GAAA,SAAA/Q,EAAAC,EAAAkP,EAAAC,GAIA,MAHA,OAAAA,IACAA,EAAAD,KAEA,IAAAnP,EAAAC,IAAA,OAAAmP,IAAA,IAAAD,EAAAC,EAAA,UAAAA,IAAA,IAAAD,EAAAC,EAAA,WAAAA,IAAA,OAEA4B,GAAA5T,EAAA6T,UACA1F,KAAA,SAAAjD,GACA,MAAAA,GAAApB,KAAA,SAEAmE,OAAA,SAAA/C,GACA,GAAAlD,GAAAkD,EAAAnO,KACA,OAAA4W,IAAA3L,EAAAgB,GAAAhB,EAAAqB,GAAArB,EAAArJ,IAEAyP,QAAA,SAAAlD,GACA,GAAAlD,GAAAkD,EAAAnO,KACA,OAAA4W,IAAA3L,EAAAgB,GAAAhB,EAAAqB,GAAArB,EAAA+J,GAAA/J,EAAAgK,KAEA9D,KAAA,SAAAhD,GACA,GAAAlD,GAAAkD,EAAAnO,KACA,OAAAwW,IAAAvL,EAAApF,EAAAoF,EAAAnF,EAAAmF,EAAAK,MAAAL,EAAAM,OAAAN,EAAArJ,IAEA2P,MAAA,SAAApD,GACA,GAAAlD,GAAAkD,EAAAnO,KACA,OAAAwW,IAAAvL,EAAApF,EAAAoF,EAAAnF,EAAAmF,EAAAK,MAAAL,EAAAM,SAEA+F,KAAA,SAAAnD,GACA,GAAA4I,GAAA5I,EAAA6I,UACA,OAAAR,IAAAO,EAAAlR,EAAAkR,EAAAjR,EAAAiR,EAAAzL,MAAAyL,EAAAxL,SAEA0L,IAAA,SAAA9I,GACA,GAAA4I,GAAA5I,EAAA6I,UACA,OAAAR,IAAAO,EAAAlR,EAAAkR,EAAAjR,EAAAiR,EAAAzL,MAAAyL,EAAAxL,UAaA2L,GAAAjU,EAAAiU,QAAA,SAAA9F,EAAA9B,GACA,IAAAA,EACA,MAAA8B,EAEA,IAAAvL,GAAAC,EAAA5E,EAAAsI,EAAA5E,EAAA6F,EAAA0M,CAEA,KADA/F,EAAApC,GAAAoC,GACAlQ,EAAA,EAAA0D,EAAAwM,EAAAlN,OAAyChD,EAAA0D,EAAQ1D,IAEjD,IADAiW,EAAA/F,EAAAlQ,GACAsI,EAAA,EAAAiB,EAAA0M,EAAAjT,OAA8CsF,EAAAiB,EAAQjB,GAAA,EACtD3D,EAAAyJ,EAAAzJ,EAAAsR,EAAA3N,GAAA2N,EAAA3N,EAAA,IACA1D,EAAAwJ,EAAAxJ,EAAAqR,EAAA3N,GAAA2N,EAAA3N,EAAA,IACA2N,EAAA3N,GAAA3D,EACAsR,EAAA3N,EAAA,GAAA1D,CAGA,OAAAsL,GAWA,IARAnO,EAAAmU,GAAAtI,EAOA7L,EAAA3C,KAAAwO,EAAA6C,IAAA0F,UAAAvI,EAAA2C,IAAA6F,eAAAC,WAAA,uEACA,OAAAtU,EAAA3C,KAAA,CACA,GACA4K,IADA3J,GAAAuN,EAAA2C,IAAA+F,cAAA,MAKA,IAHAjW,GAAAkW,UAAA,qBACAvM,GAAA3J,GAAAmW,WACAxM,GAAAyM,MAAAC,SAAA,qBACA1M,IAAA,gBAAAA,IAAA2M,IACA,MAAA5U,GAAA3C,KAAA8R,CAEA7Q,IAAA,KAcA0B,EAAA6U,MAAA7U,EAAA8U,IAAA,OAAA9U,EAAA3C,MACA2C,EAAA+U,OAAAjG,EA2BA9O,EAAAgV,GAAAjH,EAAAe,EAAAtP,UAAAQ,EAAAR,UACAQ,EAAAiV,IAAA,EAWAjV,EAAAK,GAAA,SAAA7B,EAAAnB,GAEA,MADAA,GAAAoS,EAAAtR,KAAAd,GACA,UAAAA,GACA+S,EAAA5O,IAAAhD,GAEA,SAAAnB,EACAmB,YAAAsC,OAEA,QAAAzD,GAAA,OAAAmB,GACAnB,SAAAmB,IAAA,OAAAA,GACA,UAAAnB,GAAAmB,IAAArD,OAAAqD,IACA,SAAAnB,GAAAyD,MAAAoU,SAAApU,MAAAoU,QAAA1W,IACAwR,EAAA7R,KAAAK,GAAAuC,MAAA,MAAA2O,eAAArS,GA4BA2C,EAAAmV,MAAA,SAAA/R,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,SAAAD,EAAA,CACA,GAAAZ,GAAAQ,EAAAE,EACAT,EAAAQ,EAAAE,CACA,OAAAX,IAAAC,GAGA,QAAAuB,EAAAgR,OAAAvS,GAAAD,GAAAmN,EAAA,SAFA,EAIA,MAAA/P,GAAAmV,MAAA/R,EAAAC,EAAAG,EAAAC,GAAAzD,EAAAmV,MAAA7R,EAAAC,EAAAC,EAAAC,IAYAzD,EAAAqV,IAAA,SAAAC,GACA,MAAAA,GAAA,IAAAvF,EAAA,KAWA/P,EAAAsV,IAAA,SAAAD,GACA,MAAA1F,MAAAa,MAAA,IAAA6E,EAAAtF,EAAA,cAaA/P,EAAAuV,OAAA,SAAA7I,EAAArR,EAAAma,GAEA,GADAA,EAAAxV,EAAAK,GAAAmV,EAAA,UAAAA,EAAA,GACAxV,EAAAK,GAAAqM,EAAAlM,IAEA,IADA,GAAAvC,GAAAyO,EAAAzL,OACAhD,KAAA,GAAAyG,EAAAgI,EAAAzO,GAAA5C,IAAAma,EACA,MAAA9I,GAAAzO,OAES,CACTyO,IACA,IAAA+I,GAAApa,EAAAqR,CACA,IAAA+I,EAAAD,EACA,MAAAna,GAAAoa,CAEA,IAAAA,EAAA/I,EAAA8I,EACA,MAAAna,GAAAoa,EAAA/I,EAGA,MAAArR,GASA2E,GAAA0V,WAAA,SAAAC,EAAAC,GACA,kBACA,6CAAAC,QAAAF,EAAAC,GAAA/E,gBAEK,iBAAAxS,GACL,GAAAM,GAAA,GAAAyF,EAAA0R,SAAA,CAEA,QADA,KAAAzX,EAAAM,EAAA,EAAAA,EAAA,GACAsR,SAAA,KAWAjQ,GAAA+V,UAAA,SAAAC,GACA7V,EAAA,oBAAAH,EAAA6L,EAAA6C,IAAAsH,GACAnK,EAAA6C,IAAAsH,EACAnK,EAAA2C,IAAA3C,EAAA6C,IAAAD,SACAzO,EAAAS,QAAAwV,SACAjW,EAAAS,QAAAwV,QAAApK,EAAA6C,KAGA,IAAAwH,IAAA,SAAAC,GACA,GAAAnW,EAAA8U,IAAA,CAEA,GACAsB,GADAC,EAAA,YAEA,KACA,GAAAC,GAAA,GAAAC,eAAA,WACAD,GAAAE,MAAA,UACAF,EAAAG,QACAL,EAAAE,EAAAI,KACa,MAAAxO,GACbkO,EAAAO,cAAAlI,SAAAiI,KAEA,GAAAE,GAAAR,EAAAS,iBACAX,IAAArU,EAAA,SAAAsU,GACA,IACAC,EAAA1B,MAAAyB,MAAAxJ,EAAAwJ,GAAAN,QAAAQ,EAAAlH,EACA,IAAA9T,GAAAub,EAAAE,kBAAA,YAEA,OADAzb,IAAA,IAAAA,IAAA,SAAAA,GAAA,SAAAA,KAAA,GACA,cAAAA,EAAA4U,SAAA,KAAAlP,OAAA,GACiB,MAAAmH,GACjB,oBAGS,CACT,GAAAjK,GAAA4N,EAAA2C,IAAA+F,cAAA,IACAtW,GAAAnC,MAAA,wBACAmC,EAAAyW,MAAAqC,QAAA,OACAlL,EAAA2C,IAAAkI,KAAAM,YAAA/Y,GACAiY,GAAArU,EAAA,SAAAsU,GAEA,MADAlY,GAAAyW,MAAAyB,QACAtK,EAAA2C,IAAAyI,YAAAC,iBAAAjZ,EAAAkR,GAAAgI,iBAAA,WAGA,MAAAjB,IAAAC,IAEAiB,GAAA,WACA,cAAA3a,KAAAiX,EAAAjX,KAAAkD,EAAAlD,KAAAwL,GAAA,KAEAoP,GAAA,WACA,cAAA5a,KAAAiX,EAAAjX,KAAAkD,EAAAlD,KAAAyB,GAAA,KAEAoZ,GAAA,WACA,MAAA7a,MAAA8F,KAEAgV,GAAA,SAAA5Y,EAAAkN,EAAA5D,GAMA,GALA,MAAA4D,GAAA7L,EAAAK,GAAA1B,EAAA,gBAAAA,IAAA,KAAAA,IAAA,KAAAA,KACAsJ,EAAAtJ,EAAAsJ,EACA4D,EAAAlN,EAAAkN,EACAlN,OAEA,MAAAkN,GAAA7L,EAAAK,GAAA1B,EA5aA,UA4aA,CACA,GAAA6Y,GAAAxX,EAAA2L,OAAAhN,EACAA,GAAA6Y,EAAA7Y,EACAkN,EAAA2L,EAAA3L,EACA5D,EAAAuP,EAAAvP,EAQA,OANAtJ,EAAA,GAAAkN,EAAA,GAAA5D,EAAA,KACAtJ,GAAA,IACAkN,GAAA,IACA5D,GAAA,MAGAtJ,EAAAkN,EAAA5D,IAEAwP,GAAA,SAAA9Y,EAAAkN,EAAA5D,EAAAzJ,GACAG,GAAA,IACAkN,GAAA,IACA5D,GAAA,GACA,IAAAyP,IACA/Y,IACAkN,IACA5D,IACA1F,IAAAvC,EAAA0X,IAAA/Y,EAAAkN,EAAA5D,GACAgI,SAAAqH,GAGA,OADAtX,GAAAK,GAAA7B,EAAA,YAAAkZ,EAAA5F,QAAAtT,GACAkZ,EAuBA1X,GAAAmW,MAAA,SAAAqB,GACA,GAAAE,EA8BA,OA7BA1X,GAAAK,GAAAmX,EAAA,gBAAAA,IAAA,KAAAA,IAAA,KAAAA,IACAE,EAAA1X,EAAA2X,QAAAH,GACAA,EAAA7Y,EAAA+Y,EAAA/Y,EACA6Y,EAAA3L,EAAA6L,EAAA7L,EACA2L,EAAAvP,EAAAyP,EAAAzP,EACAuP,EAAAjV,IAAAmV,EAAAnV,KACSvC,EAAAK,GAAAmX,EAAA,gBAAAA,IAAA,KAAAA,IAAA,KAAAA,IACTE,EAAA1X,EAAA4X,QAAAJ,GACAA,EAAA7Y,EAAA+Y,EAAA/Y,EACA6Y,EAAA3L,EAAA6L,EAAA7L,EACA2L,EAAAvP,EAAAyP,EAAAzP,EACAuP,EAAAjV,IAAAmV,EAAAnV,MAEAvC,EAAAK,GAAAmX,EAAA,YACAA,EAAAxX,EAAA2L,OAAA6L,IAEAxX,EAAAK,GAAAmX,EAAA,gBAAAA,IAAA,KAAAA,IAAA,KAAAA,IACAE,EAAA1X,EAAA6X,QAAAL,GACAA,EAAA9D,EAAAgE,EAAAhE,EACA8D,EAAA7X,EAAA+X,EAAA/X,EACA6X,EAAAtZ,EAAAwZ,EAAAxZ,EACAwZ,EAAA1X,EAAA8X,QAAAN,GACAA,EAAAO,EAAAL,EAAAzP,IAEAuP,GAAuBjV,IAAA,QACvBiV,EAAA7Y,EAAA6Y,EAAA3L,EAAA2L,EAAAvP,EAAAuP,EAAA9D,EAAA8D,EAAA7X,EAAA6X,EAAAO,EAAAP,EAAAtZ,GAAA,IAGAsZ,EAAAvH,SAAAqH,GACAE,GAmBAxX,EAAA2X,QAAA,SAAAjE,EAAA/T,EAAAoY,EAAAvZ,GACA/B,KAAA4D,GAAAqT,EAAA,gBAAAA,IAAA,KAAAA,IAAA,KAAAA,KACAqE,EAAArE,EAAAzL,EACAtI,EAAA+T,EAAA/T,EACAnB,EAAAkV,EAAAlV,EACAkV,OAEAA,GAAA,GACA,IAAA1T,GAAAgY,EAAAC,EAAAC,EAAAC,CAUA,OATAzE,KAAA,OACAyE,EAAAJ,EAAApY,EACAuY,EAAAC,GAAA,EAAAzT,EAAAgP,EAAA,MACA1T,EAAAgY,EAAAC,EAAAF,EAAAI,EAEAzE,MACA1T,IAAAmY,EAAAD,EAAA,IAAAA,EAAAC,GAAAzE,GACAsE,IAAAE,EAAAC,IAAAD,EAAA,KAAAxE,GACAuE,IAAA,IAAAC,EAAAC,IAAAD,GAAAxE,GACA+D,GAAAzX,EAAAgY,EAAAC,EAAAzZ,IAmBAwB,EAAA4X,QAAA,SAAAlE,EAAA/T,EAAAzB,EAAAM,GACA/B,KAAA4D,GAAAqT,EAAA,gBAAAA,IAAA,KAAAA,IAAA,KAAAA,KACAxV,EAAAwV,EAAAxV,EACAyB,EAAA+T,EAAA/T,EACA+T,QAEAA,EAAA,GAAA/T,EAAA,GAAAzB,EAAA,KACAwV,GAAA,IACA/T,GAAA,IACAzB,GAAA,KAEAwV,GAAA,GACA,IAAA1T,GAAAgY,EAAAC,EAAAC,EAAAC,CAUA,OATAzE,KAAA,OACAyE,EAAA,EAAAxY,GAAAzB,EAAA,GAAAA,EAAA,EAAAA,GACAga,EAAAC,GAAA,EAAAzT,EAAAgP,EAAA,MACA1T,EAAAgY,EAAAC,EAAA/Z,EAAAia,EAAA,EAEAzE,MACA1T,IAAAmY,EAAAD,EAAA,IAAAA,EAAAC,GAAAzE,GACAsE,IAAAE,EAAAC,IAAAD,EAAA,KAAAxE,GACAuE,IAAA,IAAAC,EAAAC,IAAAD,GAAAxE,GACA+D,GAAAzX,EAAAgY,EAAAC,EAAAzZ,IAkBAwB,EAAA8X,QAAA,SAAAnZ,EAAAkN,EAAA5D,GACAA,EAAAsP,GAAA5Y,EAAAkN,EAAA5D,GACAtJ,EAAAsJ,EAAA,GACA4D,EAAA5D,EAAA,GACAA,IAAA,EAEA,IAAAmQ,GAAAhQ,EAAAiQ,EAAAF,CAUA,OATAE,GAAAzT,EAAAjG,EAAAkN,EAAA5D,GACAkQ,EAAAE,EAAAxT,EAAAlG,EAAAkN,EAAA5D,GACAmQ,EAAA,GAAAD,EAAA,KACAE,GAAA1Z,GAAAkN,EAAA5D,GAAAkQ,EACAE,GAAAxM,GAAA5D,EAAAtJ,GAAAwZ,EAAA,GACAxZ,EAAAkN,GAAAsM,EAAA,EAEAC,KAAA,cACAhQ,EAAA,GAAA+P,EAAA,EAAAA,EAAAE,GACgB3E,EAAA0E,EAAAzY,EAAAyI,EAAAH,EAAAoQ,EAAApI,SAAAmH,KAkBhBpX,EAAA6X,QAAA,SAAAlZ,EAAAkN,EAAA5D,GACAA,EAAAsP,GAAA5Y,EAAAkN,EAAA5D,GACAtJ,EAAAsJ,EAAA,GACA4D,EAAA5D,EAAA,GACAA,IAAA,EAEA,IAAAmQ,GAAAhQ,EAAAkQ,EAAAC,EAAAna,EAAA+Z,CAaA,OAZAI,GAAA3T,EAAAjG,EAAAkN,EAAA5D,GACA7J,EAAAyG,EAAAlG,EAAAkN,EAAA5D,GACAkQ,EAAAI,EAAAna,EACAga,EAAA,GAAAD,EAAA,KACAI,GAAA5Z,GAAAkN,EAAA5D,GAAAkQ,EACAI,GAAA1M,GAAA5D,EAAAtJ,GAAAwZ,EAAA,GACAxZ,EAAAkN,GAAAsM,EAAA,EACAC,KAAA,cACAE,GAAAC,EAAAna,GAAA,EACAgK,EAAA,GAAA+P,EAAA,EACAG,EAAA,GAAAH,GAAA,EAAAG,GACAH,GAAA,IAAAG,IACgB5E,EAAA0E,EAAAzY,EAAAyI,EAAAlK,EAAAoa,EAAArI,SAAAoH,KAEhBrX,EAAAwY,aAAA,WACA,MAAA/b,MAAAyF,KAAA,KAAA2T,QAAA5C,GAAA,MAyBAjT,GAAAyY,SAAA,SAAAxG,EAAA/Q,GACA,GAAAwX,GAAA7M,EAAA2C,IAAA+F,cAAA,MACAmE,GAAAhE,MAAAiE,QAAA,6CACAD,EAAAE,OAAA,WACA1X,EAAA/C,KAAA1B,MACAA,KAAAmc,OAAA,KACA/M,EAAA2C,IAAAkI,KAAAmC,YAAApc,OAEAic,EAAAI,QAAA,WACAjN,EAAA2C,IAAAkI,KAAAmC,YAAApc,OAEAoP,EAAA2C,IAAAkI,KAAAM,YAAA0B,GACAA,EAAAzG,MAkCAjS,GAAA2L,OAAA9J,EAAA,SAAAkX,GACA,IAAAA,MAAApM,EAAAoM,IAAAC,QAAA,OACA,OAAoBra,GAAA,EAAAkN,GAAA,EAAA5D,GAAA,EAAA1F,IAAA,OAAA0W,MAAA,EAAAhJ,SAAA3N,EAEpB,YAAAyW,EACA,OAAoBpa,GAAA,EAAAkN,GAAA,EAAA5D,GAAA,EAAA1F,IAAA,OAAA0N,SAAA3N,KAEpBwQ,GAAAtR,GAAAuX,EAAArJ,cAAAwJ,UAAA,YAAAH,EAAAI,YAAAJ,EAAA7C,GAAA6C,GACA,IACAK,GACAC,EACAC,EACAxH,EACAhT,EACA4N,EACAgL,EAAAqB,EAAA7L,MAAAgD,EACA,OAAAwH,IACAA,EAAA,KACA4B,EAAA5I,EAAAgH,EAAA,GAAAwB,UAAA,OACAG,EAAA3I,EAAAgH,EAAA,GAAAwB,UAAA,SACAE,EAAA1I,EAAAgH,EAAA,GAAAwB,UAAA,UAEAxB,EAAA,KACA4B,EAAA5I,GAAA5R,EAAA4Y,EAAA,GAAAyB,OAAA,IAAAra,EAAA,IACAua,EAAA3I,GAAA5R,EAAA4Y,EAAA,GAAAyB,OAAA,IAAAra,EAAA,IACAsa,EAAA1I,GAAA5R,EAAA4Y,EAAA,GAAAyB,OAAA,IAAAra,EAAA,KAEA4Y,EAAA,KACAhL,EAAAgL,EAAA,GAAA9K,GAAAiG,IACAuG,EAAArP,EAAA2C,EAAA,IACA,KAAAA,EAAA,GAAA3L,OAAA,KAAAqY,GAAA,MACAC,EAAAtP,EAAA2C,EAAA,IACA,KAAAA,EAAA,GAAA3L,OAAA,KAAAsY,GAAA,MACAC,EAAAvP,EAAA2C,EAAA,IACA,KAAAA,EAAA,GAAA3L,OAAA,KAAAuY,GAAA,MACA,QAAA5B,EAAA,GAAAhI,cAAA3O,MAAA,OAAA+Q,EAAA/H,EAAA2C,EAAA,KACAA,EAAA,SAAAA,EAAA,GAAA3L,OAAA,KAAA+Q,GAAA,MAEA4F,EAAA,IACAhL,EAAAgL,EAAA,GAAA9K,GAAAiG,IACAuG,EAAArP,EAAA2C,EAAA,IACA,KAAAA,EAAA,GAAA3L,OAAA,KAAAqY,GAAA,MACAC,EAAAtP,EAAA2C,EAAA,IACA,KAAAA,EAAA,GAAA3L,OAAA,KAAAsY,GAAA,MACAC,EAAAvP,EAAA2C,EAAA,IACA,KAAAA,EAAA,GAAA3L,OAAA,KAAAuY,GAAA,OACA,OAAA5M,EAAA,GAAA3L,OAAA,SAAA2L,EAAA,GAAA3L,OAAA,MAAAqY,GAAA,KACA,QAAA1B,EAAA,GAAAhI,cAAA3O,MAAA,OAAA+Q,EAAA/H,EAAA2C,EAAA,KACAA,EAAA,SAAAA,EAAA,GAAA3L,OAAA,KAAA+Q,GAAA,KACA9R,EAAA2X,QAAAyB,EAAAC,EAAAC,EAAAxH,IAEA4F,EAAA,IACAhL,EAAAgL,EAAA,GAAA9K,GAAAiG,IACAuG,EAAArP,EAAA2C,EAAA,IACA,KAAAA,EAAA,GAAA3L,OAAA,KAAAqY,GAAA,MACAC,EAAAtP,EAAA2C,EAAA,IACA,KAAAA,EAAA,GAAA3L,OAAA,KAAAsY,GAAA,MACAC,EAAAvP,EAAA2C,EAAA,IACA,KAAAA,EAAA,GAAA3L,OAAA,KAAAuY,GAAA,OACA,OAAA5M,EAAA,GAAA3L,OAAA,SAAA2L,EAAA,GAAA3L,OAAA,MAAAqY,GAAA,KACA,QAAA1B,EAAA,GAAAhI,cAAA3O,MAAA,OAAA+Q,EAAA/H,EAAA2C,EAAA,KACAA,EAAA,SAAAA,EAAA,GAAA3L,OAAA,KAAA+Q,GAAA,KACA9R,EAAA4X,QAAAwB,EAAAC,EAAAC,EAAAxH,KAEA4F,GAAmB/Y,EAAAya,EAAAvN,EAAAwN,EAAApR,EAAAqR,EAAArJ,SAAA3N,GACnBoV,EAAAnV,IAAA,cAAA+W,EAAAD,GAAA,EAAAD,GAAA,IAAAnJ,SAAA,IAAAlP,MAAA,GACAf,EAAAK,GAAAyR,EAAA,YAAA4F,EAAA5F,WACA4F,KAEgB/Y,GAAA,EAAAkN,GAAA,EAAA5D,GAAA,EAAA1F,IAAA,OAAA0W,MAAA,EAAAhJ,SAAA3N,IACXtC,GAYLA,EAAAuZ,IAAA1X,EAAA,SAAA6R,EAAA/T,EAAAsI,GACA,MAAAjI,GAAA2X,QAAAjE,EAAA/T,EAAAsI,GAAA1F,MAaAvC,EAAAwZ,IAAA3X,EAAA,SAAA6R,EAAA/T,EAAAzB,GACA,MAAA8B,GAAA4X,QAAAlE,EAAA/T,EAAAzB,GAAAqE,MAaAvC,EAAA0X,IAAA7V,EAAA,SAAAlD,EAAAkN,EAAA5D,GACA,QAAAuI,GAAA5N,GAA2B,MAAAA,GAAA,KAC3B,oBAAA4N,EAAAvI,GAAAuI,EAAA3E,IAAA,EAAA2E,EAAA7R,IAAA,IAAAsR,SAAA,IAAAlP,MAAA,KAWAf,EAAAyZ,SAAA,SAAApe,GACA,GAAAgQ,GAAA5O,KAAAgd,SAAApO,MAAA5O,KAAAgd,SAAApO,QAAkEqI,EAAA,EAAA/T,EAAA,EAAAsI,EAAA5M,GAAA,KAClEqc,EAAAjb,KAAAkb,QAAAtM,EAAAqI,EAAArI,EAAA1L,EAAA0L,EAAApD,EAOA,OANAoD,GAAAqI,GAAA,KACArI,EAAAqI,EAAA,IACArI,EAAAqI,EAAA,EACArI,EAAA1L,GAAA,GACA0L,EAAA1L,GAAA,IAAAlD,KAAAgd,SAAApO,OAAoDqI,EAAA,EAAA/T,EAAA,EAAAsI,EAAAoD,EAAApD,KAEpDyP,EAAAnV,KAQAvC,EAAAyZ,SAAAC,MAAA,iBACAjd,MAAA4O,OAoDArL,EAAA2Z,gBAAA,SAAAC,GACA,IAAAA,EACA,WAEA,IAAAC,GAAAC,GAAAF,EACA,IAAAC,EAAAE,IACA,MAAAC,IAAAH,EAAAE,IAGA,IAAAE,IAA2BjS,EAAA,EAAA3J,EAAA,EAAAqV,EAAA,EAAAxV,EAAA,EAAAE,EAAA,EAAAO,EAAA,EAAAub,EAAA,EAAAva,EAAA,EAAAb,EAAA,EAAAiZ,EAAA,EAAArV,EAAA,GAC3ByX,IA4BA,OA3BAna,GAAAK,GAAAuZ,EAAApZ,IAAAR,EAAAK,GAAAuZ,EAAA,GAAApZ,KACA2Z,EAAAH,GAAAJ,IAEAO,EAAAlZ,QACA0L,EAAAiN,GAAA/D,QAAA3C,GAAA,SAAAlL,EAAAC,EAAA5J,GACA,GAAAmM,MACA5O,EAAAqM,EAAAyH,aASA,IARArR,EAAAwX,QAAAzC,GAAA,SAAApL,EAAAC,GACAA,GAAAuC,EAAA5I,MAAAqG,KAEA,KAAArM,GAAA4O,EAAAvJ,OAAA,IACAkZ,EAAAvY,MAAAqG,GAAA3B,GAAAkE,EAAA9J,OAAA,OACA9E,EAAA,IACAqM,EAAA,KAAAA,EAAA,SAEA,KAAArM,EACAue,EAAAvY,MAAAqG,GAAA3B,GAAAkE,QACiB,MAAAA,EAAAvJ,QAAAgZ,EAAAre,KACjBue,EAAAvY,MAAAqG,GAAA3B,GAAAkE,EAAA9J,OAAA,EAAAuZ,EAAAre,MACAqe,EAAAre,SAMAue,EAAAlK,SAAAjQ,EAAAwY,aACAqB,EAAAE,IAAAC,GAAAG,GACAA,GAaAna,EAAAoa,qBAAAvY,EAAA,SAAAwY,GACA,IAAAA,EACA,WAEA,IACAF,KAeA,OAdAna,GAAAK,GAAAga,EAAA7Z,IAAAR,EAAAK,GAAAga,EAAA,GAAA7Z,KACA2Z,EAAAH,GAAAK,IAEAF,EAAAlZ,QACA0L,EAAA0N,GAAAxE,QAAA1C,GAAA,SAAAnL,EAAAC,EAAA5J,GACA,GAAAmM,KACAiF,GAAAtR,KAAA8J,EACA5J,GAAAwX,QAAAzC,GAAA,SAAApL,EAAAC,GACAA,GAAAuC,EAAA5I,MAAAqG,KAEAkS,EAAAvY,MAAAqG,GAAA3B,GAAAkE,MAGA2P,EAAAlK,SAAAjQ,EAAAwY,aACA2B,GACK1d,KAAA,SAAA6d,GACL,IAAAA,EAAA,MAAAA,EAEA,QADAC,MACAtc,EAAA,EAAuBA,EAAAqc,EAAArZ,OAAiBhD,IAAA,CAExC,OADAuc,MACAjU,EAAA,EAA2BA,EAAA+T,EAAArc,GAAAgD,OAAoBsF,IAC/CiU,EAAA5Y,KAAA0Y,EAAArc,GAAAsI,GAEAgU,GAAA3Y,KAAA4Y,GAEA,MAAAD,IAEA,IAAAT,IAAA,SAAAW,GACA,GAAA/a,GAAAoa,GAAAW,GAAAX,GAAAW,MAcA,OAbA/a,GAAA+a,GACA/a,EAAA+a,GAAAC,MAAA,IAEAhb,EAAA+a,IACAC,MAAA,KAGAC,WAAA,WACA,OAAAxb,KAAAO,KAAA8B,GAAArC,OAAAsb,MACA/a,EAAAP,GAAAub,aACAhb,GAAAP,KAGAO,EAAA+a,GA0CAza,GAAAqG,kBAAA,SAAAmC,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,EAAA7J,GACA,GAAAgI,GAAA,EAAAhI,EACAkc,EAAAlL,EAAAhJ,EAAA,GACAmU,EAAAnL,EAAAhJ,EAAA,GACArC,EAAA3F,IACAoc,EAAAzW,EAAA3F,EACA8D,EAAAoY,EAAAxS,EAAA,EAAAyS,EAAAnc,EAAA8b,EAAA,EAAA9T,EAAAhI,IAAAgc,EAAAI,EAAAxS,EACA7F,EAAAmY,EAAAvS,EAAA,EAAAwS,EAAAnc,EAAA+b,EAAA,EAAA/T,EAAAhI,IAAAic,EAAAG,EAAAvS,EACAwS,EAAA3S,EAAA,EAAA1J,GAAA8b,EAAApS,GAAA/D,GAAAqW,EAAA,EAAAF,EAAApS,GACA4S,EAAA3S,EAAA,EAAA3J,GAAA+b,EAAApS,GAAAhE,GAAAsW,EAAA,EAAAF,EAAApS,GACA3D,EAAA8V,EAAA,EAAA9b,GAAAgc,EAAAF,GAAAnW,GAAAiE,EAAA,EAAAoS,EAAAF,GACA7V,EAAA8V,EAAA,EAAA/b,GAAAic,EAAAF,GAAApW,GAAAkE,EAAA,EAAAoS,EAAAF,GACA/R,EAAAhC,EAAA0B,EAAA1J,EAAA8b,EACArR,EAAAzC,EAAA2B,EAAA3J,EAAA+b,EACA7R,EAAAlC,EAAAgU,EAAAhc,EAAA4J,EACAW,EAAAvC,EAAAiU,EAAAjc,EAAA6J,EACA0S,EAAA,OAAAjX,EAAAgR,MAAA+F,EAAArW,EAAAsW,EAAArW,GAAAgL,CAEA,QADAoL,EAAArW,GAAAsW,EAAArW,KAAAsW,GAAA,MAEAzY,IACAC,IACAzE,GAAgBwE,EAAAuY,EAAAtY,EAAAuY,GAChB/b,GAAgBuD,EAAAkC,EAAAjC,EAAAkC,GAChBsG,OAAoBzI,EAAAkG,EAAAjG,EAAA0G,GACpB+R,KAAkB1Y,EAAAoG,EAAAnG,EAAAwG,GAClBgS,UAiCArb,EAAA2F,WAAA,SAAA6C,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,GACA3I,EAAAK,GAAAmI,EAAA,WACAA,KAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,GAEA,IAAAmL,GAAAyH,GAAAtb,MAAA,KAAAuI,EACA,QACA5F,EAAAkR,EAAAjE,IAAAjN,EACAC,EAAAiR,EAAAjE,IAAAhN,EACAS,GAAAwQ,EAAAlE,IAAAhN,EACAW,GAAAuQ,EAAAlE,IAAA/M,EACAwF,MAAAyL,EAAAlE,IAAAhN,EAAAkR,EAAAjE,IAAAjN,EACA0F,OAAAwL,EAAAlE,IAAA/M,EAAAiR,EAAAjE,IAAAhN,IAgBA7C,EAAAwb,kBAAA,SAAA1H,EAAAlR,EAAAC,GACA,MAAAD,IAAAkR,EAAAlR,MAAAkR,EAAAxQ,IAAAT,GAAAiR,EAAAjR,MAAAiR,EAAAvQ,IAcAvD,EAAA6F,gBAAA,SAAAH,EAAAE,GACA,GAAA3H,GAAA+B,EAAAwb,iBACA,OAAAvd,GAAA2H,EAAAF,EAAA9C,EAAA8C,EAAA7C,IACA5E,EAAA2H,EAAAF,EAAApC,GAAAoC,EAAA7C,IACA5E,EAAA2H,EAAAF,EAAA9C,EAAA8C,EAAAnC,KACAtF,EAAA2H,EAAAF,EAAApC,GAAAoC,EAAAnC,KACAtF,EAAAyH,EAAAE,EAAAhD,EAAAgD,EAAA/C,IACA5E,EAAAyH,EAAAE,EAAAtC,GAAAsC,EAAA/C,IACA5E,EAAAyH,EAAAE,EAAAhD,EAAAgD,EAAArC,KACAtF,EAAAyH,EAAAE,EAAAtC,GAAAsC,EAAArC,MACAmC,EAAA9C,EAAAgD,EAAAtC,IAAAoC,EAAA9C,EAAAgD,EAAAhD,GAAAgD,EAAAhD,EAAA8C,EAAApC,IAAAsC,EAAAhD,EAAA8C,EAAA9C,KACA8C,EAAA7C,EAAA+C,EAAArC,IAAAmC,EAAA7C,EAAA+C,EAAA/C,GAAA+C,EAAA/C,EAAA6C,EAAAnC,IAAAqC,EAAA/C,EAAA6C,EAAA7C,IAkKA7C,EAAAyb,iBAAA,SAAAzU,EAAAC,GACA,MAAAF,GAAAC,EAAAC,IAEAjH,EAAA0b,uBAAA,SAAA1U,EAAAC,GACA,MAAAF,GAAAC,EAAAC,EAAA,IAoEAjH,EAAA2b,kBAAA,SAAAxN,EAAAvL,EAAAC,GACA,GAAAiR,GAAA9T,EAAA4b,SAAAzN,EACA,OAAAnO,GAAAwb,kBAAA1H,EAAAlR,EAAAC,IACAkE,EAAAoH,IAAA,IAAAvL,EAAAC,IAAA,IAAAiR,EAAAxQ,GAAA,cAEAtD,EAAA6b,gBAAA,SAAAC,GACA,kBACA3b,EAAA,0DAAA2b,EAAA,sBAAAA,IAwBA,IAAAC,IAAA/b,EAAA4b,SAAA,SAAAzN,GACA,GAAA0L,GAAAC,GAAA3L,EACA,IAAA0L,EAAA/F,KACA,MAAA1S,GAAAyY,EAAA/F,KAEA,KAAA3F,EACA,OAAoBvL,EAAA,EAAAC,EAAA,EAAAwF,MAAA,EAAAC,OAAA,EAAAhF,GAAA,EAAAC,GAAA,EAEpB4K,GAAApC,GAAAoC,EAMA,QADAzO,GAJAkD,EAAA,EACAC,EAAA,EACAqV,KACA8D,KAEA/d,EAAA,EAAA0D,EAAAwM,EAAAlN,OAAyChD,EAAA0D,EAAQ1D,IAEjD,GADAyB,EAAAyO,EAAAlQ,GACA,KAAAyB,EAAA,GACAkD,EAAAlD,EAAA,GACAmD,EAAAnD,EAAA,GACAwY,EAAAtW,KAAAgB,GACAoZ,EAAApa,KAAAiB,OACa,CACb,GAAAoZ,GAAAV,GAAA3Y,EAAAC,EAAAnD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAwY,KAAA5R,GAAA2V,EAAApM,IAAAjN,EAAAqZ,EAAArM,IAAAhN,GACAoZ,IAAA1V,GAAA2V,EAAApM,IAAAhN,EAAAoZ,EAAArM,IAAA/M,GACAD,EAAAlD,EAAA,GACAmD,EAAAnD,EAAA,GAGA,GAAAwc,GAAArX,EAAA5E,GAAA,EAAAiY,GACAiE,EAAAtX,EAAA5E,GAAA,EAAA+b,GACAI,EAAAxX,EAAA3E,GAAA,EAAAiY,GACAmE,EAAAzX,EAAA3E,GAAA,EAAA+b,GACA3T,EAAA+T,EAAAF,EACA5T,EAAA+T,EAAAF,EACAG,GACA1Z,EAAAsZ,EACArZ,EAAAsZ,EACA7Y,GAAA8Y,EACA7Y,GAAA8Y,EACAhU,QACAC,SACAU,GAAAkT,EAAA7T,EAAA,EACAgB,GAAA8S,EAAA7T,EAAA,EAGA,OADAuR,GAAA/F,KAAA1S,EAAAkb,GACAA,GAEAtC,GAAA,SAAAuC,GACA,GAAAjb,GAAAF,EAAAmb,EAEA,OADAjb,GAAA2O,SAAAjQ,EAAAwY,aACAlX,GAEAkb,GAAAxc,EAAAyc,gBAAA,SAAAF,GACA,GAAA1C,GAAAC,GAAAyC,EACA,IAAA1C,EAAA6C,IACA,MAAA1C,IAAAH,EAAA6C,IAEA1c,GAAAK,GAAAkc,EAAA/b,IAAAR,EAAAK,GAAAkc,KAAA,GAAA/b,KACA+b,EAAAvc,EAAA2Z,gBAAA4C,GAEA,IAAAjb,MACAsB,EAAA,EACAC,EAAA,EACAsY,EAAA,EACAC,EAAA,EACA/P,EAAA,CACA,MAAAkR,EAAA,QACA3Z,EAAA2Z,EAAA,MACA1Z,EAAA0Z,EAAA,MACApB,EAAAvY,EACAwY,EAAAvY,EACAwI,IACA/J,EAAAM,MAAA,IAAAgB,EAAAC,IAEA,QAAA5E,GAAAoN,EAAA1J,EAAA4a,EAAAtb,OAAsDhD,EAAA0D,EAAQ1D,IAAA,CAC9D,GAAAU,GAAA2C,EAAArD,MACA0e,EAAAJ,EAAAte,EACA,IAAA0e,EAAA,IAAAlN,EAAAtR,KAAAwe,EAAA,IAEA,OADAhe,EAAA,GAAA8Q,EAAAtR,KAAAwe,EAAA,IACAhe,EAAA,IACA,QACAA,EAAA,GAAAge,EAAA,GACAhe,EAAA,GAAAge,EAAA,GACAhe,EAAA,GAAAge,EAAA,GACAhe,EAAA,GAAAge,EAAA,GACAhe,EAAA,GAAAge,EAAA,GACAhe,EAAA,KAAAge,EAAA,GAAA/Z,GAAAwC,QAAA,GACAzG,EAAA,KAAAge,EAAA,GAAA9Z,GAAAuC,QAAA,EACA,MACA,SACAzG,EAAA,KAAAge,EAAA,GAAA9Z,GAAAuC,QAAA,EACA,MACA,SACA+V,EAAAwB,EAAA,GACAvB,EAAAuB,EAAA,EACA,SACA,OAAApW,GAAA,EAAAiB,EAAAmV,EAAA1b,OAA2DsF,EAAAiB,EAAQjB,IACnE5H,EAAA4H,KAAAoW,EAAApW,MAAA,EAAA3D,EAAAC,IAAAuC,QAAA,OAGiB,CACjBzG,EAAA2C,EAAArD,MACA,KAAA0e,EAAA,KACAxB,EAAAwB,EAAA,GAAA/Z,EACAwY,EAAAuB,EAAA,GAAA9Z,EAEA,QAAA8E,GAAA,EAAAC,EAAA+U,EAAA1b,OAAmD0G,EAAAC,EAAQD,IAC3DrG,EAAArD,GAAA0J,GAAAgV,EAAAhV,GAGA,GAAAiV,GAAAtb,EAAArD,GAAAgD,MACA,QAAAK,EAAArD,GAAA,IACA,QACA2E,EAAAuY,EACAtY,EAAAuY,CACA,MACA,SACAxY,IAAAtB,EAAArD,GAAA2e,EAAA,EACA,MACA,SACA/Z,IAAAvB,EAAArD,GAAA2e,EAAA,EACA,MACA,SACAha,IAAAtB,EAAArD,GAAA2e,EAAA,GACA/Z,IAAAvB,EAAArD,GAAA2e,EAAA,IAKA,MAFAtb,GAAA2O,SAAAjQ,EAAAwY,aACAqB,EAAA6C,IAAA1C,GAAA1Y,GACAA,GAEAub,GAAA7c,EAAA8c,gBAAA,SAAAP,GACA,GAAA1C,GAAAC,GAAAyC,EACA,IAAA1C,EAAAnV,IACA,MAAAsV,IAAAH,EAAAnV,IAKA,IAHA1E,EAAAK,GAAAkc,EAAA/b,IAAAR,EAAAK,GAAAkc,KAAA,GAAA/b,KACA+b,EAAAvc,EAAA2Z,gBAAA4C,KAEAA,MAAAtb,OACA,iBAEA,IAAAK,MACAsB,EAAA,EACAC,EAAA,EACAsY,EAAA,EACAC,EAAA,EACA/P,EAAA,CACA,MAAAkR,EAAA,QACA3Z,GAAA2Z,EAAA,MACA1Z,GAAA0Z,EAAA,MACApB,EAAAvY,EACAwY,EAAAvY,EACAwI,IACA/J,EAAA,QAAAsB,EAAAC,GAGA,QAAAlE,GAAAge,EADAI,EAAA,GAAAR,EAAAtb,QAAA,KAAAsb,EAAA,YAAAA,EAAA,MAAA1L,eAAA,KAAA0L,EAAA,MAAA1L,cACA5S,EAAAoN,EAAA1J,EAAA4a,EAAAtb,OAA6DhD,EAAA0D,EAAQ1D,IAAA,CAGrE,GAFAqD,EAAAM,KAAAjD,MACAge,EAAAJ,EAAAte,GACA0e,EAAA,IAAA/L,EAAAzS,KAAAwe,EAAA,IAEA,OADAhe,EAAA,GAAAiS,EAAAzS,KAAAwe,EAAA,IACAhe,EAAA,IACA,QACAA,EAAA,GAAAge,EAAA,GACAhe,EAAA,GAAAge,EAAA,GACAhe,EAAA,GAAAge,EAAA,GACAhe,EAAA,GAAAge,EAAA,GACAhe,EAAA,GAAAge,EAAA,GACAhe,EAAA,KAAAge,EAAA,GAAA/Z,GACAjE,EAAA,KAAAge,EAAA,GAAA9Z,EACA,MACA,SACAlE,EAAA,IAAAge,EAAA,GAAA9Z,CACA,MACA,SACAlE,EAAA,IAAAge,EAAA,GAAA/Z,CACA,MACA,SAEA,OADAoa,IAAApa,EAAAC,GAAAyD,GAAAqW,EAAA5b,MAAA,IACAwF,EAAA,EAAAiB,EAAAwV,EAAA/b,OAA6DsF,EAAAiB,EAAQjB,IACrEyW,EAAAzW,IAAAyW,EAAAzW,GAAA3D,EACAoa,IAAAzW,IAAAyW,EAAAzW,GAAA1D,CAEAvB,GAAAH,MACAG,IAAAgF,GAAA9D,EAAAwa,EAAAD,GACA,MACA,SACA5B,GAAAwB,EAAA,GAAA/Z,EACAwY,GAAAuB,EAAA,GAAA9Z,CACA,SACA,IAAA0D,EAAA,EAAAiB,EAAAmV,EAAA1b,OAAuDsF,EAAAiB,EAAQjB,IAC/D5H,EAAA4H,IAAAoW,EAAApW,MAAA,EAAA3D,EAAAC,OAGiB,SAAA8Z,EAAA,GACjBK,GAAApa,EAAAC,GAAAyD,GAAAqW,EAAA5b,MAAA,IACAO,EAAAH,MACAG,IAAAgF,GAAA9D,EAAAwa,EAAAD,IACApe,GAAA,KAAA2H,GAAAqW,EAAA5b,OAAA,QAEA,QAAA4G,GAAA,EAAAC,EAAA+U,EAAA1b,OAAmD0G,EAAAC,EAAQD,IAC3DhJ,EAAAgJ,GAAAgV,EAAAhV,EAGA,QAAAhJ,EAAA,IACA,QACAiE,EAAAuY,EACAtY,EAAAuY,CACA,MACA,SACAxY,EAAAjE,EAAA,EACA,MACA,SACAkE,EAAAlE,EAAA,EACA,MACA,SACAwc,EAAAxc,IAAAsC,OAAA,GACAma,EAAAzc,IAAAsC,OAAA,EACA,SACA2B,EAAAjE,IAAAsC,OAAA,GACA4B,EAAAlE,IAAAsC,OAAA,IAKA,MAFAK,GAAA2O,SAAAjQ,EAAAwY,aACAqB,EAAAnV,IAAAsV,GAAA1Y,GACAA,GAEA2b,GAAA,SAAA7Z,EAAAC,EAAAC,EAAAC,GACA,OAAAH,EAAAC,EAAAC,EAAAC,EAAAD,EAAAC,IAEA2Z,GAAA,SAAA9Z,EAAAC,EAAAyF,EAAAS,EAAAjG,EAAAC,GAGA,OAFA,IAGAH,EAFA,IAEA0F,EAHA,IAIAzF,EAHA,IAGAkG,EAJA,IAKAjG,EAJA,IAIAwF,EALA,IAMAvF,EALA,IAKAgG,EACAjG,EACAC,IAGA4Z,GAAA,SAAA/Z,EAAAC,EAAA0O,EAAAC,EAAAmD,EAAAiI,EAAAC,EAAA/Z,EAAAC,EAAA+Z,GAGA,GAGAlX,GAHAmX,EAAA,IAAAxN,EAAA,IACAsF,EAAAtF,EAAA,MAAAoF,GAAA,GACA7T,KAEAkc,EAAA3b,EAAA,SAAAe,EAAAC,EAAAwS,GAGA,OAA4BzS,EAF5BA,EAAAwB,EAAAqZ,IAAApI,GAAAxS,EAAAuB,EAAAsZ,IAAArI,GAE4BxS,EAD5BD,EAAAwB,EAAAsZ,IAAArI,GAAAxS,EAAAuB,EAAAqZ,IAAApI,KAGA,IAAAiI,EAqCAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAtU,EAAAsU,EAAA,GACAjU,EAAAiU,EAAA,OAxCA,CACAlX,EAAAoX,EAAApa,EAAAC,GAAAgS,GACAjS,EAAAgD,EAAAxD,EACAS,EAAA+C,EAAAvD,EACAuD,EAAAoX,EAAAla,EAAAC,GAAA8R,GACA/R,EAAA8C,EAAAxD,EACAW,EAAA6C,EAAAvD,CACA,IAEAD,IAFAwB,EAAAqZ,IAAA1N,EAAA,IAAAoF,GACA/Q,EAAAsZ,IAAA3N,EAAA,IAAAoF,IACA/R,EAAAE,GAAA,GACAT,GAAAQ,EAAAE,GAAA,EACAmQ,EAAA9Q,KAAAmP,KAAAlP,KAAAmP,IACA0B,GAAA,IACAA,EAAAtP,EAAAC,KAAAqP,GACA3B,GAAA2B,EACA1B,GAAA0B,EAEA,IAAAmK,GAAA9L,IACA+L,EAAA9L,IACArK,GAAAyV,GAAAC,GAAA,KACAjZ,EAAAC,KAAAK,GAAAmZ,EAAAC,EAAAD,EAAAhb,IAAAib,EAAAlb,MAAAib,EAAAhb,IAAAib,EAAAlb,OACAoG,EAAArB,EAAAoK,EAAAlP,EAAAmP,GAAA5O,EAAAE,GAAA,EACA+F,EAAA1B,GAAAqK,EAAApP,EAAAmP,GAAA1O,EAAAE,GAAA,EACAoa,EAAAvZ,EAAA2Z,OAAA1a,EAAAgG,GAAA2I,GAAA5M,QAAA,IACAwY,EAAAxZ,EAAA2Z,OAAAxa,EAAA8F,GAAA2I,GAAA5M,QAAA,GAEAuY,GAAAva,EAAA4F,EAAA+G,EAAA4N,IACAC,EAAAta,EAAA0F,EAAA+G,EAAA6N,IACAD,EAAA,IAAAA,EAAA,EAAA5N,EAAA4N,GACAC,EAAA,IAAAA,EAAA,EAAA7N,EAAA6N,GACAP,GAAAM,EAAAC,IACAD,GAAA,EAAA5N,IAEAsN,GAAAO,EAAAD,IACAC,GAAA,EAAA7N,GAQA,GAAAiO,GAAAJ,EAAAD,CACA,IAAAjZ,EAAAsZ,GAAAT,EAAA,CACA,GAAAU,GAAAL,EACAM,EAAA5a,EACA6a,EAAA5a,CACAqa,GAAAD,EAAAJ,GAAAF,GAAAO,EAAAD,EAAA,MACAra,EAAA0F,EAAA+I,EAAA3N,EAAAqZ,IAAAG,GACAra,EAAA8F,EAAA2I,EAAA5N,EAAAsZ,IAAAE,GACAtc,EAAA6b,GAAA7Z,EAAAC,EAAAwO,EAAAC,EAAAmD,EAAA,EAAAkI,EAAAa,EAAAC,GAAAP,EAAAK,EAAAjV,EAAAK,IAEA2U,EAAAJ,EAAAD,CACA,IAAAS,GAAAha,EAAAqZ,IAAAE,GACAU,EAAAja,EAAAsZ,IAAAC,GACAW,EAAAla,EAAAqZ,IAAAG,GACAW,EAAAna,EAAAsZ,IAAAE,GACA9e,EAAAsF,EAAAoa,IAAAR,EAAA,GACAS,EAAA,IAAA1M,EAAAjT,EACA4f,EAAA,IAAA1M,EAAAlT,EACA6f,GAAAvb,EAAAC,GACAub,GAAAxb,EAAAqb,EAAAJ,EAAAhb,EAAAqb,EAAAN,GACAS,GAAAvb,EAAAmb,EAAAF,EAAAhb,EAAAmb,EAAAJ,GACAQ,GAAAxb,EAAAC,EAGA,IAFAqb,EAAA,KAAAD,EAAA,GAAAC,EAAA,GACAA,EAAA,KAAAD,EAAA,GAAAC,EAAA,GACAtB,EACA,OAAAsB,EAAAC,EAAAC,GAAAxY,GAAAhF,EAEAA,IAAAsd,EAAAC,EAAAC,GAAAxY,GAAAhF,GAAAY,OAAA0K,GAAA,IAEA,QADAmS,MACA9gB,EAAA,EAAA0D,EAAAL,EAAAL,OAAgDhD,EAAA0D,EAAQ1D,IACxD8gB,EAAA9gB,KAAA,EAAAuf,EAAAlc,EAAArD,EAAA,GAAAqD,EAAArD,GAAAoX,GAAAxS,EAAA2a,EAAAlc,EAAArD,GAAAqD,EAAArD,EAAA,GAAAoX,GAAAzS,CAEA,OAAAmc,IAGAC,GAAA,SAAAxW,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,EAAA7J,GACA,GAAAgI,GAAA,EAAAhI,CACA,QACA8D,EAAAkN,EAAAhJ,EAAA,GAAA0B,EAAA,EAAAsH,EAAAhJ,EAAA,GAAAhI,EAAA8b,EAAA,EAAA9T,EAAAhI,IAAAgc,EAAAhL,EAAAhR,EAAA,GAAA4J,EACA7F,EAAAiN,EAAAhJ,EAAA,GAAA2B,EAAA,EAAAqH,EAAAhJ,EAAA,GAAAhI,EAAA+b,EAAA,EAAA/T,EAAAhI,IAAAic,EAAAjL,EAAAhR,EAAA,GAAA6J,IAGA4S,GAAA1Z,EAAA,SAAA2G,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,GACA,GAOAsW,GAPAjX,EAAA8S,EAAA,EAAAF,EAAApS,GAAAE,EAAA,EAAAoS,EAAAF,GACA3S,EAAA,GAAA2S,EAAApS,GAAA,GAAAsS,EAAAF,GACAvc,EAAAmK,EAAAoS,EACA9T,IAAAmB,EAAA7D,EAAAC,KAAA4D,IAAA,EAAAD,EAAA3J,IAAA,EAAA2J,EACAvD,IAAAwD,EAAA7D,EAAAC,KAAA4D,IAAA,EAAAD,EAAA3J,IAAA,EAAA2J,EACAnF,GAAA4F,EAAAE,GACA/F,GAAA4F,EAAAE,EA+BA,OA7BAhE,GAAAoC,GAAA,SAAAA,EAAA,IACApC,EAAAD,GAAA,SAAAA,EAAA,IACAqC,EAAA,GAAAA,EAAA,IACAmY,EAAAD,GAAAxW,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,EAAA7B,GACAlE,EAAAhB,KAAAqd,EAAArc,GACAC,EAAAjB,KAAAqd,EAAApc,IAEA4B,EAAA,GAAAA,EAAA,IACAwa,EAAAD,GAAAxW,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,EAAAlE,GACA7B,EAAAhB,KAAAqd,EAAArc,GACAC,EAAAjB,KAAAqd,EAAApc,IAEAmF,EAAA+S,EAAA,EAAAF,EAAApS,GAAAE,EAAA,EAAAoS,EAAAF,GACA5S,EAAA,GAAA4S,EAAApS,GAAA,GAAAsS,EAAAF,GACAxc,EAAAoK,EAAAoS,EACA/T,IAAAmB,EAAA7D,EAAAC,KAAA4D,IAAA,EAAAD,EAAA3J,IAAA,EAAA2J,EACAvD,IAAAwD,EAAA7D,EAAAC,KAAA4D,IAAA,EAAAD,EAAA3J,IAAA,EAAA2J,EACAtD,EAAAoC,GAAA,SAAAA,EAAA,IACApC,EAAAD,GAAA,SAAAA,EAAA,IACAqC,EAAA,GAAAA,EAAA,IACAmY,EAAAD,GAAAxW,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,EAAA7B,GACAlE,EAAAhB,KAAAqd,EAAArc,GACAC,EAAAjB,KAAAqd,EAAApc,IAEA4B,EAAA,GAAAA,EAAA,IACAwa,EAAAD,GAAAxW,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,EAAAlE,GACA7B,EAAAhB,KAAAqd,EAAArc,GACAC,EAAAjB,KAAAqd,EAAApc,KAGAgN,KAAsBjN,EAAAiC,EAAA5E,GAAA,EAAA2C,GAAAC,EAAAgC,EAAA5E,GAAA,EAAA4C,IACtB+M,KAAsBhN,EAAAgC,EAAA3E,GAAA,EAAA2C,GAAAC,EAAA+B,EAAA3E,GAAA,EAAA4C,OAGtBkJ,GAAA/L,EAAAkH,YAAArF,EAAA,SAAAsM,EAAAlH,GACA,GAAA4S,IAAA5S,GAAA6S,GAAA3L,EACA,KAAAlH,GAAA4S,EAAAzM,MACA,MAAA4M,IAAAH,EAAAzM,MAyFA,QAvFA1N,GAAAmd,GAAA1O,GACAnL,EAAAiE,GAAA4V,GAAA5V,GACAlK,GAAyB6F,EAAA,EAAAC,EAAA,EAAAkG,GAAA,EAAAO,GAAA,EAAA4O,EAAA,EAAA8D,EAAA,EAAAkD,GAAA,KAAAC,GAAA,MACzBC,GAA0Bxc,EAAA,EAAAC,EAAA,EAAAkG,GAAA,EAAAO,GAAA,EAAA4O,EAAA,EAAA8D,EAAA,EAAAkD,GAAA,KAAAC,GAAA,MAC1BE,GAAA,SAAAlR,EAAA7P,EAAAghB,GACA,GAAAxa,GAAAC,EAAAwa,GAAsCC,EAAA,EAAAC,EAAA,EACtC,KAAAtR,EACA,WAAA7P,EAAAsE,EAAAtE,EAAAuE,EAAAvE,EAAAsE,EAAAtE,EAAAuE,EAAAvE,EAAAsE,EAAAtE,EAAAuE,EAGA,UADAsL,EAAA,IAAAoR,MAAAjhB,EAAA4gB,GAAA5gB,EAAA6gB,GAAA,MACAhR,EAAA,IACA,QACA7P,EAAA4Z,EAAA/J,EAAA,GACA7P,EAAA0d,EAAA7N,EAAA,EACA,MACA,SACAA,GAAA,KAAA7H,GAAA6W,GAAAld,GAAA,GAAA3B,EAAAsE,EAAAtE,EAAAuE,GAAAyD,GAAA6H,EAAApN,MAAA,KACA,MACA,SACA,KAAAue,GAAA,KAAAA,GACAxa,EAAA,EAAAxG,EAAAsE,EAAAtE,EAAAyK,GACAhE,EAAA,EAAAzG,EAAAuE,EAAAvE,EAAAgL,KAGAxE,EAAAxG,EAAAsE,EACAmC,EAAAzG,EAAAuE,GAEAsL,GAAA,IAAArJ,EAAAC,GAAAuB,GAAA6H,EAAApN,MAAA,GACA,MACA,SACA,KAAAue,GAAA,KAAAA,GACAhhB,EAAA4gB,GAAA,EAAA5gB,EAAAsE,EAAAtE,EAAA4gB,GACA5gB,EAAA6gB,GAAA,EAAA7gB,EAAAuE,EAAAvE,EAAA6gB,KAGA7gB,EAAA4gB,GAAA5gB,EAAAsE,EACAtE,EAAA6gB,GAAA7gB,EAAAuE,GAEAsL,GAAA,KAAA7H,GAAA4W,GAAA5e,EAAAsE,EAAAtE,EAAAuE,EAAAvE,EAAA4gB,GAAA5gB,EAAA6gB,GAAAhR,EAAA,GAAAA,EAAA,IACA,MACA,SACA7P,EAAA4gB,GAAA/Q,EAAA,GACA7P,EAAA6gB,GAAAhR,EAAA,GACAA,GAAA,KAAA7H,GAAA4W,GAAA5e,EAAAsE,EAAAtE,EAAAuE,EAAAsL,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MACA,SACAA,GAAA,KAAA7H,GAAA2W,GAAA3e,EAAAsE,EAAAtE,EAAAuE,EAAAsL,EAAA,GAAAA,EAAA,IACA,MACA,SACAA,GAAA,KAAA7H,GAAA2W,GAAA3e,EAAAsE,EAAAtE,EAAAuE,EAAAsL,EAAA,GAAA7P,EAAAuE,GACA,MACA,SACAsL,GAAA,KAAA7H,GAAA2W,GAAA3e,EAAAsE,EAAAtE,EAAAuE,EAAAvE,EAAAsE,EAAAuL,EAAA,IACA,MACA,SACAA,GAAA,KAAA7H,GAAA2W,GAAA3e,EAAAsE,EAAAtE,EAAAuE,EAAAvE,EAAA4Z,EAAA5Z,EAAA0d,IAGA,MAAA7N,KAEAuR,EAAA,SAAAC,EAAA1hB,GACA,GAAA0hB,EAAA1hB,GAAAgD,OAAA,GACA0e,EAAA1hB,GAAAoE,OAEA,KADA,GAAAkF,GAAAoY,EAAA1hB,GACAsJ,EAAAtG,QACA2e,EAAA3hB,GAAA,IACA+E,IAAA6c,EAAA5hB,GAAA,KACA0hB,EAAAjf,OAAAzC,IAAA,QAAAqI,GAAAiB,EAAA7G,OAAA,MAEAif,GAAAjf,OAAAzC,EAAA,GACA0D,EAAAiD,EAAAlF,EAAAuB,OAAA+B,KAAA/B,QAAA,KAGA6e,EAAA,SAAA9Y,EAAAC,EAAA8Y,EAAAC,EAAA/hB,GACA+I,GAAAC,GAAA,KAAAD,EAAA/I,GAAA,SAAAgJ,EAAAhJ,GAAA,KACAgJ,EAAAvG,OAAAzC,EAAA,OAAA+hB,EAAApd,EAAAod,EAAAnd,IACAkd,EAAAhX,GAAA,EACAgX,EAAAzW,GAAA,EACAyW,EAAAnd,EAAAoE,EAAA/I,GAAA,GACA8hB,EAAAld,EAAAmE,EAAA/I,GAAA,GACA0D,EAAAiD,EAAAlF,EAAAuB,OAAA+B,KAAA/B,QAAA,KAGA2e,KACAC,KACAI,EAAA,GACAX,EAAA,GACArhB,EAAA,EAAA0D,EAAAiD,EAAAlF,EAAAuB,OAAA+B,KAAA/B,QAAA,GAAsEhD,EAAA0D,EAAQ1D,IAAA,CAC9EyB,EAAAzB,KAAAgiB,EAAAvgB,EAAAzB,GAAA,IAEA,KAAAgiB,IAEAL,EAAA3hB,GAAAgiB,EACAhiB,IAAAqhB,EAAAM,EAAA3hB,EAAA,KAEAyB,EAAAzB,GAAAohB,EAAA3f,EAAAzB,GAAAlB,EAAAuiB,GAEA,KAAAM,EAAA3hB,IAAA,KAAAgiB,IAAAL,EAAA3hB,GAAA,KAIAyhB,EAAAhgB,EAAAzB,GAEA+E,IACAA,EAAA/E,KAAAgiB,EAAAjd,EAAA/E,GAAA,IACA,KAAAgiB,IAEAJ,EAAA5hB,GAAAgiB,EACAhiB,IAAAqhB,EAAAO,EAAA5hB,EAAA,KAEA+E,EAAA/E,GAAAohB,EAAArc,EAAA/E,GAAAmhB,EAAAE,GAEA,KAAAO,EAAA5hB,IAAA,KAAAgiB,IAAAJ,EAAA5hB,GAAA,KAEAyhB,EAAA1c,EAAA/E,IAEA6hB,EAAApgB,EAAAsD,EAAAjG,EAAAqiB,EAAAnhB,GACA6hB,EAAA9c,EAAAtD,EAAA0f,EAAAriB,EAAAkB,EACA,IAAAiiB,GAAAxgB,EAAAzB,GACAkiB,EAAAnd,KAAA/E,GACAmiB,EAAAF,EAAAjf,OACAof,EAAArd,GAAAmd,EAAAlf,MACAlE,GAAA6F,EAAAsd,EAAAE,EAAA,GACArjB,EAAA8F,EAAAqd,EAAAE,EAAA,GACArjB,EAAAgM,GAAAgB,EAAAmW,EAAAE,EAAA,KAAArjB,EAAA6F,EACA7F,EAAAuM,GAAAS,EAAAmW,EAAAE,EAAA,KAAArjB,EAAA8F,EACAuc,EAAArW,GAAA/F,IAAA+G,EAAAoW,EAAAE,EAAA,KAAAjB,EAAAxc,GACAwc,EAAA9V,GAAAtG,IAAA+G,EAAAoW,EAAAE,EAAA,KAAAjB,EAAAvc,GACAuc,EAAAxc,EAAAI,GAAAmd,EAAAE,EAAA,GACAjB,EAAAvc,EAAAG,GAAAmd,EAAAE,EAAA,GAKA,MAHArd,KACA6W,EAAAzM,MAAA4M,GAAAta,IAEAsD,GAAAtD,EAAAsD,GAAAtD,GACS,KAAAsa,IAuCTsG,IAtCAtgB,EAAAugB,WAAA1e,EAAA,SAAA8P,GAEA,OADAqL,MACA/e,EAAA,EAAA0D,EAAAgQ,EAAA1Q,OAAiDhD,EAAA0D,EAAQ1D,IAAA,CACzD,GAAAghB,MACAuB,EAAA7O,EAAA1T,GAAAiP,MAAA,sBAEA,IADA+R,EAAA9I,MAAAnW,EAAA2L,OAAA6U,EAAA,IACAvB,EAAA9I,MAAA8C,MACA,WAEAgG,GAAAnN,QAAAmN,EAAA9I,MAAArE,QACAmN,EAAA9I,MAAA8I,EAAA9I,MAAA5T,IACAie,EAAA,KAAAvB,EAAAwB,OAAAD,EAAA,QACAxD,EAAApb,KAAAqd,GAEA,IAAAhhB,EAAA,EAAA0D,EAAAqb,EAAA/b,OAAA,EAA6ChD,EAAA0D,EAAQ1D,IACrD,IAAA+e,EAAA/e,GAAAwiB,OAAA,CAGA,OAFApV,GAAAtB,EAAAiT,EAAA/e,EAAA,GAAAwiB,QAAA,GACAnF,EAAA,EACA/U,EAAAtI,EAAA,EAAuCsI,EAAA5E,EAAQ4E,IAC/C,GAAAyW,EAAAzW,GAAAka,OAAA,CACAnF,EAAA0B,EAAAzW,GAAAka,MACA,OAGAnF,IACAA,EAAA,IACA/U,EAAA5E,GAEA2Z,EAAAvR,EAAAuR,EAEA,KADA,GAAAhd,IAAAgd,EAAAjQ,IAAA9E,EAAAtI,EAAA,GAC0BA,EAAAsI,EAAOtI,IACjCoN,GAAA/M,EACA0e,EAAA/e,GAAAwiB,OAAApV,EAAA,IAIA,MAAA2R,KAEAhd,EAAA0gB,MAAA,SAAAxV,EAAAM,GACAN,GAAAM,EAAAtB,MAAAsB,EAAAtB,IAAAgB,EAAAN,MACAM,GAAAM,EAAAmV,SAAAnV,EAAAmV,OAAAzV,EAAAP,MACAO,EAAAP,OAAAO,EAAAP,KAAAC,KAAAM,EAAAN,MACAM,EAAAN,OAAAM,EAAAN,KAAAD,KAAAO,EAAAP,QAkDAiW,IAhDA5gB,EAAA6gB,SAAA,SAAA3V,EAAAM,GACAA,EAAAtB,MAAAgB,IAGAoV,GAAApV,EAAAM,GACAN,EAAAP,KAAA,KACAO,EAAAN,KAAAY,EAAAtB,IACAsB,EAAAtB,IAAAS,KAAAO,EACAM,EAAAtB,IAAAgB,IAEAlL,EAAA8gB,QAAA,SAAA5V,EAAAM,GACAA,EAAAmV,SAAAzV,IAGAoV,GAAApV,EAAAM,GACAN,EAAAP,KAAAa,EAAAmV,OACAzV,EAAAN,KAAA,KACAY,EAAAmV,OAAA/V,KAAAM,EACAM,EAAAmV,OAAAzV,IAEAlL,EAAA+gB,aAAA,SAAA7V,EAAA8V,EAAAxV,GACA8U,GAAApV,EAAAM,GACAwV,GAAAxV,EAAAtB,MAAAsB,EAAAtB,IAAAgB,GACA8V,EAAArW,OAAAqW,EAAArW,KAAAC,KAAAM,GACAA,EAAAP,KAAAqW,EAAArW,KACAO,EAAAN,KAAAoW,EACAA,EAAArW,KAAAO,GAEAlL,EAAAihB,cAAA,SAAA/V,EAAA8V,EAAAxV,GACA8U,GAAApV,EAAAM,GACAwV,GAAAxV,EAAAmV,SAAAnV,EAAAmV,OAAAzV,GACA8V,EAAApW,OAAAoW,EAAApW,KAAAD,KAAAO,GACAA,EAAAN,KAAAoW,EAAApW,KACAoW,EAAApW,KAAAM,EACAA,EAAAP,KAAAqW,GAcAhhB,EAAA4gB,SAAA,SAAAzS,EAAA5B,GACA,GAAA+P,GAAAP,GAAA5N,GACAjD,GACAe,GACAM,UAAA4C,GAEA3C,QAAA,WACA,MAAA8P,IAIA,OADA7P,IAAAvB,EAAAqB,GACArB,EAAAmB,SAiBAI,IAHAzM,EAAAkhB,cAAA,SAAA/S,EAAA5B,GACA,MAAA0H,IAAA9F,EAAAyS,GAAAzS,EAAA5B,KAEAvM,EAAAmhB,kBAAA,SAAAjW,EAAAkW,GACA,SAAAA,EACA,MAAAlW,GAAAe,EAAAM,SAEA6U,GAAAzU,EAAAyU,GAAAvL,QAAA,gBAA2C3K,EAAAe,EAAAM,WAAA4C,EAC3C,IAAAkS,GAAArhB,EAAAoa,qBAAAgH,GACA9L,EAAA,EACAgM,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAxV,EAAAf,EAAAe,EACA7N,EAAA,GAAA2J,EAEA,IADAkE,EAAAM,UAAA8U,MACAA,EACA,OAAApjB,GAAA,EAAA0D,EAAA0f,EAAApgB,OAAkDhD,EAAA0D,EAAQ1D,IAAA,CAC1D,GAKAmF,GACAC,EACAC,EACAC,EACA+Y,EATAxd,EAAAuiB,EAAApjB,GACAyjB,EAAA5iB,EAAAmC,OACA0gB,EAAAhV,EAAA7N,EAAA,IAAA4Q,cACAkS,EAAA9iB,EAAA,IAAA6iB,EACAE,EAAAD,EAAAxjB,EAAA0jB,SAAA,CAMA,MAAAH,GAAA,GAAAD,EACAE,GACAxe,EAAAye,EAAAjf,EAAA,KACAS,EAAAwe,EAAAhf,EAAA,KACAS,EAAAue,EAAAjf,EAAA9D,EAAA,GAAAA,EAAA,IACAyE,EAAAse,EAAAhf,EAAA/D,EAAA,GAAAA,EAAA,IACAV,EAAA2jB,UAAAze,EAAAF,EAAAG,EAAAF,IAEAjF,EAAA2jB,UAAAjjB,EAAA,GAAAA,EAAA,IAEqB,KAAA6iB,EACrB,GAAAD,GACApF,KAAApR,EAAAsB,QAAA,GACApO,EAAAof,OAAA1e,EAAA,GAAAwd,EAAA1Z,EAAA0Z,EAAAjU,MAAA,EAAAiU,EAAAzZ,EAAAyZ,EAAAhU,OAAA,GACAgN,GAAAxW,EAAA,IACyB,GAAA4iB,IACzBE,GACAte,EAAAue,EAAAjf,EAAA9D,EAAA,GAAAA,EAAA,IACAyE,EAAAse,EAAAhf,EAAA/D,EAAA,GAAAA,EAAA,IACAV,EAAAof,OAAA1e,EAAA,GAAAwE,EAAAC,IAEAnF,EAAAof,OAAA1e,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAwW,GAAAxW,EAAA,IAEqB,KAAA6iB,EACrB,GAAAD,GAAA,GAAAA,GACApF,KAAApR,EAAAsB,QAAA,GACApO,EAAA4jB,MAAAljB,EAAA,GAAAA,EAAA4iB,EAAA,GAAApF,EAAA1Z,EAAA0Z,EAAAjU,MAAA,EAAAiU,EAAAzZ,EAAAyZ,EAAAhU,OAAA,GACAkZ,GAAA1iB,EAAA,GACA2iB,GAAA3iB,EAAA4iB,EAAA,IACyB,GAAAA,IACzBE,GACAte,EAAAue,EAAAjf,EAAA9D,EAAA,GAAAA,EAAA,IACAyE,EAAAse,EAAAhf,EAAA/D,EAAA,GAAAA,EAAA,IACAV,EAAA4jB,MAAAljB,EAAA,GAAAA,EAAA,GAAAwE,EAAAC,IAEAnF,EAAA4jB,MAAAljB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA0iB,GAAA1iB,EAAA,GACA2iB,GAAA3iB,EAAA,IAEqB,KAAA6iB,GAAA,GAAAD,GACrBtjB,EAAAwC,IAAA9B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAmN,EAAAgW,OAAA,EACA/W,EAAAmB,OAAAjO,EAUA8M,EAAAmB,OAAAjO,EAEA6N,EAAAuV,KACAvV,EAAAwV,KACAxV,EAAAqJ,MACArJ,EAAAqV,KAAAljB,EAAA8J,EACA+D,EAAAsV,KAAAnjB,EAAA8C,EAEA,GAAAsgB,GAAA,GAAAC,IAAAnM,GAAArJ,EAAA6H,MACA7H,EAAA6H,KAAAlR,IAAA0e,EACArV,EAAA6H,KAAAjR,IAAA0e,GAEAtV,EAAAgW,OAAA,IAGAC,GAAA,SAAAxgB,GACA,GAAAxD,GAAAwD,EAAA,EACA,QAAAxD,EAAAwR,eACA,eAAAxR,EAAA,IACA,gBAAAA,EAAA,YACA,mBAAAwD,EAAAT,QACA/C,EAAA,EAAAwD,EAAA,GAAAA,EAAA,KAEAxD,EAAA,EAEA,mBAAAwD,EAAAT,QACA/C,EAAA,IAAAwD,EAAA,GAAAA,EAAA,IACiB,GAAAA,EAAAT,QACjB/C,EAAA,MAEAA,EAAA,KAIAiO,GAAAnM,EAAAmiB,mBAAA,SAAArb,EAAArC,GACAA,EAAAkI,EAAAlI,GAAAoR,QAAA,gBAAuC/O,GACvCA,EAAA9G,EAAAoa,qBAAAtT,OACArC,EAAAzE,EAAAoa,qBAAA3V,MAMA,KALA,GAGA8B,GAAAiB,EACA4a,EAAAC,EAJAC,EAAA1d,EAAAkC,EAAA7F,OAAAwD,EAAAxD,QACA6J,KACAC,KACA9M,EAAA,EAEkBA,EAAAqkB,EAAerkB,IAAA,CAGjC,GAFAmkB,EAAAtb,EAAA7I,IAAAikB,GAAAzd,EAAAxG,IACAokB,EAAA5d,EAAAxG,IAAAikB,GAAAE,GACAA,EAAA,IAAAC,EAAA,IACA,KAAAD,EAAA,GAAA1S,gBAAA0S,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KACA,KAAAD,EAAA,GAAA1S,gBAAA0S,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAEA,MAIA,KAFAvX,EAAA7M,MACA8M,EAAA9M,MACAsI,EAAA,EAAAiB,EAAA5C,EAAAwd,EAAAnhB,OAAAohB,EAAAphB,QAA8DsF,EAAAiB,EAAQjB,IACtEA,IAAA6b,KAAAtX,EAAA7M,GAAAsI,GAAA6b,EAAA7b,IACAA,IAAA8b,KAAAtX,EAAA9M,GAAAsI,GAAA8b,EAAA9b,IAGA,OACAuE,OACAC,MAGA/K,GAAAuiB,cAAA,SAAA3f,EAAAC,EAAA4Q,EAAAC,GACA,GAAA8O,EAEA,WADAA,EAAA,MAAA9O,GAAA1T,EAAAK,GAAAuC,EAAA,UAAAA,EAAAiJ,EAAA2C,IAAAiU,eAAA7f,IAIA,MAAA4f,GAAAE,QACA,MAAA7f,GAEA2f,YACAna,MAAAma,EAAA9N,MAAAiO,YAAAH,EAAAI,YACAta,OAAAka,EAAA9N,MAAAmO,aAAAL,EAAAM,eAIAN,YACAna,MAAAxF,EACAyF,OAAAmL,IAKA+O,UAAA,EACA5f,IACAC,IACAwF,MAAAoL,EACAnL,OAAAoL,IAcA1T,EAAAwc,kBACAxc,EAAAS,WAYAT,EAAA+L,cAiBA/L,EAAAqM,OAAA,SAAArE,EAAAC,EAAA5J,EAAAC,EAAA4J,EAAAhH,GACA,UAAA6G,GAAAC,EAAAC,EAAA5J,EAAAC,EAAA4J,EAAAhH,IAmBA,SAAA6hB,GA0JA,QAAAC,GAAAhb,GACA,MAAAA,GAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA,QAAAib,GAAAjb,GACA,GAAAkb,GAAA9e,EAAAC,KAAA2e,EAAAhb,GACAA,GAAA,KAAAA,EAAA,IAAAkb,GACAlb,EAAA,KAAAA,EAAA,IAAAkb,GAhJAH,EAAAniB,IAAA,SAAAoH,EAAAC,EAAA5J,EAAAC,EAAA4J,EAAAhH,GACA,GAGA0B,GAAAC,EAAAH,EAAApB,EAHA6hB,aACA/kB,IAAA3B,KAAAuL,EAAAvL,KAAA4B,EAAA5B,KAAAyL,IAAAzL,KAAAwL,EAAAxL,KAAA6B,EAAA7B,KAAAyE,IAAA,QACAmL,IAAArE,EAAA3J,EAAA6J,IAAAD,EAAA3J,EAAA4C,IAAA,OAOA,KAJA8G,eAAAD,KACAsE,IAAArE,MAAA3J,EAAA2J,EAAAE,IAAAF,EAAAC,EAAAD,EAAA1J,EAAA0J,EAAA9G,IAAA,SAGA0B,EAAA,EAAuBA,EAAA,EAAOA,IAC9B,IAAAC,EAAA,EAA2BA,EAAA,EAAOA,IAAA,CAElC,IADAvB,EAAA,EACAoB,EAAA,EAA+BA,EAAA,EAAOA,IACtCpB,GAAAlD,EAAAwE,GAAAF,GAAA2J,EAAA3J,GAAAG,EAEAsgB,GAAAvgB,GAAAC,GAAAvB,EAGA7E,KAAAuL,EAAAmb,EAAA,MACA1mB,KAAAwL,EAAAkb,EAAA,MACA1mB,KAAA4B,EAAA8kB,EAAA,MACA1mB,KAAA6B,EAAA6kB,EAAA,MACA1mB,KAAAyL,EAAAib,EAAA,MACA1mB,KAAAyE,EAAAiiB,EAAA,OASAJ,EAAAjB,OAAA,WACA,GAAAsB,GAAA3mB,KACAmG,EAAAwgB,EAAApb,EAAAob,EAAA9kB,EAAA8kB,EAAAnb,EAAAmb,EAAA/kB,CACA,WAAA0J,GAAAqb,EAAA9kB,EAAAsE,GAAAwgB,EAAAnb,EAAArF,GAAAwgB,EAAA/kB,EAAAuE,EAAAwgB,EAAApb,EAAApF,GAAAwgB,EAAA/kB,EAAA+kB,EAAAliB,EAAAkiB,EAAA9kB,EAAA8kB,EAAAlb,GAAAtF,GAAAwgB,EAAAnb,EAAAmb,EAAAlb,EAAAkb,EAAApb,EAAAob,EAAAliB,GAAA0B,IASAmgB,EAAA3hB,MAAA,WACA,UAAA2G,GAAAtL,KAAAuL,EAAAvL,KAAAwL,EAAAxL,KAAA4B,EAAA5B,KAAA6B,EAAA7B,KAAAyL,EAAAzL,KAAAyE,IAWA6hB,EAAAhB,UAAA,SAAAnf,EAAAC,GACApG,KAAAmE,IAAA,QAAAgC,EAAAC,IAaAkgB,EAAAf,MAAA,SAAApf,EAAAC,EAAAmG,EAAAK,GACA,MAAAxG,MAAAD,IACAoG,GAAAK,IAAA5M,KAAAmE,IAAA,QAAAoI,EAAAK,GACA5M,KAAAmE,IAAAgC,EAAA,IAAAC,EAAA,MACAmG,GAAAK,IAAA5M,KAAAmE,IAAA,SAAAoI,GAAAK,IAYA0Z,EAAAvF,OAAA,SAAAxV,EAAApF,EAAAC,GACAmF,EAAAhI,EAAAqV,IAAArN,GACApF,KAAA,EACAC,KAAA,CACA,IAAA4a,IAAArZ,EAAAqZ,IAAAzV,GAAA5C,QAAA,GACAsY,GAAAtZ,EAAAsZ,IAAA1V,GAAA5C,QAAA,EACA3I,MAAAmE,IAAA6c,EAAAC,KAAAD,EAAA7a,EAAAC,GACApG,KAAAmE,IAAA,SAAAgC,GAAAC,IAYAkgB,EAAAngB,EAAA,SAAAA,EAAAC,GACA,MAAAD,GAAAnG,KAAAuL,EAAAnF,EAAApG,KAAA4B,EAAA5B,KAAAyL,GAYA6a,EAAAlgB,EAAA,SAAAD,EAAAC,GACA,MAAAD,GAAAnG,KAAAwL,EAAApF,EAAApG,KAAA6B,EAAA7B,KAAAyE,GAEA6hB,EAAArkB,IAAA,SAAAT,GACA,OAAAxB,KAAAkQ,EAAA0W,aAAA,GAAAplB,IAAAmH,QAAA,IAEA2d,EAAA9S,SAAA,WACA,MAAAjQ,GAAA6U,IACA,WAAApY,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,IAAAwD,OAAA,KACAzF,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,QAAAwD,QAEA6gB,EAAAO,SAAA,WACA,sDAAA7mB,KAAAiC,IAAA,GACA,SAAAjC,KAAAiC,IAAA,YAAAjC,KAAAiC,IAAA,YAAAjC,KAAAiC,IAAA,GACA,QAAAjC,KAAAiC,IAAA,WAAAjC,KAAAiC,IAAA,oCAEAqkB,EAAAtC,OAAA,WACA,OAAAhkB,KAAAyL,EAAA9C,QAAA,GAAA3I,KAAAyE,EAAAkE,QAAA,KAwBA2d,EAAAnW,MAAA,WACA,GAAAuW,KAEAA,GAAA7B,GAAA7kB,KAAAyL,EACAib,EAAA5B,GAAA9kB,KAAAyE,CAGA,IAAAqiB,KAAA9mB,KAAAuL,EAAAvL,KAAA4B,IAAA5B,KAAAwL,EAAAxL,KAAA6B,GACA6kB,GAAAK,OAAApf,EAAAC,KAAA2e,EAAAO,EAAA,KACAN,EAAAM,EAAA,IAEAJ,EAAAM,MAAAF,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MACAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,MAAAJ,EAAAM,MAAAF,EAAA,MAAAA,EAAA,MAAAJ,EAAAM,OAEAN,EAAAO,OAAAtf,EAAAC,KAAA2e,EAAAO,EAAA,KACAN,EAAAM,EAAA,IACAJ,EAAAM,OAAAN,EAAAO,MAGA,IAAAhG,IAAA6F,EAAA,MACA9F,EAAA8F,EAAA,KAaA,OAZA9F,GAAA,GACA0F,EAAA3F,OAAAxd,EAAAsV,IAAAlR,EAAAuf,KAAAlG,IACAC,EAAA,IACAyF,EAAA3F,OAAA,IAAA2F,EAAA3F,SAGA2F,EAAA3F,OAAAxd,EAAAsV,IAAAlR,EAAA2Z,KAAAL,IAGAyF,EAAAS,YAAAT,EAAAM,MAAAre,QAAA,IAAA+d,EAAAK,OAAApe,QAAA,IAAA+d,EAAAO,OAAAte,QAAA,IAAA+d,EAAA3F,QACA2F,EAAAU,gBAAAV,EAAAM,MAAAre,QAAA,IAAA+d,EAAAK,OAAApe,QAAA,IAAA+d,EAAAO,OAAAte,QAAA,KAAA+d,EAAA3F,OACA2F,EAAAW,aAAAX,EAAAM,MAAAre,QAAA,KAAA+d,EAAA3F,OACA2F,GASAJ,EAAAgB,kBAAA,SAAAC,GACA,GAAArkB,GAAAqkB,GAAAvnB,KAAAmQ,IACA,OAAAjN,GAAAikB,UACAjkB,EAAA6jB,QAAA7jB,EAAA6jB,OAAApe,QAAA,GACAzF,EAAA+jB,QAAA/jB,EAAA+jB,OAAAte,QAAA,GACAzF,EAAA6d,QAAA7d,EAAA6d,OAAApY,QAAA,IACAzF,EAAA2hB,IAAA3hB,EAAA4hB,GAAA,KAAA5hB,EAAA2hB,GAAA3hB,EAAA4hB,IAAApS,IACA,GAAAxP,EAAA6jB,QAAA,GAAA7jB,EAAA+jB,OAAA,KAAA/jB,EAAA6jB,OAAA7jB,EAAA+jB,OAAA,KAAAvU,IACAxP,EAAA6d,OAAA,KAAA7d,EAAA6d,OAAA,KAAArO,IAEA,KAAA1S,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAA,MAGKqJ,EAAAvI,UAqWL,QAnWAykB,IAAA,WACAxnB,KAAAynB,aAAA,GAEAC,GAAA,WACA,MAAA1nB,MAAA2nB,cAAAH,kBAEAI,GAAA,WACA5nB,KAAA6nB,cAAA,GAEAC,GAAA,WACA,MAAA9nB,MAAA2nB,cAAAC,mBAEAG,GAAA,SAAAtc,GACA,GAAAuc,GAAA5Y,EAAA2C,IAAAkW,gBAAAC,WAAA9Y,EAAA2C,IAAAkI,KAAAiO,UACAC,EAAA/Y,EAAA2C,IAAAkW,gBAAAG,YAAAhZ,EAAA2C,IAAAkI,KAAAmO,UAEA,QACAjiB,EAAAsF,EAAA4c,QAAAF,EACA/hB,EAAAqF,EAAA6c,QAAAN,IAGAO,GAAA,WACA,MAAAnZ,GAAA2C,IAAAyW,iBACA,SAAA5jB,EAAAhE,EAAA2X,EAAA5K,GACA,GAAAlJ,GAAA,SAAAgH,GACA,GAAAgd,GAAAV,GAAAtc,EACA,OAAA8M,GAAA7W,KAAAiM,EAAAlC,EAAAgd,EAAAtiB,EAAAsiB,EAAAriB,GAIA,IAFAxB,EAAA4jB,iBAAA5nB,EAAA6D,GAAA,GAEA8N,GAAAK,EAAAhS,GAAA,CACA,GAAA8nB,GAAA,SAAAjd,GAIA,OAHAgd,GAAAV,GAAAtc,GACAkd,EAAAld,EAEAjK,EAAA,EAAA0D,EAAAuG,EAAAmd,eAAAnd,EAAAmd,cAAApkB,OAAuFhD,EAAA0D,EAAQ1D,IAC/F,GAAAiK,EAAAmd,cAAApnB,GAAAwU,QAAApR,EAAA,CACA6G,IAAAmd,cAAApnB,GACAiK,EAAAkc,cAAAgB,EACAld,EAAA+b,eAAAE,GACAjc,EAAAmc,gBAAAE,EACA,OAIA,MAAAvP,GAAA7W,KAAAiM,EAAAlC,EAAAgd,EAAAtiB,EAAAsiB,EAAAriB,GAEAxB,GAAA4jB,iBAAA5V,EAAAhS,GAAA8nB,GAAA,GAGA,kBAMA,MALA9jB,GAAAikB,oBAAAjoB,EAAA6D,GAAA,GAEA8N,GAAAK,EAAAhS,IACAgE,EAAAikB,oBAAAjW,EAAAhS,GAAA8nB,GAAA,IAEA,IAGStZ,EAAA2C,IAAA+W,YACT,SAAAlkB,EAAAhE,EAAA2X,EAAA5K,GACA,GAAAlJ,GAAA,SAAAgH,GACAA,KAAA2D,EAAA6C,IAAA8W,KACA,IAAAf,GAAA5Y,EAAA2C,IAAAkW,gBAAAC,WAAA9Y,EAAA2C,IAAAkI,KAAAiO,UACAC,EAAA/Y,EAAA2C,IAAAkW,gBAAAG,YAAAhZ,EAAA2C,IAAAkI,KAAAmO,WACAjiB,EAAAsF,EAAA4c,QAAAF,EACA/hB,EAAAqF,EAAA6c,QAAAN,CAGA,OAFAvc,GAAA+b,eAAA/b,EAAA+b,mBACA/b,EAAAmc,gBAAAnc,EAAAmc,oBACArP,EAAA7W,KAAAiM,EAAAlC,EAAAtF,EAAAC,GAOA,OALAxB,GAAAkkB,YAAA,KAAAloB,EAAA6D,GACA,WAEA,MADAG,GAAAokB,YAAA,KAAApoB,EAAA6D,IACA,QAfS,MAqBTwkB,MACAC,GAAA,SAAAzd,GAOA,IANA,GAIA0d,GAJAhjB,EAAAsF,EAAA4c,QACAjiB,EAAAqF,EAAA6c,QACAN,EAAA5Y,EAAA2C,IAAAkW,gBAAAC,WAAA9Y,EAAA2C,IAAAkI,KAAAiO,UACAC,EAAA/Y,EAAA2C,IAAAkW,gBAAAG,YAAAhZ,EAAA2C,IAAAkI,KAAAmO,WAEAte,EAAAmf,GAAAzkB,OACAsF,KAAA,CAEA,GADAqf,EAAAF,GAAAnf,GACAyI,GAAA9G,EAAA2d,SAGA,IAFA,GACAC,GADA7nB,EAAAiK,EAAA2d,QAAA5kB,OAEAhD,KAEA,GADA6nB,EAAA5d,EAAA2d,QAAA5nB,GACA6nB,EAAAC,YAAAH,EAAA1a,GAAA8a,MAAA7a,GAAA,CACAvI,EAAAkjB,EAAAhB,QACAjiB,EAAAijB,EAAAf,SACA7c,EAAAkc,cAAAlc,EAAAkc,cAAAlc,GAAA+b,gBACA,YAIA/b,GAAA+b,gBAEA,IACAzlB,GADAynB,EAAAL,EAAA1a,GAAA+a,KAEAtb,EAAAsb,EAAAC,YACAC,EAAAF,EAAAG,WACArP,EAAAkP,EAAAvR,MAAAqC,OACAlL,GAAA6C,IAAA2X,OAAAF,EAAAtN,YAAAoN,GACAA,EAAAvR,MAAAqC,QAAA,OACAvY,EAAAonB,EAAA1a,GAAAM,MAAA8a,kBAAA1jB,EAAAC,GACAojB,EAAAvR,MAAAqC,UACAlL,EAAA6C,IAAA2X,QAAA1b,EAAAwb,EAAAI,aAAAN,EAAAtb,GAAAwb,EAAAnP,YAAAiP,IACAznB,GAAA2B,EAAA,qBAAAylB,EAAA1a,GAAAC,GAAAya,EAAA1a,GAAA1M,GACAoE,GAAAgiB,EACA/hB,GAAA4hB,EACAtkB,EAAA,qBAAAylB,EAAA1a,GAAAC,GAAAya,EAAAY,YAAAZ,EAAA1a,GAAAtI,EAAAgjB,EAAA1a,GAAA8a,MAAApjB,EAAAC,EAAA+iB,EAAA1a,GAAA8a,MAAAnjB,EAAAD,EAAAC,EAAAqF,KAGAue,GAAA,SAAAve,GACAlI,EAAA0mB,YAAAf,IAAAgB,UAAAF,GAGA,KAFA,GACAb,GADA3nB,EAAAynB,GAAAzkB,OAEAhD,KACA2nB,EAAAF,GAAAznB,GACA2nB,EAAA1a,GAAA8a,SACA7lB,EAAA,oBAAAylB,EAAA1a,GAAAC,GAAAya,EAAAgB,WAAAhB,EAAAiB,aAAAjB,EAAAY,YAAAZ,EAAA1a,GAAAhD,EAEAwd,QAgBAoB,GAAA9mB,EAAAkL,MAiNAjN,GAAAmR,EAAAnO,OAA+BhD,OAC/B,SAAA8oB,GACA/mB,EAAA+mB,GAAAD,GAAAC,GAAA,SAAA/R,EAAAlT,GAKA,MAJA9B,GAAAK,GAAA2U,EAAA,cACAvY,KAAA2S,OAAA3S,KAAA2S,WACA3S,KAAA2S,OAAAxN,MAAsChG,KAAAmrB,EAAA7lB,EAAA8T,EAAAgS,OAAAhC,GAAAvoB,KAAAwqB,OAAAxqB,KAAAwpB,MAAApa,EAAA2C,IAAAuY,EAAA/R,EAAAlT,GAAArF,SAEtCA,MAEAuD,EAAA,KAAA+mB,GAAAD,GAAA,KAAAC,GAAA,SAAA/R,GAGA,IAFA,GAAA5F,GAAA3S,KAAA2S,WACAlR,EAAAkR,EAAAnO,OACA/C,KACAkR,EAAAlR,GAAAtC,MAAAmrB,IAAA/mB,EAAAK,GAAA2U,EAAA,cAAA5F,EAAAlR,GAAAgD,GAAA8T,IACA5F,EAAAlR,GAAA8oB,SACA5X,EAAA1O,OAAAxC,EAAA,IACAkR,EAAAnO,cAAAxE,MAAA2S,OAGA,OAAA3S,QAES2S,EAAAnR,IA4BT6oB,IAAA3M,KAAA,SAAAhb,EAAA9D,GACA,GAAA8e,GAAA9G,GAAA5W,KAAA0O,IAAAkI,GAAA5W,KAAA0O,OACA,OAAAnK,UAAAC,OACA,MAAAkZ,EAEA,OAAAnZ,UAAAC,OAAA,CACA,GAAAjB,EAAAK,GAAAlB,EAAA,WACA,OAAAlB,KAAAkB,KAAAqC,GAAAvD,IACAxB,KAAA0d,KAAAlc,EAAAkB,EAAAlB,GAEA,OAAAxB,MAGA,MADA0D,GAAA,oBAAA1D,KAAA0O,GAAA1O,KAAA0d,EAAAhb,MACAgb,EAAAhb,GAIA,MAFAgb,GAAAhb,GAAA9D,EACA8E,EAAA,oBAAA1D,KAAA0O,GAAA1O,KAAApB,EAAA8D,GACA1C,MAYAqqB,GAAAI,WAAA,SAAA/nB,GAMA,MALA,OAAAA,QACAkU,IAAA5W,KAAA0O,IAEAkI,GAAA5W,KAAA0O,WAAAkI,IAAA5W,KAAA0O,IAAAhM,GAEA1C,MASAqqB,GAAAK,QAAA,WACA,MAAA/lB,GAAAiS,GAAA5W,KAAA0O,UAcA2b,GAAAM,MAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAA/qB,MAAAgrB,UAAAJ,EAAAE,GAAAG,SAAAJ,EAAAE,GAAAD,IAYAT,GAAAa,QAAA,SAAAN,EAAAC,GACA,MAAA7qB,MAAAmrB,YAAAP,GAAAQ,WAAAP,GAEA,IAAAQ,MA+BAhB,IAAApB,KAAA,SAAAqC,EAAAC,EAAAC,EAAAzB,EAAAK,EAAAD,GACA,QAAAvb,GAAAnD,IACAA,EAAAkc,eAAAlc,GAAA+b,gBACA,IAAArhB,GAAAsF,EAAA4c,QACAjiB,EAAAqF,EAAA6c,QACAN,EAAA5Y,EAAA2C,IAAAkW,gBAAAC,WAAA9Y,EAAA2C,IAAAkI,KAAAiO,UACAC,EAAA/Y,EAAA2C,IAAAkW,gBAAAG,YAAAhZ,EAAA2C,IAAAkI,KAAAmO,UAEA,IADApoB,KAAAupB,MAAA7a,GAAAjD,EAAA6d,WACA/W,GAAA9G,EAAA2d,QAEA,IADA,GAAAC,GAAA7nB,EAAAiK,EAAA2d,QAAA5kB,OACAhD,KAGA,GAFA6nB,EAAA5d,EAAA2d,QAAA5nB,GACAxB,KAAAupB,MAAA7a,GAAA2a,EAAAC,WACAD,EAAAC,YAAAtpB,KAAAupB,MAAA7a,GAAA,CACAvI,EAAAkjB,EAAAhB,QACAjiB,EAAAijB,EAAAf,OACA,OAIAtoB,KAAAupB,MAAApjB,IAAAgiB,EACAnoB,KAAAupB,MAAAnjB,IAAA4hB,GACAiB,GAAAzkB,QAAAjB,EAAAuP,UAAAoW,IAAAnW,QAAAiX,IACAf,GAAA9jB,MAAuBsJ,GAAAzO,KAAA+pB,aAAAK,cAAAD,cACvBoB,GAAA7nB,EAAAI,GAAA,sBAAA9D,KAAA0O,GAAA6c,GACAD,GAAA5nB,EAAAI,GAAA,qBAAA9D,KAAA0O,GAAA4c,GACAE,GAAA9nB,EAAAI,GAAA,oBAAA9D,KAAA0O,GAAA8c,GACA9nB,EAAA,sBAAA1D,KAAA0O,GAAA0b,GAAAL,GAAA/pB,UAAAupB,MAAApjB,EAAAnG,KAAAupB,MAAAnjB,EAAAqF,GAKA,MAHAzL,MAAAupB,SACA8B,GAAAlmB,MAAwBsJ,GAAAzO,KAAA4O,UACxB5O,KAAA6S,UAAAjE,GACA5O,MAUAqqB,GAAAoB,WAAA,SAAAhnB,GACAA,EAAAf,EAAAI,GAAA,qBAAA9D,KAAA0O,GAAAjK,GAAAf,EAAA6mB,OAAA,qBAAAvqB,KAAA0O,KAQA2b,GAAAqB,OAAA,WAEA,IADA,GAAAlqB,GAAA6pB,GAAA7mB,OACAhD,KAAA6pB,GAAA7pB,GAAAiN,IAAAzO,OACAA,KAAA2rB,YAAAN,GAAA7pB,GAAAoN,OACAyc,GAAApnB,OAAAzC,EAAA,GACAkC,EAAA6mB,OAAA,kBAAAvqB,KAAA0O,MAEA2c,GAAA7mB,QAAAjB,EAAA0mB,YAAAf,IAAAgB,UAAAF,IACAf,OAkBA3X,EAAAE,OAAA,SAAArL,EAAAC,EAAAlE,GACA,GAAAwkB,GAAAnjB,EAAAS,QAAAwN,OAAAxR,KAAAmG,GAAA,EAAAC,GAAA,EAAAlE,GAAA,EAEA,OADAlC,MAAA4rB,SAAA5rB,KAAA4rB,QAAAzmB,KAAAuhB,GACAA,GAuBApV,EAAAG,KAAA,SAAAtL,EAAAC,EAAA4Q,EAAAC,EAAA/U,GACA,GAAAwkB,GAAAnjB,EAAAS,QAAAyN,KAAAzR,KAAAmG,GAAA,EAAAC,GAAA,EAAA4Q,GAAA,EAAAC,GAAA,EAAA/U,GAAA,EAEA,OADAlC,MAAA4rB,SAAA5rB,KAAA4rB,QAAAzmB,KAAAuhB,GACAA,GAmBApV,EAAAK,QAAA,SAAAxL,EAAAC,EAAAkP,EAAAC,GACA,GAAAmR,GAAAnjB,EAAAS,QAAA2N,QAAA3R,KAAAmG,GAAA,EAAAC,GAAA,EAAAkP,GAAA,EAAAC,GAAA,EAEA,OADAvV,MAAA4rB,SAAA5rB,KAAA4rB,QAAAzmB,KAAAuhB,GACAA,GAkCApV,EAAAI,KAAA,SAAAyL,GACAA,IAAA5Z,EAAAK,GAAAuZ,EA3pGA,YA2pGA5Z,EAAAK,GAAAuZ,EAAA,GAAApZ,KAAAoZ,GAAAzK,EACA,IAAAgU,GAAAnjB,EAAAS,QAAA0N,KAAAnO,EAAAsoB,OAAAroB,GAAAD,EAAAgB,WAAAvE,KAEA,OADAA,MAAA4rB,SAAA5rB,KAAA4rB,QAAAzmB,KAAAuhB,GACAA,GAoBApV,EAAAO,MAAA,SAAA2D,EAAArP,EAAAC,EAAA4Q,EAAAC,GACA,GAAAyP,GAAAnjB,EAAAS,QAAA6N,MAAA7R,KAAAwV,GAAA,cAAArP,GAAA,EAAAC,GAAA,EAAA4Q,GAAA,EAAAC,GAAA,EAEA,OADAjX,MAAA4rB,SAAA5rB,KAAA4rB,QAAAzmB,KAAAuhB,GACAA,GAkBApV,EAAAM,KAAA,SAAAzL,EAAAC,EAAAwL,GACA,GAAA8U,GAAAnjB,EAAAS,QAAA4N,KAAA5R,KAAAmG,GAAA,EAAAC,GAAA,EAAA8J,EAAA0B,GAEA,OADA5R,MAAA4rB,SAAA5rB,KAAA4rB,QAAAzmB,KAAAuhB,GACAA,GAmBApV,EAAAiG,IAAA,SAAAuU,IACAvoB,EAAAK,GAAAkoB,EAAA,WAAAA,EAAAznB,MAAAtB,UAAAkB,OAAAvC,KAAA6C,UAAA,EAAAA,UAAAC,QACA,IAAAkiB,GAAA,GAAAqF,IAAAD,EAIA,OAHA9rB,MAAA4rB,SAAA5rB,KAAA4rB,QAAAzmB,KAAAuhB,GACAA,EAAA,MAAA1mB,KACA0mB,EAAA,WACAA,GAgBApV,EAAA0a,SAAA,SAAAzU,GACAvX,KAAA4rB,QAAArU,GAAAvX,KAAAuX,OAUAjG,EAAA2a,UAAA,SAAA1U,GACA,GAAAmP,GAAA1mB,KAAA4rB,OAEA,cADA5rB,MAAA4rB,QACAlF,GAUApV,EAAA4a,QAAA,WACA,GAAAnG,GAAA/lB,KAAAmsB,OAAAxC,UACA,QACA/d,MAAAma,EAAAI,YACAta,OAAAka,EAAAM,eAcA/U,EAAA8a,QAAA,SAAAxgB,EAAAC,GACA,MAAAtI,GAAAS,QAAAooB,QAAA1qB,KAAA1B,KAAA4L,EAAAC,IAiBAyF,EAAA+a,WAAA,SAAAlmB,EAAAC,EAAA4Q,EAAAC,EAAAqV,GACA,MAAA/oB,GAAAS,QAAAqoB,WAAA3qB,KAAA1B,KAAAmG,EAAAC,EAAA4Q,EAAAC,EAAAqV,IAcAhb,EAAA7D,IAAA6D,EAAA4S,OAAA,KAOA5S,EAAAib,QAAAhpB,CACA,IAAAipB,IAAA,SAAA3O,GACA,GAAA4O,GAAA5O,EAAA6O,wBACA3a,EAAA8L,EAAA8O,cACA1S,EAAAlI,EAAAkI,KACA2S,EAAA7a,EAAAkW,gBACA4E,EAAAD,EAAAC,WAAA5S,EAAA4S,WAAA,EAAAC,EAAAF,EAAAE,YAAA7S,EAAA6S,YAAA,CAGA,QACA1mB,EAHAqmB,EAAAhf,KAAA2B,EAAA6C,IAAA8a,aAAAH,EAAA1E,WAAAjO,EAAAiO,WAAA2E,EAIA1mB,EAHAsmB,EAAAjsB,MAAA4O,EAAA6C,IAAA+a,aAAAJ,EAAAxE,YAAAnO,EAAAmO,YAAA0E,GAoBAxb,GAAAuY,kBAAA,SAAA1jB,EAAAC,GACA,GAAA2I,GAAA/O,KACAoY,EAAArJ,EAAAod,OACAnW,EAAA5G,EAAA2C,IAAAkb,iBAAA9mB,EAAAC,EACA,IAAAgJ,EAAA6C,IAAA2X,OAAA,OAAA5T,EAAAiQ,QAAA,CACA,GAAAiH,GAAAV,GAAApU,GACA+U,EAAA/U,EAAAgV,eACAD,GAAAhnB,IAAA+mB,EAAA/mB,EACAgnB,EAAA/mB,IAAA8mB,EAAA9mB,EACA+mB,EAAAvhB,MAAAuhB,EAAAthB,OAAA,CACA,IAAAwhB,GAAAjV,EAAAkV,oBAAAH,EAAA,KACAE,GAAA7oB,SACAwR,EAAAqX,IAAA7oB,OAAA,IAGA,IAAAwR,EACA,WAEA,MAAAA,EAAA2T,YAAA3T,GAAAoC,EAAAuR,aAAA3T,EAAAuW,SACAvW,IAAA2T,UAIA,OAFA3T,IAAAjH,EAAAod,OAAAxC,aAAA3T,EAAAoC,GACApC,OAAAuW,QAAAxd,EAAAwe,QAAAvX,EAAAwX,WAAA,MAeAlc,EAAAmc,kBAAA,SAAApW,GACA,GAAAE,GAAAvX,KAAAuX,KAMA,OALAvX,MAAA0tB,QAAA,SAAAjf,GACAlL,EAAA6F,gBAAAqF,EAAAsB,UAAAsH,IACAE,EAAApS,KAAAsJ,KAGA8I,GAcAjG,EAAAic,QAAA,SAAA7e,GAEA,IADA,GAAAif,GAAA3tB,KAAAkkB,OACAyJ,GAAA,CACA,GAAAA,EAAAjf,MACA,MAAAif,EAEAA,KAAAzf,KAEA,aAoBAoD,EAAAoc,QAAA,SAAA3c,EAAA6c,GAEA,IADA,GAAAD,GAAA3tB,KAAAkkB,OACAyJ,GAAA,CACA,QAAA5c,EAAArP,KAAAksB,EAAAD,GACA,MAAA3tB,KAEA2tB,KAAAzf,KAEA,MAAAlO,OAcAsR,EAAAuc,mBAAA,SAAA1nB,EAAAC,GACA,GAAAmR,GAAAvX,KAAAuX,KAMA,OALAvX,MAAA0tB,QAAA,SAAAjf,GACAA,EAAAqf,cAAA3nB,EAAAC,IACAmR,EAAApS,KAAAsJ,KAGA8I,GAoBA8S,GAAAyD,cAAA,SAAA3nB,EAAAC,GACA,GAAA2nB,GAAA/tB,KAAAguB,SAAA7W,GAAAnX,KAAAY,MAAAZ,KAIA,OAHAA,MAAAqN,KAAA,cAAArN,KAAAqN,KAAA,aAAA7I,SACAupB,EAAAxqB,EAAAkhB,cAAAsJ,EAAA/tB,KAAAqN,KAAA,eAEA9J,EAAA2b,kBAAA6O,EAAA5nB,EAAAC,IAqBAikB,GAAAta,QAAA,SAAAke,GACA,GAAAjuB,KAAAkuB,QACA,QAEA,IAAA1e,GAAAxP,KAAAwP,CACA,OAAAye,KACAze,EAAA2e,OAAA3e,EAAA4e,SACApuB,KAAAguB,SAAA7W,GAAAnX,KAAAY,MAAAZ,MACAwP,EAAA4e,OAAA9O,GAAAtf,KAAAguB,UACAxe,EAAA4e,OAAA5a,SAAA9H,EACA8D,EAAA2e,MAAA,GAEA3e,EAAA4e,UAEA5e,EAAA2e,OAAA3e,EAAAgW,SAAAhW,EAAA6H,SACA7H,EAAA2e,OAAAnuB,KAAAguB,WACAxe,EAAA4e,OAAA,EACApuB,KAAAguB,SAAA7W,GAAAnX,KAAAY,MAAAZ,OAEAwP,EAAA6H,KAAAiI,GAAA9H,GAAAxX,KAAAguB,SAAAhuB,KAAA4P,SACAJ,EAAA6H,KAAA7D,SAAA9H,EACA8D,EAAA2e,MAAA3e,EAAAgW,OAAA,GAEAhW,EAAA6H,OASAgT,GAAA1lB,MAAA,WACA,GAAA3E,KAAAkuB,QACA,WAEA,IAAAxH,GAAA1mB,KAAA+O,MAAA/O,KAAAY,QAAAyM,KAAArN,KAAAqN,OAEA,OADArN,MAAA4rB,SAAA5rB,KAAA4rB,QAAAzmB,KAAAuhB,GACAA,GAuBA2D,GAAAgE,KAAA,SAAAA,GACA,WAAAruB,KAAAY,KACA,WAEAytB,QACA,IAAAnrB,IACA0I,OAAAyiB,EAAAziB,OAAA,MAAA5L,KAAAqN,KAAA,oBACAsH,KAAA0Z,EAAA1Z,OAAA,EACAU,QAAA,MAAAgZ,EAAAhZ,QAAA,GAAAgZ,EAAAhZ,QACAiZ,QAAAD,EAAAC,SAAA,EACAC,QAAAF,EAAAE,SAAA,EACA7U,MAAA2U,EAAA3U,OAAA,QAEA9X,EAAAsB,EAAA0I,MAAA,EACA1J,EAAAlC,KAAA+O,MACA2X,EAAAxkB,EAAAqV,MACA7F,EAAA1R,KAAAguB,UAAA7W,GAAAnX,KAAAY,MAAAZ,KACA0R,GAAA1R,KAAA4P,OAAA4H,GAAA9F,EAAA1R,KAAA4P,QAAA8B,CACA,QAAAlQ,GAAA,EAAuBA,EAAAI,EAAA,EAAWJ,IAClCklB,EAAAvhB,KAAAjD,EAAAwP,QAAArE,MACAoI,OAAAvS,EAAAwW,MACA/E,KAAAzR,EAAAyR,KAAAzR,EAAAwW,MAAA,OACA9D,kBAAA,QACAD,iBAAA,QACAI,iBAAA7S,EAAA0I,MAAAhK,EAAAJ,GAAAmH,QAAA,GACA0M,UAAAnS,EAAAmS,QAAAzT,GAAA+G,QAAA,KAGA,OAAA+d,GAAAoD,aAAA9pB,MAAAslB,UAAApiB,EAAAorB,QAAAprB,EAAAqrB,SAEA,IACAC,IAAA,SAAAziB,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,EAAA1H,GACA,aAAAA,EACAkC,EAAAqF,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,GAEA3I,EAAAqG,kBAAAmC,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,EAAArE,EAAAkE,EAAAC,EAAAmS,EAAAC,EAAAC,EAAAC,EAAArS,EAAAC,EAAA1H,KAGAiqB,GAAA,SAAAC,EAAAC,GACA,gBAAAjd,EAAAlN,EAAAoqB,GACAld,EAAApC,GAAAoC,EAGA,QAFAvL,GAAAC,EAAAnD,EAAAxB,EAAkDotB,EAAlDC,EAAA,GAAAC,KACA5O,EAAA,EACA3e,EAAA,EAAA0D,EAAAwM,EAAAlN,OAA6ChD,EAAA0D,EAAQ1D,IAAA,CAErD,GADAyB,EAAAyO,EAAAlQ,GACA,KAAAyB,EAAA,GACAkD,GAAAlD,EAAA,GACAmD,GAAAnD,EAAA,OACiB,CAEjB,GADAxB,EAAA+sB,GAAAroB,EAAAC,EAAAnD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAkd,EAAA1e,EAAA+C,EAAA,CACA,GAAAmqB,IAAAI,EAAAngB,MAAA,CAGA,GAFAigB,EAAAL,GAAAroB,EAAAC,EAAAnD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAuB,EAAA2b,GACA2O,IAAA,IAAAD,EAAAjgB,MAAAzI,EAAA0oB,EAAAjgB,MAAAxI,EAAAyoB,EAAAltB,EAAAwE,EAAA0oB,EAAAltB,EAAAyE,EAAAyoB,EAAA1oB,EAAA0oB,EAAAzoB,GACAwoB,EAA4C,MAAAE,EAC5CC,GAAAngB,MAAAkgB,EACAA,GAAA,IAAAD,EAAA1oB,EAAA0oB,EAAAzoB,EAAA,IAAAyoB,EAAAjsB,EAAAuD,EAAA0oB,EAAAjsB,EAAAwD,EAAAyoB,EAAAhQ,IAAA1Y,EAAA0oB,EAAAhQ,IAAAzY,EAAAnD,EAAA,GAAAA,EAAA,IAAAwC,OACA0a,GAAA1e,EACA0E,GAAAlD,EAAA,GACAmD,GAAAnD,EAAA,EACA,UAEA,IAAAyrB,IAAAC,EAEA,MADAE,GAAAL,GAAAroB,EAAAC,EAAAnD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAuB,EAAA2b,IACoCha,EAAA0oB,EAAA1oB,EAAAC,EAAAyoB,EAAAzoB,EAAAwY,MAAAiQ,EAAAjQ,OAGpCuB,GAAA1e,EACA0E,GAAAlD,EAAA,GACAmD,GAAAnD,EAAA,GAEA6rB,GAAA7rB,EAAA2C,QAAA3C,EAKA,MAHA8rB,GAAAlQ,IAAAiQ,EACAD,EAAAH,EAAAvO,EAAAwO,EAAAI,EAAAxrB,EAAAqG,kBAAAzD,EAAAC,EAAAnD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACA4rB,EAAAjQ,QAAAiQ,GAAqC1oB,EAAA0oB,EAAA1oB,EAAAC,EAAAyoB,EAAAzoB,EAAAwY,MAAAiQ,EAAAjQ,QACrCiQ,IAGAG,GAAAP,GAAA,GACAQ,GAAAR,KACAS,GAAAT,GAAA,IAaAlrB,GAAAyrB,kBAmBAzrB,EAAA0rB,oBAeA1rB,EAAA4rB,WAAA,SAAAzd,EAAArD,EAAAC,GACA,GAAAtO,KAAAgvB,eAAAtd,GAAApD,EAAA,KACA,MAAA4gB,IAAAxd,EAAArD,GAAAwQ,GAEA,IAAAtT,GAAA2jB,GAAAxd,EAAApD,EAAA,EACA,OAAAD,GAAA6gB,GAAA3jB,EAAA8C,GAAAwQ,IAAAtT,GASA8e,GAAA2E,eAAA,WACA,GAAAtd,GAAA1R,KAAAmX,SACA,IAAAzF,EAIA,MAAA1R,MAAAwpB,KAAAwF,eACAhvB,KAAAwpB,KAAAwF,iBAGAA,GAAAtd,IAmBA2Y,GAAA4E,iBAAA,SAAAzqB,GACA,GAAAkN,GAAA1R,KAAAmX,SACA,IAAAzF,EAIA,MAAAud,IAAAvd,EAAAlN,IAUA6lB,GAAAlT,QAAA,WACA,GAAAzF,GACAyF,EAAA5T,EAAA6T,SAAApX,KAAAY,KAEA,YAAAZ,KAAAY,MAAA,OAAAZ,KAAAY,KAQA,MAJAuW,KACAzF,EAAAyF,EAAAnX,OAGA0R,GAeA2Y,GAAA8E,WAAA,SAAA9gB,EAAAC,GACA,GAAAoD,GAAA1R,KAAAmX,SACA,IAAAzF,EAIA,MAAAnO,GAAA4rB,WAAAzd,EAAArD,EAAAC,GAmBA,IAAA8gB,IAAA7rB,EAAAiN,iBACA6e,OAAA,SAAAzsB,GACA,MAAAA,IAEA0sB,IAAA,SAAA1sB,GACA,MAAAyQ,GAAAzQ,EAAA,MAEA2sB,IAAA,SAAA3sB,GACA,MAAAyQ,GAAAzQ,EAAA,MAEA4sB,KAAA,SAAA5sB,GACA,GAAA6a,GAAA,IAAA7a,EAAA,KACAogB,EAAArb,EAAAC,KAAA,MAAA6V,KACAtX,EAAA6c,EAAAvF,EACAhC,EAAApI,EAAApL,EAAA9B,GAAA,MAAAA,EAAA,QACAC,GAAA4c,EAAAvF,EACA8B,EAAAlM,EAAApL,EAAA7B,GAAA,MAAAA,EAAA,QACA/D,EAAAoZ,EAAA8D,EAAA,EACA,aAAAld,cAEAotB,OAAA,SAAA7sB,GACA,GAAAM,GAAA,OACA,OAAAN,OAAAM,EAAA,GAAAN,EAAAM,IAEAwsB,QAAA,SAAA9sB,GACAA,GAAA,CACA,IAAAM,GAAA,OACA,OAAAN,OAAAM,EAAA,GAAAN,EAAAM,GAAA,GAEAysB,QAAA,SAAA/sB,GACA,MAAAA,QACAA,EAEAyQ,EAAA,MAAAzQ,GAAA+E,EAAAsZ,IAAA,EAAA3N,GAAA1Q,EAAA,aAEAgtB,OAAA,SAAAhtB,GACA,GAEAnB,GAFAyB,EAAA,OACAD,EAAA,IAkBA,OAhBAL,GAAA,EAAAK,EACAxB,EAAAyB,EAAAN,IAEAA,EAAA,EAAAK,GACAL,GAAA,IAAAK,EACAxB,EAAAyB,EAAAN,IAAA,KAEAA,EAAA,IAAAK,GACAL,GAAA,KAAAK,EACAxB,EAAAyB,EAAAN,IAAA,QAEAA,GAAA,MAAAK,EACAxB,EAAAyB,EAAAN,IAAA,SAIAnB,GAGA2tB,IAAAS,OAAAT,GAAA,WAAAA,GAAA,KACAA,GAAAU,QAAAV,GAAA,YAAAA,GAAA,KACAA,GAAAW,UAAAX,GAAA,eAAAA,GAAA,MACAA,GAAA,WAAAA,GAAAK,OACAL,GAAA,YAAAA,GAAAM,OAEA,IAAAlhB,OACA2C,GAAA/P,OAAA4uB,uBACA5uB,OAAA6uB,6BACA7uB,OAAA8uB,0BACA9uB,OAAA+uB,wBACA/uB,OAAAgvB,yBACA,SAAArf,GACAmN,WAAAnN,EAAA,KAEAG,GAAA,WAGA,IAFA,GAAAmf,IAAA,GAAAxhB,MACApN,EAAA,EACkBA,EAAA+M,GAAAhK,OAA8B/C,IAAA,CAChD,GAAAgK,GAAA+C,GAAA/M,EACA,KAAAgK,EAAAgD,GAAAyf,UAAAziB,EAAA6kB,OAAA,CAGA,GASAC,GAEA7tB,EAXA8tB,EAAAH,EAAA5kB,EAAAmD,MACA3B,EAAAxB,EAAAwB,GACAqD,EAAA7E,EAAA6E,OACAjC,EAAA5C,EAAA4C,KACAE,EAAA9C,EAAA8C,KACAD,EAAA7C,EAAA6C,GAEAmiB,GADAhlB,EAAApJ,EACAoJ,EAAAgD,IACA8I,KAEAmZ,IAUA,IARAjlB,EAAAkD,YACA6hB,GAAA/kB,EAAAkD,WAAAlD,EAAAuB,KAAAS,IAAAhC,EAAA0C,OAAA1C,EAAAmC,QAAAnC,EAAA0C,MAAAlB,EACAxB,EAAAoC,OAAApC,EAAAkD,iBACAlD,GAAAkD,WACAlD,EAAAqF,MAAAtC,GAAAvK,OAAAxC,IAAA,IAEAgK,EAAAoC,QAAApC,EAAA0C,MAAA1C,EAAAmC,QAAAnC,EAAA0C,OAAAqiB,EAAAvjB,IAAAxB,EAAAuB,KAAAS,MAEA+iB,EAAA,GAGA,GAAAA,EAAAvjB,EAAA,CACA,GAAAwb,GAAAnY,EAAAkgB,EAAAvjB,EACA,QAAAI,KAAAgB,GAAA,GAAAA,EAAAtJ,GAAAsI,GAAA,CACA,OAAAyB,GAAAzB,IACA,IAAAnJ,GACAqsB,GAAAliB,EAAAhB,GAAAob,EAAAxb,EAAAsB,EAAAlB,EACA,MACA,cACAkjB,EAAA,QACAI,GAAA5c,EAAA1F,EAAAhB,GAAAnL,EAAAumB,EAAAxb,EAAAsB,EAAAlB,GAAAnL,IACAyuB,GAAA5c,EAAA1F,EAAAhB,GAAA+B,EAAAqZ,EAAAxb,EAAAsB,EAAAlB,GAAA+B,IACAuhB,GAAA5c,EAAA1F,EAAAhB,GAAA7B,EAAAid,EAAAxb,EAAAsB,EAAAlB,GAAA7B,KACA/F,KAAA,QACA,MACA,YACA8qB,IACA,QAAA/uB,GAAA,EAAA0D,EAAAmJ,EAAAhB,GAAA7I,OAAuEhD,EAAA0D,EAAQ1D,IAAA,CAC/E+uB,EAAA/uB,IAAA6M,EAAAhB,GAAA7L,GAAA,GACA,QAAAsI,GAAA,EAAAiB,EAAAsD,EAAAhB,GAAA7L,GAAAgD,OAA8EsF,EAAAiB,EAAQjB,IACtFymB,EAAA/uB,GAAAsI,IAAAuE,EAAAhB,GAAA7L,GAAAsI,GAAA2e,EAAAxb,EAAAsB,EAAAlB,GAAA7L,GAAAsI,EAEAymB,GAAA/uB,GAAA+uB,EAAA/uB,GAAAiE,KAAAkG,GAEA4kB,IAAA9qB,KAAAkG,EACA,MACA,iBACA,GAAA4C,EAAAlB,GAAAsC,KAEA,IADA4gB,KACA/uB,EAAA,EAAA0D,EAAAmJ,EAAAhB,GAAA7I,OAAuEhD,EAAA0D,EAAQ1D,IAE/E,IADA+uB,EAAA/uB,IAAA6M,EAAAhB,GAAA7L,GAAA,IACAsI,EAAA,EAAAiB,EAAAsD,EAAAhB,GAAA7L,GAAAgD,OAA8EsF,EAAAiB,EAAQjB,IACtFymB,EAAA/uB,GAAAsI,GAAAuE,EAAAhB,GAAA7L,GAAAsI,GAAA2e,EAAAxb,EAAAsB,EAAAlB,GAAA7L,GAAAsI,OAGiC,CACjC,GAAA7H,GAAA,SAAAT,GACA,OAAA6M,EAAAhB,GAAA7L,GAAAinB,EAAAxb,EAAAsB,EAAAlB,GAAA7L,GAGA+uB,KAAA,IAAAtuB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA,KACA,WACA,gBAAAoL,EAGA,IAFAkjB,KACA/uB,EAAA,EACAA,KACA+uB,EAAA/uB,IAAA6M,EAAAhB,GAAA7L,GAAAinB,EAAAxb,EAAAsB,EAAAlB,GAAA7L,EAGA,MACA,SACA,GAAA6O,MAAAxG,GAAAwE,EAAAhB,GAGA,KAFAkjB,KACA/uB,EAAAivB,EAAA1hB,MAAAC,iBAAA3B,GAAA7I,OACAhD,KACA+uB,EAAA/uB,IAAA6O,EAAA7O,GAAAinB,EAAAxb,EAAAsB,EAAAlB,GAAA7L,GAIA+V,EAAAlK,GAAAkjB,EAEAE,EAAApjB,KAAAkK,GACA,SAAA7I,EAAA+hB,EAAAzjB,GACAkR,WAAA,WACAxa,EAAA,sBAAAgL,EAAA+hB,EAAAzjB,MAEqByjB,EAAA/hB,GAAA+hB,EAAAhlB,EAAAuB,UACJ,CAUjB,GATA,SAAAvI,EAAAgK,EAAAlD,GACA2S,WAAA,WACAxa,EAAA,sBAAA+K,EAAAC,GAAAD,EAAAlD,GACA7H,EAAA,uBAAA+K,EAAAC,GAAAD,EAAAlD,GACAhI,EAAAK,GAAAa,EAAA,aAAAA,EAAA/C,KAAA+M,MAEqBhD,EAAAsF,SAAA0f,EAAAhlB,EAAAuB,MACrByjB,EAAApjB,KAAAiB,GACAE,GAAAvK,OAAAxC,IAAA,GACAgK,EAAAuF,OAAA,IAAAvF,EAAAyC,KAAA,CACA,IAAAxL,IAAA4L,KAAAvJ,GAAArC,KACAguB,EAAAhuB,GAAA+I,EAAAqC,YAAApL,GAEA+I,GAAAgD,GAAApB,KAAAqjB,GACAhjB,EAAAjC,EAAAuB,KAAAvB,EAAAgD,GAAAhD,EAAAuB,KAAAE,SAAA,QAAAzB,EAAAqC,YAAArC,EAAAuF,OAAA,GAEAvF,EAAAyC,OAAAzC,EAAAqF,MACApD,EAAAjC,EAAAuB,KAAAvB,EAAAgD,GAAAhD,EAAAyC,KAAA,KAAAzC,EAAAqC,YAAArC,EAAAuF,UAIAxC,GAAAhK,QAAA2M,GAAAD,KAEAyf,GAAA,SAAAjX,GACA,MAAAA,GAAA,QAAAA,EAAA,IAAAA,EAuBA2Q,IAAAuG,YAAA,SAAAniB,EAAAzB,EAAAe,EAAAd,EAAAqD,EAAAS,GACA,GAAApD,GAAA3N,IACA,IAAA2N,EAAAugB,QAEA,MADAnd,MAAArP,KAAAiM,GACAA,CAEA,IAAApC,GAAAwC,YAAAhB,GAAAgB,EAAAxK,EAAA2N,UAAAnD,EAAAd,EAAAqD,EAAAS,EAEArD,GAAAnC,EAAAoC,EAAApC,EAAA2B,SAAA,QAAAS,EAAAN,OACA,QAAA7L,GAAA,EAAA0D,EAAAsJ,GAAAhK,OAAsDhD,EAAA0D,EAAQ1D,IAC9D,GAAAgN,GAAAhN,GAAAwL,SAAAwB,GAAAhN,GAAAiN,MAAA,CACAD,GAAAtJ,EAAA,GAAA0J,MAAAJ,GAAAhN,GAAAoN,KACA,OAGA,MAAAjB,IA2DA0c,GAAAwG,YAAA,SAAApsB,GAEA,MADAA,GAAAf,EAAAI,GAAA,sBAAA9D,KAAA0O,GAAAjK,GAAAf,EAAA6mB,OAAA,sBAAAvqB,KAAA0O,IACA1O,MAiCA+M,EAAAhK,UAAA+tB,MAAA,SAAAA,GACA,GAAAvlB,GAAA,GAAAwB,GAAA/M,KAAAgN,KAAAhN,KAAAiN,GAGA,OAFA1B,GAAA6B,MAAApN,KAAAoN,MACA7B,EAAAsF,KAAAigB,GAAA,EACAvlB,GAcAwB,EAAAhK,UAAAiO,OAAA,SAAA5D,GACA,GAAA7B,GAAA,GAAAwB,GAAA/M,KAAAgN,KAAAhN,KAAAiN,GAGA,OAFA1B,GAAAsF,IAAA7Q,KAAA6Q,IACAtF,EAAA6B,MAAAzF,EAAAopB,MAAA5oB,EAAAiF,EAAA,OACA7B,GAgOAhI,EAAA2N,UAAA,SAAAnD,EAAAd,EAAAqD,EAAAS,GACA,GAAAhD,YAAAhB,GACA,MAAAgB,IAEAxK,EAAAK,GAAA0M,EAAA,aAAAA,IACAS,KAAAT,GAAA,KACAA,EAAA,MAEAvC,EAAArP,OAAAqP,GACAd,MAAA,CACA,IACA+jB,GACA3jB,EAFApK,IAGA,KAAAoK,IAAAU,KAAAhJ,GAAAsI,IAAAC,EAAAD,OAAAC,EAAAD,GAAA,KAAAA,IACA2jB,GAAA,EACA/tB,EAAAoK,GAAAU,EAAAV,GAEA,IAAA2jB,EAmBA,MAFA1gB,KAAArN,EAAAqN,UACAS,IAAA9N,EAAA8N,YACA,GAAAhE,IAAkCkkB,IAAAhuB,GAAOgK,EAjBzC,IAAA8D,EAAA,CAEA,GAAAmgB,GAAA,CACA,QAAA1vB,KAAAuM,GAAA,CACA,GAAAH,GAAAqG,EAAAzS,EACAuM,GAAAhJ,GAAAvD,IAAAoM,EAAAsjB,IACAA,EAAAtjB,GAGAsjB,GAAA,KAEAnjB,EAAAmjB,GAAAngB,WAAAhD,EAAAmjB,GAAAngB,YAEA,UAAAhE,GAAAgB,EAAAd,IAwBAod,GAAA8G,QAAA,SAAApjB,EAAAd,EAAAqD,EAAAS,GACA,GAAApD,GAAA3N,IACA,IAAA2N,EAAAugB,QAEA,MADAnd,MAAArP,KAAAiM,GACAA,CAEA,IAAAX,GAAAe,YAAAhB,GAAAgB,EAAAxK,EAAA2N,UAAAnD,EAAAd,EAAAqD,EAAAS,EAEA,OADArD,GAAAV,EAAAW,EAAAX,EAAAE,SAAA,QAAAS,EAAAN,QACAM,GAkBA0c,GAAA+G,QAAA,SAAApkB,EAAApO,GAIA,MAHAoO,IAAA,MAAApO,GACAoB,KAAA6N,OAAAb,EAAA5E,EAAAxJ,EAAAoO,EAAAC,IAAAD,EAAAC,IAEAjN,MAuBAqqB,GAAAxc,OAAA,SAAAb,EAAApO,GACA,GAEAuhB,GACA1U,EAHAib,KACAllB,EAAA,CAGA,UAAA5C,EAEA,MADA8O,GAAAV,EAAAhN,MAAA,EAAAoI,EAAAxJ,EAAA,IACAoB,IAGA,KADAmgB,EAAA3R,GAAAhK,OACkBhD,EAAA2e,EAAS3e,IAE3B,GADAiK,EAAA+C,GAAAhN,GACAiK,EAAAgD,GAAAC,IAAA1O,KAAA0O,MAAA1B,GAAAvB,EAAAuB,SAAA,CACA,GAAAA,EACA,MAAAvB,GAAAoC,MAEA6Y,GAAAvhB,MACA6H,KAAAvB,EAAAuB,KACAa,OAAApC,EAAAoC,SAIA,MAAAb,GACA,EAEA0Z,GAeA2D,GAAAgH,MAAA,SAAArkB,GACA,OAAAxL,GAAA,EAAuBA,EAAAgN,GAAAhK,OAA8BhD,IAAAgN,GAAAhN,GAAAiN,GAAAC,IAAA1O,KAAA0O,IAAA1B,GAAAwB,GAAAhN,GAAAwL,UACrD,IAAAtJ,EAAA,sBAAA1D,KAAA0O,GAAA1O,KAAAwO,GAAAhN,GAAAwL,QACAwB,GAAAhN,GAAA8uB,QAAA,EAGA,OAAAtwB,OAcAqqB,GAAAiH,OAAA,SAAAtkB,GACA,OAAAxL,GAAA,EAAuBA,EAAAgN,GAAAhK,OAA8BhD,IAAA,GAAAgN,GAAAhN,GAAAiN,GAAAC,IAAA1O,KAAA0O,MAAA1B,GAAAwB,GAAAhN,GAAAwL,SAAA,CACrD,GAAAvB,GAAA+C,GAAAhN,IACA,IAAAkC,EAAA,uBAAA1D,KAAA0O,GAAA1O,KAAAyL,EAAAuB,cACAvB,GAAA6kB,OACAtwB,KAAA6N,OAAApC,EAAAuB,KAAAvB,EAAAoC,SAGA,MAAA7N,OAcAqqB,GAAAvZ,KAAA,SAAA9D,GACA,OAAAxL,GAAA,EAAuBA,EAAAgN,GAAAhK,OAA8BhD,IAAAgN,GAAAhN,GAAAiN,GAAAC,IAAA1O,KAAA0O,IAAA1B,GAAAwB,GAAAhN,GAAAwL,UACrD,IAAAtJ,EAAA,qBAAA1D,KAAA0O,GAAA1O,KAAAwO,GAAAhN,GAAAwL,OACAwB,GAAAvK,OAAAzC,IAAA,EAGA,OAAAxB,OAOA0D,EAAAI,GAAA,iBAAAsN,GACA1N,EAAAI,GAAA,gBAAAsN,GACAiZ,GAAA7W,SAAA,WACA,yBAIA,IAAAuY,IAAA,SAAAwF,GAIA,GAHAvxB,KAAAuxB,SACAvxB,KAAAwE,OAAA,EACAxE,KAAAY,KAAA,MACA2wB,EACA,OAAA/vB,GAAA,EAAA0D,EAAAqsB,EAAA/sB,OAA8ChD,EAAA0D,EAAQ1D,KACtD+vB,EAAA/vB,IAAA+vB,EAAA/vB,GAAAsD,aAAAulB,GAAAvlB,aAAAysB,EAAA/vB,GAAAsD,aAAAinB,KACA/rB,UAAAuxB,MAAA/sB,QAAAxE,KAAAuxB,MAAAvxB,KAAAuxB,MAAA/sB,QAAA+sB,EAAA/vB,GACAxB,KAAAwE,WAKAgtB,GAAAzF,GAAAhpB,SAQAyuB,IAAArsB,KAAA,WAGA,OAFAF,GACAkb,EACA3e,EAAA,EAAA0D,EAAAX,UAAAC,OAA8ChD,EAAA0D,EAAQ1D,MACtDyD,EAAAV,UAAA/C,KACAyD,EAAAH,aAAAulB,GAAAvlB,aAAAG,EAAAH,aAAAinB,KACA5L,EAAAngB,KAAAuxB,MAAA/sB,OACAxE,KAAAmgB,GAAAngB,KAAAuxB,MAAApR,GAAAlb,EACAjF,KAAAwE,SAGA,OAAAxE,OASAwxB,GAAA9sB,IAAA,WAEA,MADA1E,MAAAwE,cAAAxE,WAAAwE,UACAxE,KAAAuxB,MAAA7sB,OAgBA8sB,GAAA9D,QAAA,SAAA3c,EAAA6c,GACA,OAAApsB,GAAA,EAAA0D,EAAAlF,KAAAuxB,MAAA/sB,OAA+ChD,EAAA0D,EAAQ1D,IACvD,QAAAuP,EAAArP,KAAAksB,EAAA5tB,KAAAuxB,MAAA/vB,MACA,MAAAxB,KAGA,OAAAA,MAEA,QAAAyxB,MAAApH,OAAAtlB,GAAA0sB,MACAD,GAAAC,IAAA,SAAApS,GACA,kBACA,GAAA7Z,GAAAjB,SACA,OAAAvE,MAAA0tB,QAAA,SAAAjf,GACAA,EAAA4Q,GAAA7b,GAAAiL,EAAAjJ,OAGSisB,IA2gBT,OAzgBAD,IAAAnkB,KAAA,SAAAlO,EAAAP,GACA,GAAAO,GAAAoE,EAAAK,GAAAzE,EAAA4E,IAAAR,EAAAK,GAAAzE,EAAA,aACA,OAAA2K,GAAA,EAAAiB,EAAA5L,EAAAqF,OAA6CsF,EAAAiB,EAAQjB,IACrD9J,KAAAuxB,MAAAznB,GAAAuD,KAAAlO,EAAA2K,QAGA,QAAAtI,GAAA,EAAA0D,EAAAlF,KAAAuxB,MAAA/sB,OAAmDhD,EAAA0D,EAAQ1D,IAC3DxB,KAAAuxB,MAAA/vB,GAAA6L,KAAAlO,EAAAP,EAGA,OAAAoB,OAQAwxB,GAAAE,MAAA,WACA,KAAA1xB,KAAAwE,QACAxE,KAAA0E,OAgBA8sB,GAAAvtB,OAAA,SAAA0tB,EAAAhsB,EAAAisB,GACAD,IAAA,EAAAxpB,EAAAnI,KAAAwE,OAAAmtB,EAAA,GAAAA,EACAhsB,EAAAwC,EAAA,EAAAC,EAAApI,KAAAwE,OAAAmtB,EAAAhsB,GACA,IAGAnE,GAHAqwB,KACAC,KACA1tB,IAEA,KAAA5C,EAAA,EAAmBA,EAAA+C,UAAAC,OAAsBhD,IACzC4C,EAAAe,KAAAZ,UAAA/C,GAEA,KAAAA,EAAA,EAAmBA,EAAAmE,EAAWnE,IAC9BswB,EAAA3sB,KAAAnF,KAAA2xB,EAAAnwB,GAEA,MAAcA,EAAAxB,KAAAwE,OAAAmtB,EAAyBnwB,IACvCqwB,EAAA1sB,KAAAnF,KAAA2xB,EAAAnwB,GAEA,IAAAuwB,GAAA3tB,EAAAI,MACA,KAAAhD,EAAA,EAAmBA,EAAAuwB,EAAAF,EAAArtB,OAA0BhD,IAC7CxB,KAAAuxB,MAAAI,EAAAnwB,GAAAxB,KAAA2xB,EAAAnwB,KAAAuwB,EAAA3tB,EAAA5C,GAAAqwB,EAAArwB,EAAAuwB,EAGA,KADAvwB,EAAAxB,KAAAuxB,MAAA/sB,OAAAxE,KAAAwE,QAAAmB,EAAAosB,EACA/xB,KAAAwB,UACAxB,MAAAwB,IAEA,WAAAuqB,IAAA+F,IAaAN,GAAAQ,QAAA,SAAAvjB,GACA,OAAAjN,GAAA,EAAA0D,EAAAlF,KAAAwE,OAAyChD,EAAA0D,EAAQ1D,IAAA,GAAAxB,KAAAwB,IAAAiN,EAEjD,MADAzO,MAAAiE,OAAAzC,EAAA,IACA,GAGAgwB,GAAAL,QAAA,SAAApjB,EAAAd,EAAAqD,EAAAS,IACAxN,EAAAK,GAAA0M,EAAA,cAAAA,KAAAS,EAAAT,GAAA,KACA,IAEArL,GAEAgtB,EAJA9R,EAAAngB,KAAAuxB,MAAA/sB,OACAhD,EAAA2e,EAEA5I,EAAAvX,IAEA,KAAAmgB,EACA,MAAAngB,KAEA+Q,KAAAkhB,EAAA,cACA9R,GAAApP,EAAArP,KAAA6V,KAEAjH,EAAA/M,EAAAK,GAAA0M,EAzuJA,UAyuJAA,EAAA2hB,CACA,IAAAjlB,GAAAzJ,EAAA2N,UAAAnD,EAAAd,EAAAqD,EAAA2hB,EAEA,KADAhtB,EAAAjF,KAAAuxB,QAAA/vB,GAAA2vB,QAAAnkB,GACAxL,KACAxB,KAAAuxB,MAAA/vB,KAAAxB,KAAAuxB,MAAA/vB,GAAA0sB,SAAAluB,KAAAuxB,MAAA/vB,GAAAovB,YAAA3rB,EAAA+H,KACAhN,KAAAuxB,MAAA/vB,KAAAxB,KAAAuxB,MAAA/vB,GAAA0sB,SAAA/N,GAEA,OAAAngB,OAEAwxB,GAAAU,YAAA,SAAAzjB,GAEA,IADA,GAAAjN,GAAAxB,KAAAuxB,MAAA/sB,OACAhD,KACAxB,KAAAuxB,MAAA/vB,GAAA0wB,YAAAzjB,EAEA,OAAAzO,OAEAwxB,GAAAzhB,QAAA,WAKA,OAJA5J,MACAC,KACAS,KACAC,KACAtF,EAAAxB,KAAAuxB,MAAA/sB,OAAuChD,KAAK,IAAAxB,KAAAuxB,MAAA/vB,GAAA0sB,QAAA,CAC5C,GAAAzB,GAAAzsB,KAAAuxB,MAAA/vB,GAAAuO,SACA5J,GAAAhB,KAAAsnB,EAAAtmB,GACAC,EAAAjB,KAAAsnB,EAAArmB,GACAS,EAAA1B,KAAAsnB,EAAAtmB,EAAAsmB,EAAA7gB,OACA9E,EAAA3B,KAAAsnB,EAAArmB,EAAAqmB,EAAA5gB,QAMA,MAJA1F,GAAAiC,EAAA5E,GAAA,EAAA2C,GACAC,EAAAgC,EAAA5E,GAAA,EAAA4C,GACAS,EAAAsB,EAAA3E,GAAA,EAAAqD,GACAC,EAAAqB,EAAA3E,GAAA,EAAAsD,IAEAX,IACAC,IACAS,KACAC,KACA8E,MAAA/E,EAAAV,EACA0F,OAAA/E,EAAAV,IAGAorB,GAAA7sB,MAAA,SAAAzB,GACAA,EAAAlD,KAAA+O,MAAAwI,KACA,QAAA/V,GAAA,EAAA0D,EAAAlF,KAAAuxB,MAAA/sB,OAA+ChD,EAAA0D,EAAQ1D,IACvD0B,EAAAiC,KAAAnF,KAAAuxB,MAAA/vB,GAAAmD,QAEA,OAAAzB,IAEAsuB,GAAAhe,SAAA,WACA,uBAGAge,GAAAnD,KAAA,SAAA8D,GACA,GAAAC,GAAApyB,KAAA+O,MAAAwI,KASA,OARAvX,MAAA0tB,QAAA,SAAAlD,EAAAmH,GACA,GAAAviB,GAAAob,EAAA6D,KAAA8D,EACA,OAAA/iB,GACAA,EAAAse,QAAA,SAAA2E,EAAAC,GACAF,EAAAjtB,KAAAktB,OAIAD,GAgBAZ,GAAA1D,cAAA,SAAA3nB,EAAAC,GACA,GAAA0nB,IAAA,CAOA,OANA9tB,MAAA0tB,QAAA,SAAAjf,GACA,GAAAA,EAAAqf,cAAA3nB,EAAAC,GAEA,MADA0nB,IAAA,GACA,IAGAA,GAkBAvqB,EAAAgvB,aAAA,SAAA1d,GACA,IAAAA,EAAA2d,KACA,MAAA3d,EAEA7U,MAAAyyB,MAAAzyB,KAAAyyB,SACA,IAAAC,IACA1b,EAAAnC,EAAAmC,EACAwb,QACAG,WAEAC,EAAA/d,EAAA2d,KAAA,cACA,QAAAK,KAAAhe,GAAA2d,KAAA3d,EAAA2d,KAAAztB,GAAA8tB,KACAH,EAAAF,KAAAK,GAAAhe,EAAA2d,KAAAK,GAOA,IALA7yB,KAAAyyB,MAAAG,GACA5yB,KAAAyyB,MAAAG,GAAAztB,KAAAutB,GAEA1yB,KAAAyyB,MAAAG,IAAAF,IAEA7d,EAAAuD,IAAA,CACAsa,EAAAF,KAAA,gBAAAve,EAAAY,EAAA2d,KAAA,mBACA,QAAAM,KAAAje,GAAA8d,OAAA,GAAA9d,EAAA8d,OAAA5tB,GAAA+tB,GAAA,CACA,GAAAphB,GAAAmD,EAAA8d,OAAAG,EAQA,IAPAJ,EAAAC,OAAAG,IACA9b,EAAAtF,EAAAsF,EACA9L,KACArJ,EAAA6P,EAAA7P,GAAA,IAAA6P,EAAA7P,EAAAuX,QAAA,sBAAA8L,GACA,OAAoCzjB,EAAA,IAAAG,EAAA,IAAAuE,EAAA,IAAA9D,EAAA,IAAAH,EAAA,IAAAoZ,EAAA,KAA+C4J,IAAA,MAC1D,KAEzBxT,EAAAxG,EACA,OAAAA,KAAAwG,GAAAxG,EAAAwG,EAAA3M,GAAAmG,KACAwnB,EAAAC,OAAAG,GAAA5nB,KAAAwG,EAAAxG,OAKA,MAAA2J,IAkBAvD,EAAAyhB,QAAA,SAAAH,EAAAI,EAAA/a,EAAAgb,GAIA,GAHAA,KAAA,SACAhb,KAAA,SACA+a,OAA6BE,OAAA,IAAAC,KAAA,IAAAC,QAAA,IAAAC,OAAA,KAAkDL,IAAA,IAC/EzvB,EAAAkvB,MAAA,CAGA,GAAA5d,GAAAtR,EAAAkvB,MAAAG,EACA,KAAA/d,EAAA,CACA,GAAA1V,GAAA,GAAAm0B,QAAA,UAAAV,EAAAxZ,QAAA,oBAAA1G,GAAA,cACA,QAAA6gB,KAAAhwB,GAAAkvB,MAAA,GAAAlvB,EAAAkvB,MAAA1tB,GAAAwuB,IACAp0B,EAAAq0B,KAAAD,GAAA,CACA1e,EAAAtR,EAAAkvB,MAAAc,EACA,QAIA,GAAAE,EACA,IAAA5e,EACA,OAAArT,GAAA,EAAA0D,EAAA2P,EAAArQ,OAA6ChD,EAAA0D,IAC7CuuB,EAAA5e,EAAArT,GACAiyB,EAAAjB,KAAA,gBAAAQ,GAAAS,EAAAjB,KAAA,eAAAva,GAAAwb,EAAAjB,KAAA,eAAAiB,EAAAjB,KAAA,iBAAAS,GAFqDzxB,KAOrD,MAAAiyB,KAuBAniB,EAAAoiB,MAAA,SAAAvtB,EAAAC,EAAAutB,EAAA9e,EAAA+e,EAAA3iB,EAAA4iB,EAAAC,GACA7iB,KAAA,SACA4iB,EAAA1rB,EAAAC,EAAAyrB,GAAA,SACAC,EAAA3rB,EAAAC,EAAA0rB,GAAA,OACA,IAIAvO,GAJAwO,EAAA7jB,EAAAyjB,GAAAxjB,GAAAuC,GACA9M,EAAA,EACAouB,EAAA,EACAtiB,EAAAgB,CAGA,IADAnP,EAAAK,GAAAiR,EAAA,YAAAA,EAAA7U,KAAA+yB,QAAAle,IACAA,EAAA,CACA0Q,GAAAqO,GAAA,IAAA/e,EAAA2d,KAAA,eAMA,QALA3S,GAAAhL,EAAA2d,KAAAnb,KAAAlH,GAAAC,GACA3C,GAAAoS,EAAA,GACAoU,EAAApU,EAAA,GAAAA,EAAA,GACAqU,EAAA,EACAroB,GAAAgU,EAAA,gBAAA5O,EAAAgjB,IAAApf,EAAA2d,KAAA2B,QAAAF,EAAA,GACAzyB,EAAA,EAAA0D,EAAA6uB,EAAAvvB,OAAgDhD,EAAA0D,EAAQ1D,IAAA,CACxD,SAAAuyB,EAAAvyB,GACAoE,EAAA,EACAwuB,EAAA,EACAJ,EAAA,EACAE,GAAAD,EAAAH,MACiB,CACjB,GAAA3lB,GAAA6lB,GAAAnf,EAAA8d,OAAAoB,EAAAvyB,EAAA,QACA4yB,EAAAvf,EAAA8d,OAAAoB,EAAAvyB,GACAoE,IAAAouB,GAAA7lB,EAAA6I,GAAAnC,EAAAmC,IAAA7I,EAAAjD,GAAAiD,EAAAjD,EAAA6oB,EAAAvyB,KAAA,GAAAqT,EAAAmC,EAAA6c,EAAA,EACAG,EAAA,EAEAI,KAAAvyB,IACA6P,GAAAnO,EAAAkhB,cAAA2P,EAAAvyB,GAAA,IAAA+D,EAAA2f,EAAA2O,EAAA3O,EAAA,IAAAA,IAAA9X,EAAA5B,EAAA,KAAA1F,EAAAsH,GAAA8X,GAAAnf,EAAAyF,GAAA0Z,MAIA,MAAAvlB,MAAA0R,QAAArE,MACAsH,KAAA,OACAc,OAAA,UAgCAnE,EAAAnN,IAAA,SAAA6sB,GACA,GAAAztB,EAAAK,GAAAotB,EAAA,SAKA,IAJA,GAGAlnB,GAHAjF,EAAA7E,KAAAuX,MACA/V,EAAA,EACA0D,EAAA8rB,EAAAxsB,OAEkBhD,EAAA0D,EAAQ1D,IAC1BsI,EAAAknB,EAAAxvB,OACA+P,EAAAxM,GAAA+E,EAAAlJ,OAAAiE,EAAAM,KAAAnF,KAAA8J,EAAAlJ,QAAAyM,KAAAvD,GAGA,OAAAjF,IAsBAtB,EAAAsoB,OAAA,SAAAwI,EAAAtmB,GACA,GAAA3J,GAAAb,EAAAK,GAAAmK,EAAAhK,IAAA,GAAA8F,GAAAkE,GAAAxJ,SAIA,OAHA8vB,IAAA9wB,EAAAK,GAAAywB,EAhiKA,WAgiKAjwB,EAAAI,OAAA,IAAA6vB,IAAAjb,QAAAtH,EAAA,SAAAwiB,EAAA9yB,GACA,aAAA4C,IAAA5C,GAAAkR,EAAAtO,EAAA5C,MAEA6yB,GAAA3hB,GAyBAnP,EAAAgxB,SAAA,WACA,GAAAC,GAAA,gBACAC,EAAA,2DACAC,EAAA,SAAAC,EAAAjyB,EAAAkC,GACA,GAAAC,GAAAD,CAWA,OAVAlC,GAAA0W,QAAAqb,EAAA,SAAAE,EAAAx1B,EAAAy1B,EAAAC,EAAAC,GACA31B,KAAA01B,EACAhwB,IACA1F,IAAA0F,KACAA,IAAA1F,IAEA,kBAAA0F,IAAAiwB,IAAAjwB,UAGAA,GAAA,MAAAA,MAAAD,EAAA+vB,EAAA9vB,GAAA,GAGA,iBAAAyvB,EAAA1vB,GACA,MAAAtF,QAAAg1B,GAAAlb,QAAAob,EAAA,SAAAG,EAAAjyB,GACA,MAAAgyB,GAAAC,EAAAjyB,EAAAkC,SAkBArB,EAAAwxB,MAAA,WACA,GAAA7iB,EAAAC,IACA/C,EAAA6C,IAAAG,QAAAF,EAAAtO,OACS,CAETxC,OAAAgR,YAAA9O,EACA,WACAlC,QAAAgR,QACa,MAAA3G,KAEb,MAAAlI,IAsBAA,EAAAyxB,GAAAxD,GAEA9tB,EAAAI,GAAA,6BACAD,GAAA,IAIA,SAAAkO,EAAAlO,EAAAY,GAQA,QAAAwwB,KACA,KAAAzB,KAAAzhB,EAAAmjB,YAAAhX,WAAA+W,EAAA,GAAA1xB,EAAAG,IAAA,mBARA,MAAAqO,EAAAmjB,YAAAnjB,EAAAyW,mBACAzW,EAAAyW,iBAUK,mBAVL/jB,EAAA,WACAsN,EAAA8W,oBASK,mBATLpkB,GAAA,GACAsN,EAAAmjB,WAAA,aACa,GACbnjB,EAAAmjB,WAAA,WAKAD,KACKjjB,UAELzO,GACCC,MAAAvC,EAAAmC,MACD/E,EAAA4C,QAAAoC,IAKA8xB;;;;AAKA,SAAA92B,EAAA4C,EAAA1C,GAEA,GAAA6E,GAAAC,CAAgED,IAAA7E,uBAAA,8BAg5ChE+E,MAh5CgED,EAAA,SAAAE,GAChE,IAAAA,KAAA6U,IAAA,CAIA,GAAArT,GAAA,iBACAmL,EAAA5Q,OACAgO,EAAA0G,WACAC,EAAAC,SACAvM,EAAAuL,KACA/K,EAAAR,EAAAwL,IACAlL,EAAAN,EAAAM,IACAoL,EAAA1L,EAAA0L,IACAjD,EAAA,QACA1M,EAAAH,EAAAG,IACAgP,EAAA,GACA/G,EAAA,IACAypB,EAAA,+BACAC,GACAC,MAAA,kBACAC,QAAA,8BACAC,QAAA,4BACAC,KAAA,iBACAC,KAAA,mDAEAC,IACApyB,GAAAiQ,SAAA,WACA,6DAAAxT,KAAAqR,QAEA,IAAAukB,GAAA,SAAAnnB,EAAApB,GACA,GAAAA,EAAA,CACA,gBAAAoB,KACAA,EAAAmnB,EAAAnnB,GAEA,QAAA/L,KAAA2K,KAAAtI,GAAArC,KACA,UAAAA,EAAA+Z,UAAA,KACAhO,EAAAonB,eAAAT,EAAA1yB,EAAA+Z,UAAA,GAAAvM,EAAA7C,EAAA3K,KAEA+L,EAAAqnB,aAAApzB,EAAAwN,EAAA7C,EAAA3K,UAIA+L,GAAAlL,EAAAmU,GAAA3F,IAAAgkB,gBAAA,6BAAAtnB,GACAA,EAAAwJ,QAAAxJ,EAAAwJ,MAAA+d,wBAAA,gBAEA,OAAAvnB,IAEAwnB,EAAA,SAAAtoB,EAAAuH,GACA,GAAAtU,GAAA,SACA8N,EAAAf,EAAAe,GAAAwG,EACAghB,EAAA,GAAAC,EAAA,GACAp0B,EAAA4L,EAAA6b,KACA4M,EAAAzoB,EAAAoB,MACA7L,EAAAnB,EAAAkW,MACAxJ,EAAAlL,EAAAmU,GAAA3F,IAAAiU,eAAAtX,EACA,KAAAD,EAAA,CAeA,GAdAyG,EAAAhF,EAAAgF,GAAAkE,QAAA7V,EAAAsT,iBAAA,SAAA8d,EAAA0B,EAAAC,GAEA,GADA11B,EAAA,SACAy1B,GAAAC,EAAA,CACAJ,EAAA5oB,EAAA+oB,GACAF,EAAA7oB,EAAAgpB,EACA,IAAAC,GAAA,GAAAJ,EAAA,KACA9iB,GAAA6iB,EAAA,MAAA7iB,EAAA8iB,EAAA,YACAA,EAAAxuB,EAAAC,KAAA,IAAAyL,EAAA6iB,EAAA,OAAAK,EAAA,KACA,IAAAJ,IACAA,IAAAxtB,QAAA,QAAA4tB,GAEA,MAAA7jB,KAEAwC,IAAA/E,MAAA,YACA,UAAAvP,EAAA,CACA,GAAA8X,GAAAxD,EAAAtP,OAEA,IADA8S,GAAApL,EAAAoL,GACA8d,MAAA9d,GACA,WAEA,IAAA+d,IAAA,IAAA9uB,EAAAqZ,IAAAzd,EAAAqV,IAAAF,IAAA/Q,EAAAsZ,IAAA1d,EAAAqV,IAAAF,KACAvF,EAAA,GAAAhL,EAAAF,EAAAwuB,EAAA,IAAAxuB,EAAAwuB,EAAA,QACAA,GAAA,IAAAtjB,EACAsjB,EAAA,IAAAtjB,EACAsjB,EAAA,OACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,MAEAA,EAAA,OACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,MAGA,GAAAlW,GAAAhd,EAAAugB,WAAA5O,EACA,KAAAqL,EACA,WASA,IAPA7R,IAAA0K,QAAA,uBAEAzL,EAAAuH,UAAAxG,GAAAf,EAAAuH,SAAAxG,KACA0nB,EAAAM,KAAAta,YAAAzO,EAAAuH,gBACAvH,GAAAuH,WAGAvH,EAAAuH,SAAA,CACAzG,EAAAmnB,EAAAh1B,EAAA,YAA2C8N,OAC3Cf,EAAAuH,SAAAzG,EACAmnB,EAAAnnB,EAAA,UAAA7N,GACAs1B,KACAC,OAEAxvB,GAAA8vB,EAAA,GACA7vB,GAAA6vB,EAAA,GACA5vB,GAAA4vB,EAAA,GACA3vB,GAAA2vB,EAAA,GACAE,kBAAAhpB,EAAAiC,OAAAyV,WAEA+Q,EAAAM,KAAAnc,YAAA9L,EACA,QAAAjN,GAAA,EAAA0D,EAAAqb,EAAA/b,OAAiDhD,EAAA0D,EAAQ1D,IACzDiN,EAAA8L,YAAAqb,EAAA,QACA5R,OAAAzD,EAAA/e,GAAAwiB,OAAAzD,EAAA/e,GAAAwiB,OAAAxiB,EAAA,YACAo1B,aAAArW,EAAA/e,GAAAkY,OAAA,OACAmd,eAAAC,SAAAvW,EAAA/e,GAAA6T,SAAAkL,EAAA/e,GAAA6T,QAAA,MAaA,MARAugB,GAAA7zB,GACA4S,KAAAoiB,EAAAroB,GACA2G,QAAA,EACAT,eAAA,IAEA1R,EAAAyR,KAAAjC,EACAxP,EAAAmS,QAAA,EACAnS,EAAA8zB,YAAA,EACA,GAEAC,EAAA,WACA,GAAA30B,GAAA0P,SAAAklB,YACA,OAAA50B,KAAA,IAAAA,GAAA,KAAAA,IAEAy0B,EAAA,SAAAroB,GACA,GAAAuoB,IACA,eAAAvoB,EAAA,IAEA,IAAAyoB,GAAAnlB,SAAAmlB,QAOA,eALAA,EAAAC,SAAA,KACAD,EAAAE,KACAF,EAAAG,SACAH,EAAAI,OAEA,IAAA7oB,EAAA,MAEA8oB,EAAA,SAAAz1B,GACA,GAAAsV,GAAAtV,EAAAgO,QAAA,EACA6lB,GAAA7zB,EAAA01B,SAAsBC,iBAAA31B,EAAA6N,OAAAyV,SAAA,cAAAhO,EAAAlR,EAAA,IAAAkR,EAAAjR,EAAA,OAEtBuxB,EAAA,SAAA51B,EAAAnD,EAAAg5B,GACA,WAAA71B,EAAAnB,KAAA,CAiBA,IAhBA,GAQAyN,GACAC,EACAuW,EACAgT,EACAxqB,EAZA4C,EAAAC,EAAAtR,GAAAqU,cAAA9C,MAAA,KACAlN,EAAAlB,EAAAgN,MACA+oB,EAAAF,EAAA,cACApO,EAAAznB,EAAAynB,KACAlpB,EAAAyB,EAAAzB,MACAmV,EAAAnV,EAAA,gBACAkB,EAAAyO,EAAAzL,OACA5D,EAAA,UAMAoW,EAAA,EACAC,EAAA,EACA5U,EAAA,EACAb,KACA,OAAAyO,EAAAzO,IACA,YACA,cACA,WACA,cACA,WACA,WACAZ,EAAAqP,EAAAzO,EACA,MACA,YAAAyV,EAAA,CAAuC,MACvC,cAAAA,EAAA,CAAyC,MACzC,YAAAD,EAAA,CAAuC,MACvC,aAAAA,EAAA,EA+BA,GA5BA,QAAApW,GACAoW,GAAA,EACAC,GAAA,EACA5U,GAAA,EACAwiB,EAAA,EACAgT,EAAAD,EAAA,IACAvqB,GACAsH,KAAA,OACAc,OAAAnV,EAAAmV,UAGAoiB,EAAAhT,EAAA7N,EAAA,EACA3J,GACAsH,KAAArU,EAAAmV,OACAA,OAAA,SAGA1T,EAAAyN,EAAAuoB,OACAH,GACA71B,EAAAyN,EAAAuoB,OAAAC,SAAArC,EAAA5zB,EAAAyN,EAAAuoB,OAAAC,WACAj2B,EAAAyN,EAAAuoB,OAAAE,WAAAtC,EAAA5zB,EAAAyN,EAAAuoB,OAAAE,eAEAl2B,EAAAyN,EAAAuoB,OAAAG,WAAAvC,EAAA5zB,EAAAyN,EAAAuoB,OAAAG,aACAn2B,EAAAyN,EAAAuoB,OAAAI,aAAAxC,EAAA5zB,EAAAyN,EAAAuoB,OAAAI,gBAGAp2B,EAAAyN,EAAAuoB,UAEA,QAAAn3B,EAAA,CACA,GAAAw3B,GAAA,kBAAAx3B,EACAy3B,EAAA,kBAAAP,EAAAl3B,EAAAoW,EAAAC,EAAA,OAAAlV,EAAA2M,EACAnL,GAAAmU,GAAA3F,IAAAiU,eAAAoS,GAQAzC,EAAAyC,MAPAn1B,EAAAyzB,KAAAnc,YAAAqb,IAAA,SACAjgB,iBAAA,QACA9T,EAAAwzB,EAAAz0B,GACA8N,GAAA0pB,KAEAzC,EAAAyC,GAAA,EAIA,IACAE,GADAC,EAAAh1B,EAAAmU,GAAA3F,IAAAiU,eAAAqS,EAEAE,IAkBA5C,EAAA0C,KACAC,EAAAC,EAAAC,qBAAA,YAlBAD,EAAA3C,IAAA,WACAlnB,GAAA2pB,EACAI,aAAAxhB,EACAyhB,YAAA1hB,EACA2hB,OAAA,OACAd,OACAe,KAAA3hB,EAAA,IAEAqhB,EAAA1C,IAAA,QACAiD,aAAA,IAAAT,EACAtoB,WAAA8nB,EAAA,cAAA5gB,EAAA,MAAAC,EAAA,OAAAvE,GAAA,SAAAsE,EAAA3U,EAAA,IAAA4U,EAAA5U,EAAA,IACA0T,gBAAA,IAAAiB,EAAA3U,EAAA4U,EAAA5U,GAAA,IAAAsG,QAAA,KAEA4vB,EAAAhe,YAAA+d,GACAr1B,EAAAyzB,KAAAnc,YAAAge,GACA5C,EAAA0C,GAAA,GAKAzC,EAAA0C,EAAAjrB,EACA,IAAAyrB,GAAAjU,GAAA,WAAAjkB,GAAA,QAAAA,EACAg3B,IACAvpB,EAAAtM,EAAAyN,EAAAuoB,OAAAgB,QAAAtjB,GAAA,EACAnH,EAAA/K,EAAAyrB,eAAA1uB,EAAAoR,MAAAonB,EAAArjB,IAEApH,EAAAyqB,EAAArjB,EACAnH,EAAA/K,EAAAyrB,eAAA1uB,EAAAoR,OAAA3P,EAAAyN,EAAAuoB,OAAAiB,MAAAvjB,GAAA,IAEApI,KACAA,EAAA,UAAAyqB,GAAA,QAAAO,EAAA,KACA/pB,GAAAD,KACAhB,EAAAxL,EAAA0B,EAAA4rB,WAAA7uB,EAAAoR,KAAArD,EAAAC,IAEAsnB,EAAApM,EAAAnc,GACAtL,EAAAyN,EAAAuoB,OAAAD,EAAA,QAAAM,EACAr2B,EAAAyN,EAAAuoB,OAAAD,EAAA,UAAAO,EACAt2B,EAAAyN,EAAAuoB,OAAAD,EAAA,MAAAgB,EACA/2B,EAAAyN,EAAAuoB,OAAAD,EAAA,QAAAl3B,EACAmB,EAAAyN,EAAAuoB,OAAAD,EAAA,UAAAl5B,MAEAg5B,IACAvpB,EAAAtM,EAAAyN,EAAAuoB,OAAAgB,QAAAtjB,GAAA,EACAnH,EAAA/K,EAAAyrB,eAAA1uB,EAAAoR,MAAArD,IAEAA,EAAA,EACAC,EAAA/K,EAAAyrB,eAAA1uB,EAAAoR,OAAA3P,EAAAyN,EAAAuoB,OAAAiB,MAAAvjB,GAAA,IAEA1T,EAAAyN,EAAAuoB,OAAAD,EAAA,SAAAlC,EAAApM,GAAoD3nB,EAAA0B,EAAA4rB,WAAA7uB,EAAAoR,KAAArD,EAAAC,WACpDvM,GAAAyN,EAAAuoB,OAAAD,EAAA,cACA/1B,GAAAyN,EAAAuoB,OAAAD,EAAA,gBACA/1B,GAAAyN,EAAAuoB,OAAAD,EAAA,YACA/1B,GAAAyN,EAAAuoB,OAAAD,EAAA,cACA/1B,GAAAyN,EAAAuoB,OAAAD,EAAA,SAEA,KAAAzqB,IAAAsoB,GAAA,GAAAA,EAAA5wB,GAAAsI,KAAAsoB,EAAAtoB,GAAA,CACA,GAAApI,GAAA1B,EAAAmU,GAAA3F,IAAAiU,eAAA3Y,EACApI,MAAA0kB,WAAAvN,YAAAnX,MAIAg0B,GACAC,KAAA,KACAC,KAAA,KACAC,MAAA,SACAC,OAAA,aACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,SACAC,OAAA,SACAC,QAAA,cAEAC,EAAA,SAAA73B,EAAAnD,EAAAmP,GAEA,GADAnP,EAAAq6B,EAAA/oB,EAAAtR,GAAAqU,eACA,CAKA,IAJA,GAAArH,GAAA7J,EAAAzB,MAAA,qBACAu5B,GAAwB9lB,MAAAnI,EAAAkuB,OAAAluB,EAAAiuB,KAAA,GAAqC93B,EAAAzB,MAAA,mBAAAyN,EAAA,sBAC7DgsB,KACAv4B,EAAA5C,EAAA4F,OACAhD,KACAu4B,EAAAv4B,GAAA5C,EAAA4C,GAAAoK,GAAApK,EAAA,QAAAq4B,CAEAjE,GAAA7zB,EAAAynB,MAAuB9T,mBAAAqkB,EAAAt0B,KAAA,WAGvBmwB,GAAA7zB,EAAAynB,MAAqB9T,mBAAA,UAGrBskB,EAAA,SAAAj4B,EAAAgM,GACA,GAAAyb,GAAAznB,EAAAynB,KACAlpB,EAAAyB,EAAAzB,MACA25B,EAAAzQ,EAAAvR,MAAAiiB,UACA1Q,GAAAvR,MAAAiiB,WAAA,QACA,QAAAC,KAAApsB,GACA,GAAAA,EAAAhJ,GAAAo1B,GAAA,CACA,IAAA52B,EAAA8Q,gBAAAtP,GAAAo1B,GACA,QAEA,IAAAv7B,GAAAmP,EAAAosB,EAEA,QADA75B,EAAA65B,GAAAv7B,EACAu7B,GACA,WACAp4B,EAAAyS,KAAA5V,EACA,MACA,aACA,GAAAS,GAAAmqB,EAAAgP,qBAAA,QAGA,IAAAn5B,EAAAmF,SAAAnF,IAAA,IACAA,EAAA2Y,WAAAoiB,UAAAx7B,MACyB,CACzBS,EAAAu2B,EAAA,QACA,IAAAyE,GAAA92B,EAAAmU,GAAA3F,IAAAuoB,eAAA17B,EACAS,GAAAkb,YAAA8f,GACA7Q,EAAAjP,YAAAlb,GAEA,KACA,YACA,aACA,GAAAk7B,GAAA/Q,EAAAG,UACA,SAAA4Q,EAAAtU,QAAAhT,cAAA,CACA,GAAAunB,GAAA5E,EAAA,IACA2E,GAAAzQ,aAAA0Q,EAAAhR,GACAgR,EAAAjgB,YAAAiP,GACA+Q,EAAAC,EAEA,UAAAL,EACAI,EAAA1E,eAAAT,EAAA,gBAAAx2B,EAAA,MAAAA,GAEA27B,EAAA1E,eAAAT,EAAA+E,EAAAv7B,EAEA,MACA,cACA4qB,EAAAvR,MAAAvD,OAAA9V,CACA,MACA,iBACAmD,EAAA+N,UAAAlR,EACA,MACA,mBACA+4B,EAAA51B,EAAAnD,EACA,MACA,iBACA+4B,EAAA51B,EAAAnD,EAAA,EACA,MACA,iBACA,GAAA6S,GAAAvB,EAAAtR,GAAAuR,MAAAC,EACA,OAAAqB,EAAAjN,OAAA,CACAzC,EAAA04B,MAAA14B,EAAA04B,KAAA9Q,sBAAAvN,YAAAra,EAAA04B,KAAA9Q,WACA,IAAAlb,GAAAmnB,EAAA,YACA8E,EAAA9E,EAAA,OACAnnB,GAAAC,GAAAnL,EAAA0V,aACA2c,EAAA8E,GACAv0B,EAAAsL,EAAA,GACArL,EAAAqL,EAAA,GACA7F,MAAA6F,EAAA,GACA5F,OAAA4F,EAAA,KAEAhD,EAAA8L,YAAAmgB,GACA34B,EAAAgN,MAAA2nB,KAAAnc,YAAA9L,GACAmnB,EAAApM,GAAqCmR,YAAA,QAAAlsB,EAAAC,GAAA,MACrC3M,EAAA04B,KAAAC,EAEA,IAAA97B,EAAA,CACA,GAAA8S,GAAA8X,EAAAoR,aAAA,YACA,IAAAlpB,EAAA,CACA,GAAA+oB,GAAAl3B,EAAAmU,GAAA3F,IAAAiU,eAAAtU,EAAA0H,QAAA,iBAAA1G,GACA+nB,MAAA9Q,WAAAvN,YAAAqe,GACA7E,EAAApM,GAAyCmR,YAAAjoB,UACzC3Q,GAAA04B,MAGA,KACA,YACA,QAAA14B,EAAAnB,OACAg1B,EAAApM,GAAqC3nB,EAAAjD,EAAA0B,EAAAoR,KAAAnO,EAAA8c,gBAAAzhB,GAAA,SACrCmD,EAAAyN,EAAA2e,MAAA,EACApsB,EAAAyN,EAAAuoB,SACA,eAAAh2B,GAAAyN,EAAAuoB,QAAAJ,EAAA51B,IAAAyN,EAAAuoB,OAAA8C,aACA,aAAA94B,GAAAyN,EAAAuoB,QAAAJ,EAAA51B,IAAAyN,EAAAuoB,OAAA+C,UAAA,IAGA,MACA,aAGA,GAFAtR,EAAAsM,aAAAqE,EAAAv7B,GACAmD,EAAAyN,EAAA2e,MAAA,GACA7tB,EAAA41B,GAIA,KAHAiE,GAAA,IACAv7B,EAAA0B,EAAA6F,CAIA,SACA7F,EAAA41B,KACAt3B,GAAA0B,EAAA6F,GAAA7F,EAAAsL,OAAA,GAEA,UACA,SAAAuuB,GAAA,QAAAp4B,EAAAnB,KACA,KAEA,UACA4oB,EAAAsM,aAAAqE,EAAAv7B,GACAmD,EAAA01B,SAAAD,EAAAz1B,GACAA,EAAAyN,EAAA2e,MAAA,CACA,MACA,cAGA,GAFA3E,EAAAsM,aAAAqE,EAAAv7B,GACAmD,EAAAyN,EAAA2e,MAAA,GACA7tB,EAAA61B,GAIA,KAHAgE,GAAA,IACAv7B,EAAA0B,EAAA8F,CAIA,SACA9F,EAAA61B,KACAv3B,GAAA0B,EAAA8F,GAAA9F,EAAAuL,QAAA,GAEA,UACA,SAAAsuB,GAAA,QAAAp4B,EAAAnB,KACA,KAEA,UACA4oB,EAAAsM,aAAAqE,EAAAv7B,GACAmD,EAAA01B,SAAAD,EAAAz1B,GACAA,EAAAyN,EAAA2e,MAAA,CACA,MACA,SACA,QAAApsB,EAAAnB,KACAg1B,EAAApM,GAAqClU,GAAA1W,EAAA2W,GAAA3W,IAErC4qB,EAAAsM,aAAAqE,EAAAv7B,GAEAmD,EAAAyN,EAAA2e,MAAA,CACA,MACA,WACA,SAAApsB,EAAAnB,MACA4oB,EAAAqM,eAAAT,EAAA,OAAAx2B,EAEA,MACA,oBACA,GAAAmD,EAAAyN,EAAAuV,IAAA,GAAAhjB,EAAAyN,EAAAwV,KACApmB,GAAAuJ,EAAAF,EAAAlG,EAAAyN,EAAAuV,IAAA9c,EAAAlG,EAAAyN,EAAAwV,MAAA,GAEAwE,EAAAsM,aAAAqE,EAAAv7B,GACA0B,EAAA,qBACAs5B,EAAA73B,EAAAzB,EAAA,oBAAAyN,GAEAhM,EAAAyN,EAAAuoB,SACA,eAAAh2B,GAAAyN,EAAAuoB,QAAAJ,EAAA51B,IAAAyN,EAAAuoB,OAAA8C,aACA,aAAA94B,GAAAyN,EAAAuoB,QAAAJ,EAAA51B,IAAAyN,EAAAuoB,OAAA+C,UAAA,GAEA,MACA,wBACAlB,EAAA73B,EAAAnD,EAAAmP,EACA,MACA,YACA,GAAAgtB,GAAA7qB,EAAAtR,GAAA6R,MAAAlN,EAAAmQ,OACA,IAAAqnB,EAAA,CACAtsB,EAAAmnB,EAAA,UACA,IAAAoF,GAAApF,EAAA,QACAnnB,GAAAC,GAAAnL,EAAA0V,aACA2c,EAAAnnB,GAAmCtI,EAAA,EAAAC,EAAA,EAAA60B,aAAA,iBAAApvB,OAAA,EAAAD,MAAA,IACnCgqB,EAAAoF,GAAmC70B,EAAA,EAAAC,EAAA,EAAAyyB,aAAAkC,EAAA,KACnCtsB,EAAA8L,YAAAygB,GAEA,SAAAvsB,GACAlL,EAAAyY,SAAA+e,EAAA,cACA,GAAA/jB,GAAAhX,KAAAmmB,YACAlP,EAAAjX,KAAAqmB,YACAuP,GAAAnnB,GAA2C7C,MAAAoL,EAAAnL,OAAAoL,IAC3C2e,EAAAoF,GAA2CpvB,MAAAoL,EAAAnL,OAAAoL,OAEdxI,GAC7B1M,EAAAgN,MAAA2nB,KAAAnc,YAAA9L,GACAmnB,EAAApM,GAAqC7U,KAAA,QAAAlG,EAAAC,GAAA,MACrC3M,EAAA01B,QAAAhpB,EACA1M,EAAA01B,SAAAD,EAAAz1B,EACA,OAEA,GAAAgZ,GAAAxX,EAAA2L,OAAAtQ,EACA,IAAAmc,EAAAyB,OASyB,cAAAza,EAAAnB,MAAA,WAAAmB,EAAAnB,MAAA,KAAAsP,EAAAtR,GAAA8d,WAAAuZ,EAAAl0B,EAAAnD,GAAA,CACzB,cAAA0B,IAAA,gBAAAA,GAAA,CACA,GAAA4U,GAAA3R,EAAAmU,GAAA3F,IAAAiU,eAAAwD,EAAAoR,aAAA,QAAAxhB,QAAA,eAAA1G,GACA,IAAAwC,EAAA,CACA,GAAAgmB,GAAAhmB,EAAAsjB,qBAAA,OACA5C,GAAAsF,IAAA12B,OAAA,IAAgEqyB,gBAAA,WAAAv2B,KAAA+U,QAAA,oBAAA/U,KAAA,sBAGhEA,EAAA4U,SAAAtW,EACA0B,EAAAqU,KAAA,MACA,mBAlBA5G,GAAAmH,eACA5U,GAAA4U,UACA3R,EAAAK,GAAAtD,EAAA+U,QAAA,cACA9R,EAAAK,GAAAmK,EAAAsH,QAAA,cACAugB,EAAApM,GAAyCnU,QAAA/U,EAAA+U,WACzC9R,EAAAK,GAAAtD,EAAA,8BACAiD,EAAAK,GAAAmK,EAAA,8BACA6nB,EAAApM,GAAyC5U,eAAAtU,EAAA,iBAazCya,GAAAhW,GAAA,YAAA6wB,EAAApM,GAAwD5U,eAAAmG,EAAA1F,QAAA,EAAA0F,EAAA1F,QAAA,IAAA0F,EAAA1F,SACxD,cACA0F,EAAAxX,EAAA2L,OAAAtQ,GACA4qB,EAAAsM,aAAAqE,EAAApf,EAAAjV,KACA,UAAAq0B,GAAApf,EAAAhW,GAAA,YAAA6wB,EAAApM,GAA2E1T,iBAAAiF,EAAA1F,QAAA,EAAA0F,EAAA1F,QAAA,IAAA0F,EAAA1F,UAC3E,UAAA8kB,GAAAp4B,EAAAyN,EAAAuoB,SACA,eAAAh2B,GAAAyN,EAAAuoB,QAAAJ,EAAA51B,IAAAyN,EAAAuoB,OAAA8C,aACA,aAAA94B,GAAAyN,EAAAuoB,QAAAJ,EAAA51B,IAAAyN,EAAAuoB,OAAA+C,UAAA,GAEA,MACA,iBACA,UAAA/4B,EAAAnB,MAAA,WAAAmB,EAAAnB,MAAA,KAAAsP,EAAAtR,GAAA8d,WAAAuZ,EAAAl0B,EAAAnD,EACA,MACA,eACA0B,EAAA4U,WAAA5U,EAAAyE,GAAA,mBACA6wB,EAAApM,GAAqC1T,iBAAAlX,EAAA,EAAAA,EAAA,IAAAA,GAGrC,oBACA,GAAA0B,EAAA4U,SAAA,CACAA,EAAA3R,EAAAmU,GAAA3F,IAAAiU,eAAAwD,EAAAoR,aAAA,QAAAxhB,QAAA,eAAA1G,IACAwC,IACAgmB,EAAAhmB,EAAAsjB,qBAAA,QACA5C,EAAAsF,IAAA12B,OAAA,IAA4DqyB,eAAAj4B,IAE5D,OAEA,QACA,aAAAu7B,IAAAv7B,EAAAqV,EAAArV,EAAA,SACA,IAAAu8B,GAAAhB,EAAA/gB,QAAA,kBAAApC,GACA,MAAAA,GAAAyF,UAAA,GAAArI,eAEAoV,GAAAvR,MAAAkjB,GAAAv8B,EACAmD,EAAAyN,EAAA2e,MAAA,EACA3E,EAAAsM,aAAAqE,EAAAv7B,IAMAw8B,EAAAr5B,EAAAgM,GACAyb,EAAAvR,MAAAiiB,WAAAD,GAGAmB,EAAA,SAAA3sB,EAAAV,GACA,WAAAU,EAAA7N,OAAAmN,EAAAhJ,GAAA,SAAAgJ,EAAAhJ,GAAA,SAAAgJ,EAAAhJ,GAAA,cAAAgJ,EAAAhJ,GAAA,MAAAgJ,EAAAhJ,GAAA,OAGA,GAAAwG,GAAAkD,EAAAnO,MACAkpB,EAAA/a,EAAA+a,KACA6R,EAAA7R,EAAAxR,WAAA/D,EAAA1Q,EAAAmU,GAAA3F,IAAAyI,YAAAC,iBAAA+O,EAAAxR,WAAAtF,GAAAgI,iBAAA,mBAEA,IAAA3M,EAAAhJ,GAAA,SAEA,IADAwG,EAAAqG,KAAA7D,EAAA6D,KACA4X,EAAAxR,YACAwR,EAAApN,YAAAoN,EAAAxR,WAKA,QADAsjB,GAFAC,EAAArrB,EAAAnC,EAAA6D,MAAAzB,MAAA,MACAqrB,KAEAh6B,EAAA,EAAA0D,EAAAq2B,EAAA/2B,OAA8ChD,EAAA0D,EAAQ1D,IACtD85B,EAAA1F,EAAA,SACAp0B,GAAAo0B,EAAA0F,GAA+BxW,GAnB/B,IAmB+BuW,EAAAl1B,EAAAoF,EAAApF,IAC/Bm1B,EAAA/gB,YAAAhX,EAAAmU,GAAA3F,IAAAuoB,eAAAiB,EAAA/5B,KACAgoB,EAAAjP,YAAA+gB,GACAE,EAAAh6B,GAAA85B,MAIA,KADAE,EAAAhS,EAAAgP,qBAAA,SACAh3B,EAAA,EAAA0D,EAAAs2B,EAAAh3B,OAA2ChD,EAAA0D,EAAQ1D,MACnDo0B,EAAA4F,EAAAh6B,IAA8BsjB,GA3B9B,IA2B8BuW,EAAAl1B,EAAAoF,EAAApF,IAE9ByvB,EAAA4F,EAAA,IAA8B1W,GAAA,GAG9B8Q,GAAApM,GAAiBrjB,EAAAoF,EAAApF,EAAAC,EAAAmF,EAAAnF,IACjBqI,EAAAe,EAAA2e,MAAA,CACA,IAAAtO,GAAApR,EAAA6I,WACAmkB,EAAAlwB,EAAAnF,GAAAyZ,EAAAzZ,EAAAyZ,EAAAhU,OAAA,EACA4vB,IAAAl4B,EAAAK,GAAA63B,EAAA,WAAA7F,EAAA4F,EAAA,IAAoD1W,GAAA2W,MAEpDC,EAAA,SAAAlS,GACA,MAAAA,GAAAG,YAAA,MAAAH,EAAAG,WAAA1D,QAAAhT,cACAuW,EAAAG,WAEAH,GAGAmS,EAAA,SAAAnS,EAAApR,GAiBApY,KAAA,GAAAA,KAAAwpB,OAaAA,EAAA+C,SAAA,EAQAvsB,KAAA0O,GAOA,WACA,eAAAwE,KAAAmG,SAAAnG,KAAAG,IAAA,UAAAG,SAAA,KAAAlP,OAAA,MAPAklB,EAAAgE,UAAAxtB,KAAA0O,GAUA1O,KAAA4P,OAAArM,EAAAqM,SACA5P,KAAAguB,SAAA,KAaAhuB,KAAA+O,MAAAqJ,EACApY,KAAAM,MAAAN,KAAAM,UACAN,KAAAwP,GACAM,aACAiV,GAAA,EACAC,GAAA,EACAnM,IAAA,EACAgM,GAAA,EACAC,GAAA,EACAqJ,MAAA,IAEA/V,EAAA8L,SAAA9L,EAAA8L,OAAAlkB,MAOAA,KAAAmO,KAAAiK,EAAA3K,IACA2K,EAAA3K,MAAA2K,EAAA3K,IAAAS,KAAAlO,MACAoY,EAAA3K,IAAAzN,KAOAA,KAAAkO,KAAA,MAEAmc,EAAA9mB,EAAAkL,EAEAktB,GAAA54B,UAAAsnB,EACAA,EAAAvlB,YAAA62B,EAEAp4B,EAAAS,QAAA0N,KAAA,SAAAyL,EAAAiZ,GACA,GAAA3nB,GAAAmnB,EAAA,OACAQ,GAAAjK,QAAAiK,EAAAjK,OAAA5R,YAAA9L,EACA,IAAAxL,GAAA,GAAA04B,GAAAltB,EAAA2nB,EAOA,OANAnzB,GAAArC,KAAA,OACAo5B,EAAA/2B,GACA0R,KAAA,OACAc,OAAA,OACA/D,KAAAyL,IAEAla,GAgBAonB,EAAAtJ,OAAA,SAAAlI,EAAAtM,EAAAK,GACA,GAAA5M,KAAAkuB,QACA,MAAAluB,KASA,IAPA6Y,EAAA3I,EAAA2I,GAAA1I,MAAAC,GACAyI,EAAArU,OAAA,IACA+H,EAAAe,EAAAuL,EAAA,IACAjM,EAAAU,EAAAuL,EAAA,KAEAA,EAAAvL,EAAAuL,EAAA,IACA,MAAAjM,IAAAL,EAAAK,GACA,MAAAL,GAAA,MAAAK,EAAA,CACA,GAAAyK,GAAArX,KAAA+P,QAAA,EACAxD,GAAA8K,EAAAlR,EAAAkR,EAAAzL,MAAA,EACAgB,EAAAyK,EAAAjR,EAAAiR,EAAAxL,OAAA,EAGA,MADA7L,MAAA8P,UAAA9P,KAAAwP,EAAAM,UAAAjG,SAAA,IAAAgP,EAAAtM,EAAAK,MACA5M,MAiBAqqB,EAAA9E,MAAA,SAAAR,EAAAC,EAAAzY,EAAAK,GACA,GAAA5M,KAAAkuB,QACA,MAAAluB,KAWA,IATA+kB,EAAA7U,EAAA6U,GAAA5U,MAAAC,GACA2U,EAAAvgB,OAAA,IACAwgB,EAAA1X,EAAAyX,EAAA,IACAxY,EAAAe,EAAAyX,EAAA,IACAnY,EAAAU,EAAAyX,EAAA,KAEAA,EAAAzX,EAAAyX,EAAA,IACA,MAAAC,MAAAD,GACA,MAAAnY,IAAAL,EAAAK,GACA,MAAAL,GAAA,MAAAK,EACA,GAAAyK,GAAArX,KAAA+P,QAAA,EAKA,OAHAxD,GAAA,MAAAA,EAAA8K,EAAAlR,EAAAkR,EAAAzL,MAAA,EAAAW,EACAK,EAAA,MAAAA,EAAAyK,EAAAjR,EAAAiR,EAAAxL,OAAA,EAAAe,EACA5M,KAAA8P,UAAA9P,KAAAwP,EAAAM,UAAAjG,SAAA,IAAAkb,EAAAC,EAAAzY,EAAAK,MACA5M,MAaAqqB,EAAA/E,UAAA,SAAAT,EAAAC,GACA,MAAA9kB,MAAAkuB,QACAluB,MAEA6kB,EAAA3U,EAAA2U,GAAA1U,MAAAC,GACAyU,EAAArgB,OAAA,IACAsgB,EAAAxX,EAAAuX,EAAA,KAEAA,EAAAvX,EAAAuX,EAAA,OACAC,MAAA,EACA9kB,KAAA8P,UAAA9P,KAAAwP,EAAAM,UAAAjG,SAAA,IAAAgb,EAAAC,MACA9kB,OAuCAqqB,EAAAva,UAAA,SAAA6U,GACA,GAAAnV,GAAAxP,KAAAwP,CACA,UAAAmV,EACA,MAAAnV,GAAAM,SAQA,IANAvM,EAAAmhB,kBAAA1kB,KAAA2kB,GAEA3kB,KAAAy6B,MAAA7E,EAAA51B,KAAAy6B,MAAmC3qB,UAAA9P,KAAA4P,OAAAyV,WACnCrlB,KAAAy3B,SAAAD,EAAAx3B,MACAA,KAAAwpB,MAAAoM,EAAA51B,KAAAwpB,MAAmC1Z,UAAA9P,KAAA4P,SAEnC,GAAAJ,EAAAuV,IAAA,GAAAvV,EAAAwV,GAAA,CACA,GAAA4W,GAAA57B,KAAAM,MAAAyE,GAAA,gBAAA/E,KAAAM,MAAA,iBACAN,MAAAqN,MAAuB0I,eAAA6lB,IAGvB,MAAA57B,OASAqqB,EAAAwR,KAAA,WAEA,MADA77B,MAAAkuB,UAAAluB,KAAAwpB,KAAAvR,MAAAqC,QAAA,QACAta,MASAqqB,EAAAyR,KAAA,WAEA,MADA97B,MAAAkuB,UAAAluB,KAAAwpB,KAAAvR,MAAAqC,QAAA,IACAta,MAQAqqB,EAAA0R,OAAA,WACA,GAAAvS,GAAAkS,EAAA17B,KAAAwpB,KACA,KAAAxpB,KAAAkuB,SAAA1E,EAAAG,WAAA,CAGA,GAAA5a,GAAA/O,KAAA+O,KACAA,GAAA6c,SAAA7c,EAAA6c,QAAAoG,QAAAhyB,MACA0D,EAAA6mB,OAAA,eAAAvqB,KAAA0O,IACA1O,KAAAkV,UACAnG,EAAA2nB,KAAAta,YAAApc,KAAAkV,UAEA3R,EAAA0gB,MAAAjkB,KAAA+O,GAEAya,EAAAG,WAAAvN,YAAAoN,GAGAxpB,KAAAyqB,YAEA,QAAAjpB,KAAAxB,MACAA,KAAAwB,GAAA,kBAAAxB,MAAAwB,GAAA+B,EAAA6b,gBAAA5d,GAAA,IAEAxB,MAAAkuB,SAAA,IAEA7D,EAAA/S,SAAA,WACA,WAAAtX,KAAAwpB,KAAAvR,MAAAqC,QAAA,CACAta,KAAA87B,MACA,IAAAD,IAAA,EAEA,GACAG,GADAC,GAAA,CAEAj8B,MAAA+O,MAAAod,OAAA+P,cACAF,EAAAh8B,KAAA+O,MAAAod,OAAA+P,cAAAjkB,MAEAjY,KAAA+O,MAAAod,OAAAxC,aACAqS,EAAAh8B,KAAA+O,MAAAod,OAAAxC,WAAA1R,OAGA+jB,GAAA,QAAAA,EAAA1hB,UACA2hB,GAAA,EACAD,EAAA1hB,QAAA,GAEA,IAAAjD,KACA,KACAA,EAAArX,KAAAwpB,KAAAzZ,UACS,MAAAtE,GAET4L,GACAlR,EAAAnG,KAAAwpB,KAAAsD,WACA1mB,EAAApG,KAAAwpB,KAAAqD,UACAjhB,MAAA5L,KAAAwpB,KAAA2S,YACAtwB,OAAA7L,KAAAwpB,KAAA4S,cAES,QACT/kB,QACA4kB,IACAD,EAAA1hB,QAAA,QAIA,MADAuhB,IAAA77B,KAAA67B,OACAxkB,GAmFAgT,EAAAhd,KAAA,SAAAlO,EAAAP,GACA,GAAAoB,KAAAkuB,QACA,MAAAluB,KAEA,UAAAb,EAAA,CACA,GAAA0F,KACA,QAAA0G,KAAAvL,MAAAM,MAAAN,KAAAM,MAAAyE,GAAAwG,KACA1G,EAAA0G,GAAAvL,KAAAM,MAAAiL,GAIA,OAFA1G,GAAAqQ,UAAA,QAAArQ,EAAA8P,OAAA9P,EAAA8P,KAAA9P,EAAAqQ,iBAAArQ,GAAAqQ,SACArQ,EAAAiL,UAAA9P,KAAAwP,EAAAM,UACAjL,EAEA,SAAAjG,GAAA2E,EAAAK,GAAAzE,EAAA,WACA,WAAAA,GAAA,QAAAa,KAAAM,MAAAqU,MAAA3U,KAAAM,MAAA4U,SACA,MAAAlV,MAAAM,MAAA4U,QAEA,iBAAA/V,EACA,MAAAa,MAAAwP,EAAAM,SAIA,QAFAusB,GAAAl9B,EAAAgR,MAAAC,GACAsW,KACAllB,EAAA,EAAA0D,EAAAm3B,EAAA73B,OAA8ChD,EAAA0D,EAAQ1D,IACtDrC,EAAAk9B,EAAA76B,GACArC,IAAAa,MAAAM,MACAomB,EAAAvnB,GAAAa,KAAAM,MAAAnB,GACiBoE,EAAAK,GAAA5D,KAAA+O,MAAAC,iBAAA7P,GAAA,YACjBunB,EAAAvnB,GAAAa,KAAA+O,MAAAC,iBAAA7P,GAAAm9B,IAEA5V,EAAAvnB,GAAAoE,EAAA8Q,gBAAAlV,EAGA,OAAA+F,GAAA,EAAAwhB,IAAA2V,EAAA,IAEA,SAAAz9B,GAAA2E,EAAAK,GAAAzE,EAAA,UAEA,IADAunB,KACAllB,EAAA,EAAA0D,EAAA/F,EAAAqF,OAAyChD,EAAA0D,EAAQ1D,IACjDklB,EAAAvnB,EAAAqC,IAAAxB,KAAAqN,KAAAlO,EAAAqC,GAEA,OAAAklB,GAEA,SAAA9nB,EAAA,CACA,GAAAmP,KACAA,GAAA5O,GAAAP,MACS,OAAAO,GAAAoE,EAAAK,GAAAzE,EAAA,YACT4O,EAAA5O,EAEA,QAAAuD,KAAAqL,GACArK,EAAA,gBAAAhB,EAAA,IAAA1C,KAAA0O,GAAA1O,KAAA+N,EAAArL,GAEA,KAAAA,IAAA1C,MAAA+O,MAAAC,iBAAA,GAAAhP,KAAA+O,MAAAC,iBAAAjK,GAAArC,IAAAqL,EAAAhJ,GAAArC,IAAAa,EAAAK,GAAA5D,KAAA+O,MAAAC,iBAAAtM,GAAA,aACA,GAAAqhB,GAAA/jB,KAAA+O,MAAAC,iBAAAtM,GAAAc,MAAAxD,QAAA6J,OAAAkE,EAAArL,IACA1C,MAAAM,MAAAoC,GAAAqL,EAAArL,EACA,QAAA65B,KAAAxY,KAAAhf,GAAAw3B,KACAxuB,EAAAwuB,GAAAxY,EAAAwY,IAIA,MADAvC,GAAAh6B,KAAA+N,GACA/N,MASAqqB,EAAAmS,QAAA,WACA,GAAAx8B,KAAAkuB,QACA,MAAAluB,KAEA,IAAAwpB,GAAAkS,EAAA17B,KAAAwpB,KACAA,GAAAG,WAAApP,YAAAiP,EACA,IAAApR,GAAApY,KAAA+O,KAEA,OADAqJ,GAAA3K,KAAAzN,MAAAuD,EAAA6gB,SAAApkB,KAAAoY,GACApY,MASAqqB,EAAAoS,OAAA,WACA,GAAAz8B,KAAAkuB,QACA,MAAAluB,KAEA,IAAAwpB,GAAAkS,EAAA17B,KAAAwpB,MACAG,EAAAH,EAAAG,UACAA,GAAAG,aAAAN,EAAAG,EAAA3R,YACAzU,EAAA8gB,QAAArkB,UAAA+O,MACA/O,MAAA+O,KACA,OAAA/O,OASAqqB,EAAA6H,YAAA,SAAAvkB,GACA,GAAA3N,KAAAkuB,UAAAvgB,EACA,MAAA3N,KAGA,IAAAwpB,GAAAkS,EAAA17B,KAAAwpB,MACAkT,EAAAhB,EAAA/tB,EAAA6b,MAAA7b,IAAAnJ,OAAA,GAAAglB,KAOA,OANAkT,GAAAjT,YACAiT,EAAA/S,WAAAG,aAAAN,EAAAkT,EAAAjT,aAEAiT,EAAA/S,WAAApP,YAAAiP,GAEAjmB,EAAA+gB,aAAAtkB,KAAA2N,EAAA3N,KAAA+O,OACA/O,MASAqqB,EAAAP,aAAA,SAAAnc,GACA,GAAA3N,KAAAkuB,UAAAvgB,EACA,MAAA3N,KAGA,IAAAwpB,GAAAkS,EAAA17B,KAAAwpB,MACAmT,EAAAjB,EAAA/tB,EAAA6b,MAAA7b,EAAA,GAAA6b,KAGA,OAFAmT,GAAAhT,WAAAG,aAAAN,EAAAmT,GACAp5B,EAAAihB,cAAAxkB,KAAA2N,EAAA3N,KAAA+O,OACA/O,MAEAqqB,EAAA7V,KAAA,SAAAof,GAEA,GAAAvxB,GAAArC,IACA,QAAA4zB,EAAA,CACA,GAAAgJ,GAAAhH,EAAA,UACAphB,EAAAohB,EAAA,iBACAvzB,GAAA/B,MAAAkU,KAAAof,EACAgJ,EAAAluB,GAAAnL,EAAA0V,aACA2c,EAAAphB,GAAqBqoB,cAAAjJ,GAAA,MACrBgJ,EAAAriB,YAAA/F,GACAnS,EAAA0M,MAAA2nB,KAAAnc,YAAAqiB,GACAv6B,EAAAy6B,MAAAF,EACAhH,EAAAvzB,EAAAmnB,MAAuBuT,OAAA,QAAAH,EAAAluB,GAAA,UAEvBrM,GAAAy6B,QACAz6B,EAAAy6B,MAAAnT,WAAAvN,YAAA/Z,EAAAy6B,aACAz6B,GAAAy6B,YACAz6B,GAAA/B,MAAAkU,MAEAnS,EAAAmnB,KAAAwT,gBAAA,SAEA,OAAA36B,IAEAkB,EAAAS,QAAAwN,OAAA,SAAA4G,EAAAjS,EAAAC,EAAAlE,GACA,GAAAuM,GAAAmnB,EAAA,SACAxd,GAAA+T,QAAA/T,EAAA+T,OAAA5R,YAAA9L,EACA,IAAA5J,GAAA,GAAA82B,GAAAltB,EAAA2J,EAIA,OAHAvT,GAAAvE,OAAqBiM,GAAApG,EAAAyG,GAAAxG,EAAAlE,IAAAyS,KAAA,OAAAc,OAAA,QACrB5Q,EAAAjE,KAAA,SACAg1B,EAAAnnB,EAAA5J,EAAAvE,OACAuE,GAEAtB,EAAAS,QAAAyN,KAAA,SAAA2G,EAAAjS,EAAAC,EAAA4Q,EAAAC,EAAA/U,GACA,GAAAuM,GAAAmnB,EAAA,OACAxd,GAAA+T,QAAA/T,EAAA+T,OAAA5R,YAAA9L,EACA,IAAA5J,GAAA,GAAA82B,GAAAltB,EAAA2J,EAIA,OAHAvT,GAAAvE,OAAqB6F,IAAAC,IAAAwF,MAAAoL,EAAAnL,OAAAoL,EAAA3B,GAAApT,GAAA,EAAAqT,GAAArT,GAAA,EAAAyS,KAAA,OAAAc,OAAA,QACrB5Q,EAAAjE,KAAA,OACAg1B,EAAAnnB,EAAA5J,EAAAvE,OACAuE,GAEAtB,EAAAS,QAAA2N,QAAA,SAAAyG,EAAAjS,EAAAC,EAAAkP,EAAAC,GACA,GAAA9G,GAAAmnB,EAAA,UACAxd,GAAA+T,QAAA/T,EAAA+T,OAAA5R,YAAA9L,EACA,IAAA5J,GAAA,GAAA82B,GAAAltB,EAAA2J,EAIA,OAHAvT,GAAAvE,OAAqBiM,GAAApG,EAAAyG,GAAAxG,EAAAkP,KAAAC,KAAAZ,KAAA,OAAAc,OAAA,QACrB5Q,EAAAjE,KAAA,UACAg1B,EAAAnnB,EAAA5J,EAAAvE,OACAuE,GAEAtB,EAAAS,QAAA6N,MAAA,SAAAuG,EAAA5C,EAAArP,EAAAC,EAAA4Q,EAAAC,GACA,GAAAxI,GAAAmnB,EAAA,QACAA,GAAAnnB,GAAetI,IAAAC,IAAAwF,MAAAoL,EAAAnL,OAAAoL,EAAAgmB,oBAAA,SACfxuB,EAAAonB,eAAAT,EAAA,OAAA5f,GACA4C,EAAA+T,QAAA/T,EAAA+T,OAAA5R,YAAA9L,EACA,IAAA5J,GAAA,GAAA82B,GAAAltB,EAAA2J,EAGA,OAFAvT,GAAAvE,OAAqB6F,IAAAC,IAAAwF,MAAAoL,EAAAnL,OAAAoL,EAAAzB,OACrB3Q,EAAAjE,KAAA,QACAiE,GAEAtB,EAAAS,QAAA4N,KAAA,SAAAwG,EAAAjS,EAAAC,EAAAwL,GACA,GAAAnD,GAAAmnB,EAAA,OACAxd,GAAA+T,QAAA/T,EAAA+T,OAAA5R,YAAA9L,EACA,IAAA5J,GAAA,GAAA82B,GAAAltB,EAAA2J,EAaA,OAZAvT,GAAAvE,OACA6F,IACAC,IACA6P,cAAA,SACArE,OACAkD,cAAAvR,EAAA8Q,gBAAA,eACAU,YAAAxR,EAAA8Q,gBAAA,aACAoB,OAAA,OACAd,KAAA,QAEA9P,EAAAjE,KAAA,OACAo5B,EAAAn1B,IAAAvE,OACAuE,GAEAtB,EAAAS,QAAAooB,QAAA,SAAAxgB,EAAAC,GAQA,MAPA7L,MAAA4L,SAAA5L,KAAA4L,MACA5L,KAAA6L,UAAA7L,KAAA6L,OACA7L,KAAAmsB,OAAA2J,aAAA,QAAA91B,KAAA4L,OACA5L,KAAAmsB,OAAA2J,aAAA,SAAA91B,KAAA6L,QACA7L,KAAAk9B,UACAl9B,KAAAqsB,WAAA7oB,MAAAxD,UAAAk9B,UAEAl9B,MAEAuD,EAAAS,QAAAvB,OAAA,WACA,GAAA06B,GAAA55B,EAAAuiB,cAAAtiB,MAAA,EAAAe,WACAwhB,EAAAoX,KAAApX,SACA,KAAAA,EACA,SAAAqX,OAAA,2BAEA,IAMAC,GANAl3B,EAAAg3B,EAAAh3B,EACAC,EAAA+2B,EAAA/2B,EACAwF,EAAAuxB,EAAAvxB,MACAC,EAAAsxB,EAAAtxB,OACAyxB,EAAA1H,EAAA,OACA2H,EAAA,kBAiCA,OA/BAp3B,MAAA,EACAC,KAAA,EACAwF,KAAA,IACAC,KAAA,IACA+pB,EAAA0H,GACAzxB,SACAwF,QAAA,IACAzF,QACA4xB,MAAA,6BACAC,cAAA,iCAEA,GAAA1X,GACAuX,EAAArlB,MAAAiE,QAAAqhB,EAAA,0BAA0Dp3B,EAAA,UAAiBC,EAAA,KAC3E7C,EAAAmU,GAAA3F,IAAAkI,KAAAM,YAAA+iB,GACAD,EAAA,IAEAC,EAAArlB,MAAAiE,QAAAqhB,EAAA,oBACAxX,EAAA/N,WACA+N,EAAA+D,aAAAwT,EAAAvX,EAAA/N,YAEA+N,EAAAxL,YAAA+iB,IAGAvX,EAAA,GAAAxiB,GAAA+U,OACAyN,EAAAna,QACAma,EAAAla,SACAka,EAAAoG,OAAAmR,EACAvX,EAAA2L,QACA3L,EAAA2X,MAAA3X,EAAA4X,KAAA,EACAN,IAAAtX,EAAA6X,UAAA,cACA7X,EAAA6X,YACA7X,GAEAxiB,EAAAS,QAAAqoB,WAAA,SAAAlmB,EAAAC,EAAA4Q,EAAAC,EAAAqV,GACA5oB,EAAA,qBAAA1D,UAAAk9B,UAAA/2B,EAAAC,EAAA4Q,EAAAC,EAAAqV,GACA,IAIAuR,GACAjC,EALAkC,EAAA99B,KAAAksB,UACA0H,EAAAzrB,EAAA6O,EAAA8mB,EAAAlyB,MAAAqL,EAAA6mB,EAAAjyB,QACA4B,EAAAzN,KAAAyN,IACAswB,EAAAzR,EAAA,0BAiBA,KAdA,MAAAnmB,GACAnG,KAAAg+B,UACApK,EAAA,SAEA5zB,MAAAg+B,QACAH,EAAA,OAAA79B,KAAA4L,MAAAD,EAAA3L,KAAA6L,SAEA7L,KAAAg+B,QAAApK,EACAiK,EAAA13B,EAAAwF,EAAAvF,EAAAuF,EAAAqL,EAAArL,EAAAsL,GAEA2e,EAAA51B,KAAAmsB,QACA8R,QAAAJ,EACAZ,oBAAAc,IAEAnK,GAAAnmB,GACAmuB,EAAA,gBAAAnuB,GAAAnN,MAAAmN,EAAAnN,MAAA,kBACAmN,EAAAJ,MAAsB0I,eAAA6lB,IACtBnuB,EAAA+B,EAAA2e,MAAA,EACA1gB,EAAA+B,EAAAgW,OAAA,EACA/X,IAAAU,IAGA,OADAnO,MAAAk9B,UAAA/2B,EAAAC,EAAA4Q,EAAAC,IAAAqV,GACAtsB,MAYAuD,EAAAR,UAAA66B,UAAA,WACA,GAEAnV,GAFA6U,EAAAt9B,KAAAmsB,OACAjpB,EAAAo6B,EAAArlB,KAEA,KACAwQ,EAAA6U,EAAAY,gBAAAZ,EAAAa,kBACS,MAAA1yB,GACTgd,EAAA6U,EAAAa,kBAEA,GAAA39B,IAAAioB,EAAAhd,EAAA,EACAgC,GAAAgb,EAAAhkB,EAAA,GACAjE,GAAAiN,KACAjN,IACAR,KAAA09B,OAAA19B,KAAA09B,MAAAl9B,GAAA,EACA0C,EAAA1C,KAAAR,KAAA09B,MAAA,MAEAjwB,IACAzN,KAAA29B,MAAA39B,KAAA29B,KAAAlwB,GAAA,EACAvK,EAAAuK,IAAAzN,KAAA29B,KAAA,QAUAp6B,EAAAR,UAAA2uB,MAAA,WACAnuB,EAAAG,IAAA,gBAAA1D,KAEA,KADA,GAAA4B,GAAA5B,KAAAmsB,OACAvqB,EAAAoW,YACApW,EAAAwa,YAAAxa,EAAAoW,WAEAhY,MAAAkkB,OAAAlkB,KAAAyN,IAAA,MACAzN,KAAAo+B,KAAAxI,EAAA,SAAArb,YAAAhX,EAAAmU,GAAA3F,IAAAuoB,eAAA,wBAAA/2B,EAAA8N,UACAzP,EAAA2Y,YAAAva,KAAAo+B,MACAx8B,EAAA2Y,YAAAva,KAAA02B,KAAAd,EAAA,UAQAryB,EAAAR,UAAAg5B,OAAA,WACAr4B,EAAA,iBAAA1D,MACAA,KAAAmsB,OAAAxC,YAAA3pB,KAAAmsB,OAAAxC,WAAAvN,YAAApc,KAAAmsB,OACA,QAAA3qB,KAAAxB,MACAA,KAAAwB,GAAA,kBAAAxB,MAAAwB,GAAA+B,EAAA6b,gBAAA5d,GAAA,KAGA,IAAAgwB,GAAAjuB,EAAAyxB,EACA,QAAAvD,KAAApH,KAAAtlB,GAAA0sB,KAAAD,EAAAzsB,GAAA0sB,KACAD,EAAAC,GAAA,SAAApS,GACA,kBACA,GAAA7Z,GAAAjB,SACA,OAAAvE,MAAA0tB,QAAA,SAAAjf,GACAA,EAAA4Q,GAAA7b,MAAAiL,EAAAjJ,OAGSisB,MAERjuB,MAAAvC,EAAAmC,MACD/E,EAAA4C,QAAAoC,IAKAg7B;;;;AAKA,SAAAhgC,EAAA4C,EAAA1C,GAEA,GAAA6E,GAAAC,CAAgED,IAAA7E,uBAAA,8BAu+BhE+E,MAv+BgED,EAAA,SAAAE,GAChE,IAAAA,KAAA8U,IAAA,CAIA,GAAAtT,GAAA,iBACAmL,EAAA5Q,OACAgO,EAAA0G,WACArM,EAAAuL,KACAa,EAAApM,EAAAoM,MACA5L,EAAAR,EAAAwL,IACA/K,EAAAT,EAAAyL,IACAnL,EAAAN,EAAAM,IAEAmI,EAAA,QACA1M,EAAAH,EAAAG,IAEAiI,EAAA,IACA+G,EAAA,GACA4rB,GAAexiB,EAAA,IAAAD,EAAA,IAAAH,EAAA,IAAA6iB,EAAA,IAAA58B,EAAA,IAAAF,EAAA,IAAAG,EAAA,IAAAqE,EAAA,KACfu4B,EAAA,yBACAC,EAAA,6BACApE,EAAA,cACAqE,EAAA,iFACAC,EAAA,MACAC,GAAqBltB,KAAA,EAAAD,KAAA,EAAAI,MAAA,GACrBgtB,GAAqBrtB,OAAA,EAAAG,QAAA,GACrBmtB,EAAA,SAAAptB,GACA,GAAAqtB,GAAA,aACA7Z,EAAA3hB,EAAA8c,eAGA,IAFAnQ,EAAAwB,GAAAjB,MAAAsuB,KAAA7Z,EAAA3hB,EAAAkH,aACAs0B,EAAA,UACA7Z,GAAA3hB,EAAA8c,kBAAAnQ,EAAAwB,GAAAjB,MAAAsuB,GAAA,CACA,GAAAl6B,GAAAqL,EAAAwB,GAAA0H,QAAAolB,EAAA,SAAA7J,EAAAzP,EAAA9gB,GACA,GAAA46B,MACAC,EAAA,KAAA/Z,EAAAjS,cACApO,EAAAy5B,EAAApZ,EAQA,OAPA9gB,GAAAgV,QAAAihB,EAAA,SAAAz7B,GACAqgC,GAAA,GAAAD,EAAAx6B,SACAK,GAAAm6B,EAAAV,EAAA,KAAApZ,EAAA,SACA8Z,MAEAA,EAAA75B,KAAA4O,EAAAnV,EAAA+/B,MAEA95B,EAAAm6B,GAEA,OAAAn6B,GAEA,GAAA5B,GAAAf,EAAAge,EAAAgF,EAAAxT,EACA7M,KACA,QAAArD,GAAA,EAAA0D,EAAAgb,EAAA1b,OAA2ChD,EAAA0D,EAAQ1D,IAAA,CACnDyB,EAAAid,EAAA1e,GACAU,EAAAge,EAAA1e,GAAA,GAAAyR,cACA,KAAA/Q,MAAA,IACA,QAAA4H,GAAA,EAAAiB,EAAA9H,EAAAuB,OAA8CsF,EAAAiB,EAAQjB,IACtD5H,GAAA6R,EAAA9Q,EAAA6G,GAAA60B,IAAA70B,GAAAiB,EAAA,MAAA2H,EAEA7N,GAAAM,KAAAjD,GAEA,MAAA2C,GAAAY,KAAAkG,IAEAuzB,EAAA,SAAArmB,EAAAgM,EAAAC,GACA,GAAAnjB,GAAA4B,EAAAqM,QAEA,OADAjO,GAAAof,QAAAlI,EAAA,QAEAgM,GAAAljB,EAAAwE,EAAA0e,EAAAC,GACAA,GAAAnjB,EAAAyE,EAAAye,EAAAC,KAGAqa,EAAA,SAAAl8B,EAAA8hB,EAAAC,EAAAH,EAAAC,EAAAjM,GACA,GAAArJ,GAAAvM,EAAAuM,EACA7N,EAAAsB,EAAA2M,OACAwvB,EAAA5vB,EAAA4vB,QACAr9B,EAAAkB,EAAAumB,KACAtmB,EAAAnB,EAAAkW,MACA7R,EAAA,EACAi5B,EAAA,GAEAC,EAAAX,EAAA5Z,EACAwa,EAAAZ,EAAA3Z,CAEA,IADA9hB,EAAAg3B,WAAA,SACAnV,GAAAC,EAAA,CAKA,GAFAjjB,EAAAy9B,UAAAv3B,EAAAq3B,GAAA3zB,EAAA1D,EAAAs3B,GACAr8B,EAAAu8B,SAAA5mB,GAAAkM,EAAAC,EAAA,QACAnM,EAAA,CACA,GAAAjX,GAAAs9B,EAAArmB,EAAAgM,EAAAC,EACAD,GAAAjjB,EAAAijB,GACAC,EAAAljB,EAAAkjB,GAMA,GAJAC,EAAA,IAAAsa,GAAA,KACAra,EAAA,IAAAqa,GAAA,QAAAj5B,GAAA,GACAlD,EAAAm8B,OACAt9B,EAAA29B,YAAA7a,GAAAya,EAAA3zB,EAAAmZ,GAAAya,EACAH,GAAA5vB,EAAAmwB,SAAA,CACA,GAAAhrB,GAAA5S,EAAAy2B,qBAnFA,OAoFA7jB,QAAA,GACA5S,EAAAqa,YAAAzH,GACAyqB,IACAx9B,EAAAs9B,EAAArmB,EAAAlX,EAAAwE,EAAAi5B,EAAA,GAAAA,EAAA,IAAAz9B,EAAAyE,EAAAg5B,EAAA,GAAAA,EAAA,KACAzqB,EAAAirB,SAAAh+B,EAAAijB,GAAAze,EAAAuF,EAAA/J,EAAAkjB,GAAA1e,GAEAoJ,EAAAmwB,WACAhrB,EAAAif,KAAApkB,EAAAmwB,SAAA,GAAA13B,EAAA8c,GAAApZ,EAAA6D,EAAAmwB,SAAA,GAAA13B,EAAA+c,IAEAjjB,EAAAwY,YAAA5F,GAEAzR,EAAAg3B,WAAA,WAEA32B,GAAAiQ,SAAA,WACA,yFAAAxT,KAAAqR,QAEA,IAAAsmB,GAAA,SAAA51B,EAAAnD,EAAAg5B,GAOA,IANA,GAAA3nB,GAAAC,EAAAtR,GAAAqU,cAAA9C,MAAA,KACA2nB,EAAAF,EAAA,cACAp2B,EAAAyO,EAAAzL,OACA5D,EAAA,UACAoW,EAAA,SACAC,EAAA,SACAzV,KACA,OAAAyO,EAAAzO,IACA,YACA,cACA,WACA,cACA,WACA,WACAZ,EAAAqP,EAAAzO,EACA,MACA,YACA,aAAAyV,EAAAhH,EAAAzO,EAA6C,MAC7C,YACA,YAAAwV,EAAA/G,EAAAzO,GAGA,GAAAiU,GAAA1T,EAAAynB,KAAAgP,qBAAA,YACA/iB,GAAAqiB,EAAA,SAAAl3B,EACA6U,EAAAqiB,EAAA,eAAA9gB,EACAvB,EAAAqiB,EAAA,cAAA7gB,GAEA+iB,EAAA,SAAAj4B,EAAAgM,GAEAhM,EAAAzB,MAAAyB,EAAAzB,SACA,IAAAkpB,GAAAznB,EAAAynB,KACAje,EAAAxJ,EAAAzB,MACA4C,EAAAsmB,EAAAvR,MAEA4nB,EAAAjB,EAAA78B,EAAAnB,QAAAmN,EAAA5H,GAAAoF,EAAApF,GAAA4H,EAAA3H,GAAAmF,EAAAnF,GAAA2H,EAAAnC,OAAAL,EAAAK,OAAAmC,EAAAlC,QAAAN,EAAAM,QAAAkC,EAAAxB,IAAAhB,EAAAgB,IAAAwB,EAAAnB,IAAArB,EAAAqB,IAAAmB,EAAAuH,IAAA/J,EAAA+J,IAAAvH,EAAAwH,IAAAhK,EAAAgK,IAAAxH,EAAA7L,GAAAqJ,EAAArJ,GACA49B,EAAAjB,EAAA98B,EAAAnB,QAAA2K,EAAAgB,IAAAwB,EAAAxB,IAAAhB,EAAAqB,IAAAmB,EAAAnB,IAAArB,EAAArJ,GAAA6L,EAAA7L,GAAAqJ,EAAA+J,IAAAvH,EAAAuH,IAAA/J,EAAAgK,IAAAxH,EAAAwH,IACA1Q,EAAA9C,CAGA,QAAAgiB,KAAAhW,KAAAhJ,GAAAgf,KACAxY,EAAAwY,GAAAhW,EAAAgW,GAqBA,IAnBA8b,IACAt0B,EAAAmG,KAAAnO,EAAA6T,SAAArV,EAAAnB,MAAAmB,GACAA,EAAAyN,EAAA2e,MAAA,GAEApgB,EAAAoH,OAAAqU,EAAArU,KAAApH,EAAAoH,MACApH,EAAA1O,QAAAmqB,EAAAnqB,MAAA0O,EAAA1O,OACA0O,EAAAiI,SAAAwT,EAAAxT,OAAAjI,EAAAiI,QACAjI,EAAA2G,SAAAxR,EAAAwR,OAAA3G,EAAA2G,QACA,QAAA3G,IAAAhM,EAAAyS,KAAAzG,EAAAyG,OACAzG,EAAA2D,MAAA,QAAA3P,EAAAnB,MAAAi/B,KACArW,EAAA9X,KAAAotB,GAAA5uB,EAAA3E,EAAAmG,MAAAuB,cAAAsJ,QAAA,KAAAhZ,EAAA8c,gBAAA9U,EAAAmG,MAAAnG,EAAAmG,MACA3P,EAAAyN,EAAA2e,MAAA,EACA,SAAApsB,EAAAnB,OACAmB,EAAAyN,EAAA4vB,SAAA7zB,EAAApF,EAAAoF,EAAAnF,GACArE,EAAAyN,EAAAmwB,UAAAp0B,EAAAK,MAAAL,EAAAM,QACAszB,EAAAp9B,EAAA,aAGA,aAAAgM,IAAAhM,EAAA+N,UAAA/B,EAAA+B,WACAgwB,EAAA,CACA,GAAAvzB,IAAAhB,EAAAgB,GACAK,GAAArB,EAAAqB,GACA0I,GAAA/J,EAAA+J,KAAA/J,EAAArJ,GAAA,EACAqT,GAAAhK,EAAAgK,KAAAhK,EAAArJ,GAAA,CACAsnB,GAAA9X,KAAAnO,EAAAsoB,OAAA,qCAAmE9X,GAAAxH,EAAA+I,GAAAqpB,GAAA5qB,GAAAnH,EAAA2I,GAAAopB,GAAA5qB,GAAAxH,EAAA+I,GAAAqpB,GAAA5qB,GAAAnH,EAAA2I,GAAAopB,GAAA5qB,EAAAxH,EAAAoyB,IACnE58B,EAAAyN,EAAA2e,MAAA,EAEA,gBAAApgB,GAAA,CACA,GAAA0D,GAAAvB,EAAAnC,EAAA,cAAAoC,MAAAC,EACA,OAAAqB,EAAAjN,OAAA,CACAiN,EAAA,IAAAA,EAAA,KAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,EACA,IAAAsuB,GAAAvW,EAAAwW,UAAAz8B,EAAAmU,GAAA3F,IAAA+F,cAAA,OACAmoB,EAAAF,EAAA9nB,KACAgoB,GAAAxF,KAAAl3B,EAAAsoB,OAAA,gCAAkEpa,GAClE+X,EAAAwW,WACAC,EAAAL,SAAA,WACAK,EAAAxyB,IAAA,EACAwyB,EAAAz/B,KAAA,EACAy/B,EAAAr0B,MAAA7J,EAAAgN,MAAAnD,MAAA,KACAq0B,EAAAp0B,OAAA9J,EAAAgN,MAAAlD,OAAA,KACA2d,EAAAG,WAAAG,aAAAiW,EAAAvW,GACAuW,EAAAxlB,YAAAiP,GACAA,EAAAwW,SAAAD,GAGAhyB,EAAA,cACAyb,EAAAwW,WAAAxW,EAAAwW,SAAA/nB,MAAAwiB,KAAA,QAGA,GAAA14B,EAAAm+B,SAAA,CACA,GAAAC,GAAAp+B,EAAAm+B,SAAAjoB,KACAlK,GAAA8G,OAAAsrB,EAAAtrB,KAAA9G,EAAA8G,MACA9G,EAAA,iBAAAoyB,EAAAC,WAAA,IAAAryB,EAAA,eAAAoC,MAAA,QAAAiJ,QAAA,iBAAA1G,GAAA,KACA3E,EAAA,eAAAoyB,EAAA9E,SAAAttB,EAAA,cACAA,EAAA,iBAAAoyB,EAAAE,WAAAtyB,EAAA,gBACAA,EAAA,gBAAAoyB,EAAAG,UAAAvyB,EAAA,eAQA,GANA,eAAAA,IACA4pB,EAAA9yB,EAAAkJ,EAAA,gBAEA,aAAAA,IACA4pB,EAAA9yB,EAAAkJ,EAAA,gBAEA,MAAAA,EAAAsH,SACA,MAAAtH,EAAA4G,MACA,MAAA5G,EAAAyH,KACA,MAAAzH,EAAA0H,QACA,MAAA1H,EAAA,iBACA,MAAAA,EAAA,mBACA,MAAAA,EAAA,iBACA,MAAAA,EAAA,qBACA,MAAAA,EAAA,sBACA,MAAAA,EAAA,oBACA,MAAAA,EAAA,mBACA,GAAA4G,GAAA6U,EAAAgP,qBA1NA,OAqOA,IATA7jB,OAAA,IACAA,MAAA4rB,EA7NA,SA8NA,SAAAx+B,EAAAnB,MAAAmN,EAAAyH,MACAb,EAAAa,IAAAzH,EAAAyH,KAEAzH,EAAA4G,SAAA7Q,IAAA,GACA,MAAA6Q,EAAA7Q,IAAA,QAAAiK,EAAA4G,MAAA,OAAA5G,EAAA4G,OACAA,EAAA7Q,IAAA,GAEA6Q,EAAA7Q,IAAAiK,EAAA4G,KAAA,CACA,GAAAomB,GAAA7qB,EAAAnC,EAAA4G,MAAAlE,MAAAlN,EAAAmQ,OACA,IAAAqnB,EAAA,CACApmB,EAAAgV,YAAAH,KAAApN,YAAAzH,GACAA,EAAAoM,QAAA,EACApM,EAAAa,IAAAulB,EAAA,GACApmB,EAAA/T,KAAA,MACA,IAAAyW,GAAAtV,EAAAgO,QAAA,EACA4E,GAAAirB,SAAAvoB,EAAAlR,EAAAwF,EAAA0L,EAAAjR,EACArE,EAAAyN,EAAA4vB,SAAA/nB,EAAAlR,EAAAkR,EAAAjR,GAEA7C,EAAAyY,SAAA+e,EAAA,cACAh5B,EAAAyN,EAAAmwB,UAAA3/B,KAAAmmB,YAAAnmB,KAAAqmB,oBAGA1R,GAAA+E,MAAAnW,EAAA2L,OAAAnB,EAAA4G,MAAA7O,IACA6O,EAAAa,IAAA9C,EACAiC,EAAA/T,KAAA,QACA2C,EAAA2L,OAAAnB,EAAA4G,MAAA6H,QAAA3X,EAAAjE,QAAqE4Q,OAAA,EAAAG,QAAA,IAAsB,KAAAzB,EAAAnC,EAAA4G,MAAA+H,WAAAuZ,EAAApxB,EAAAkJ,EAAA4G,UAC3FpJ,EAAAoJ,KAAA,OACApJ,EAAA2J,SAAAnH,EAAA4G,KACAA,EAAAoM,QAAA,GAIA,mBAAAhT,IAAA,WAAAA,GAAA,CACA,GAAAsH,MAAA9J,EAAA,4BAAAA,EAAA8J,QAAA,YAAA9R,EAAA2L,OAAAnB,EAAA4G,MAAA5S,EAAA,QACAsT,GAAAjN,EAAAD,EAAAkN,EAAA,MACAV,EAAAU,UACAV,EAAAa,MACAb,EAAA+E,MAAA,QAGA8P,EAAAjP,YAAA5F,EACA,IAAAc,GAAA+T,EAAAgP,qBAAA,WAAAhP,EAAAgP,qBAAA,aACAgI,GAAA,GACA/qB,IAAA+qB,EAAA/qB,EAAA8qB,EAAA,YACAxyB,EAAA0H,QAAA,QAAA1H,EAAA0H,QACA1H,EAAA,iBACA,MAAAA,EAAA,mBACAA,EAAA,qBACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,qBACA0H,EAAA3R,IAAA,IAEA,QAAAiK,EAAA0H,QAAA,OAAA1H,EAAA0H,QAAA,MAAAA,EAAA3R,IAAA,GAAAiK,EAAA0H,QAAA,GAAA1H,EAAA,mBAAA0H,EAAA3R,IAAA,EACA,IAAA28B,GAAAl9B,EAAA2L,OAAAnB,EAAA0H,OACAA,GAAA3R,IAAAiK,EAAA0H,WAAAiE,MAAA+mB,EAAA36B,KACAuP,KAAA9J,EAAA,8BAAAA,EAAA8J,QAAA,YAAAorB,EAAA1+B,EAAA,QACA,IAAA6J,GAAA,KAAA0B,EAAAS,EAAA,oBAUA,IATAsH,EAAAjN,EAAAD,EAAAkN,EAAA,MACA,MAAAtH,EAAA,kBAAAnC,EAAAL,EAAA,iBACAwC,EAAA,kBAAA0H,EAAAud,OAAApnB,GACAA,KAAA,IAAAyJ,GAAAzJ,KAAA6J,EAAAud,OAAA,GACAvd,EAAAJ,UAEAtH,EAAA,qBAAA0H,EAAAirB,UAAA3yB,EAAA,6BACA0H,EAAAkrB,WAAA5yB,EAAA,wBACAA,EAAA,oBAAA0H,EAAAmrB,OAAA,QAAA7yB,EAAA,mCAAAA,EAAA,oCACA,oBAAAA,GAAA,CACA,GAAAkrB,IACAC,IAAA,YACAC,IAAA,WACAC,KAAA,eACAC,MAAA,kBACAC,KAAA,MACAC,KAAA,OACAC,KAAA,WACAC,MAAA,UACAC,MAAA,cACAC,OAAA,iBAEAlkB,GAAAorB,UAAA5H,EAAAl0B,GAAAgJ,EAAA,qBAAAkrB,EAAAlrB,EAAA,qBAAA2E,EAEA8tB,GAAAhX,EAAAjP,YAAA9E,GAEA,WAAA5Q,EAAAjE,KAAA,CACAiE,EAAAkK,MAAAod,OAAAlU,MAAAqC,QAAA5H,CACA,IAAAouB,GAAAj8B,EAAAkK,MAAA+xB,KAEAzF,EAAA9vB,EAAAsJ,MAAAtJ,EAAAsJ,KAAApE,MAAA,sBACAvN,GAAA49B,EAAA7oB,MACA1M,EAAAsJ,OAAA3R,EAAA2R,KAAAtJ,EAAAsJ,MACAtJ,EAAA,iBAAArI,EAAAk9B,WAAA70B,EAAA,gBACAA,EAAA,iBAAArI,EAAAm9B,WAAA90B,EAAA,gBACAA,EAAA,gBAAArI,EAAAo9B,UAAA/0B,EAAA,eACA8vB,EAAA/tB,EAAA/B,EAAA,cAAA8vB,KAAA,QACAn4B,EAAAm4B,SARA,IAQAA,EAAA,KACAx2B,EAAAq7B,SAAAvM,SAAAmN,EAAA/oB,UAAA7H,EAAArL,EAAAq7B,SAAAvM,QAAAva,QAAA,cAAkGA,QAAA,cAAuBA,QAAA,cACzH,IAAA2nB,GAAAD,EAAApU,uBACA7nB,GAAAm8B,EAAAz1B,EAAAyL,GAAA+pB,EAAAE,MAAAF,EAAAvgC,MAXA,IAYAqE,EAAA8W,EAAApQ,EAAA0L,GAAA8pB,EAAA7c,OAAA6c,EAAAtzB,KAZA,IAcA5I,EAAA4W,EAAAlQ,EAAApF,EACAtB,EAAA0a,EAAAhU,EAAAnF,EAAAvB,EAAA8W,EAAA,GAEA,KAAA5N,IAAA,KAAAA,MAAAlJ,EAAA6M,KAAA4J,EAAA/X,EAAAsoB,OAAA,mBAAwF9X,EAAAxI,EAAApF,EAAAw4B,GAAA5qB,EAAAxI,EAAAnF,EAAAu4B,GAAA5qB,EAAAxI,EAAApF,EAAAw4B,GAAA,GAExF,QADAuC,IAAA,4EACAr/B,EAAA,EAAAs/B,EAAAD,EAAA18B,OAAmD3C,EAAAs/B,EAAQt/B,IAAA,GAAAq/B,EAAAr/B,IAAAkM,GAAA,CAC3DlJ,EAAA2K,EAAA2e,MAAA,CACA,OAIA,OAAA5iB,EAAA,gBACA,YACA1G,EAAAq7B,SAAAjoB,MAAA,uBACApT,EAAAu8B,IAAAv8B,EAAAm8B,EAAA,CACA,MACA,WACAn8B,EAAAq7B,SAAAjoB,MAAA,wBACApT,EAAAu8B,KAAAv8B,EAAAm8B,EAAA,CACA,MACA,SACAn8B,EAAAq7B,SAAAjoB,MAAA,yBACApT,EAAAu8B,IAAA,EAGAv8B,EAAAq7B,SAAAjoB,MAAA,oBAIAge,EAAA,SAAAl0B,EAAAmT,EAAAP,GACA5S,EAAAzB,MAAAyB,EAAAzB,SACA,IACA+S,IADAtR,EAAAzB,MACA4S,KAAAG,KAGAzS,EAAA,SACAygC,EAAA,OAaA,IAZAt/B,EAAAzB,MAAA4U,WACAA,EAAAhF,EAAAgF,GAAAkE,QAAA7V,EAAAsT,iBAAA,SAAA8d,EAAAuB,EAAAC,GAQA,MAPAv1B,GAAA,SACAs1B,GAAAC,IACAD,EAAA5oB,EAAA4oB,GACAC,EAAA7oB,EAAA6oB,GACA9iB,EAAA6iB,EAAA,MAAA7iB,EAAA8iB,EAAA,YAAAA,EAAAxuB,EAAAC,KAAA,IAAAyL,EAAA6iB,EAAA,WAAAC,EAAA,WACAkL,EAAAnL,EAAAvqB,EAAAwqB,GAEAzjB,IAEAwC,IAAA/E,MAAA,YACA,UAAAvP,EAAA,CACA,GAAA8X,GAAAxD,EAAAtP,OAEA,IADA8S,GAAApL,EAAAoL,GACA8d,MAAA9d,GACA,YAGA,GAAA6H,GAAAhd,EAAAugB,WAAA5O,EACA,KAAAqL,EACA,WAGA,IADAxe,IAAAyoB,OAAAzoB,EAAAynB,KACAjJ,EAAA/b,OAAA,CACAzC,EAAAqa,YAAAzH,GACAA,EAAA7Q,IAAA,EACA6Q,EAAA8c,OAAA,OACA9c,EAAA+E,MAAA6G,EAAA,GAAA7G,MACA/E,EAAA2sB,OAAA/gB,IAAA/b,OAAA,GAAAkV,KAEA,QADA6nB,MACA//B,EAAA,EAAA0D,EAAAqb,EAAA/b,OAA6ChD,EAAA0D,EAAQ1D,IACrD+e,EAAA/e,GAAAwiB,QAAAud,EAAAp8B,KAAAob,EAAA/e,GAAAwiB,OAAArY,EAAA4U,EAAA/e,GAAAkY,MAEA/E,GAAA6sB,OAAAD,EAAA/8B,OAAA+8B,EAAA97B,OAAA,MAAAkP,EAAA+E,MACA,UAAA9Y,GACA+T,EAAA/T,KAAA,gBACA+T,EAAA8sB,MAAA,OACA9sB,EAAA+sB,UAAA,MACA/sB,EAAAgtB,cAAAN,EACA1sB,EAAA+D,MAAA,IAGA/D,EAAA/T,KAAA,WACA+T,EAAA+D,OAAA,IAAAA,GAAA,KAEA3W,EAAAwY,YAAA5F,GAEA,UAEAgnB,EAAA,SAAAnS,EAAAnR,GACArY,KAAA,GAAAA,KAAAwpB,OACAA,EAAA+C,SAAA,EACAvsB,KAAA0O,GAAAnL,EAAAq+B,OACApY,EAAAgE,UAAAxtB,KAAA0O,GACA1O,KAAAyb,EAAA,EACAzb,KAAAuf,EAAA,EACAvf,KAAAM,SACAN,KAAA+O,MAAAsJ,EACArY,KAAA4P,OAAArM,EAAAqM,SACA5P,KAAAwP,GACAM,aACAiV,GAAA,EACAC,GAAA,EACAH,GAAA,EACAC,GAAA,EACAjM,IAAA,EACAsV,MAAA,EACA3I,OAAA,IAEAnN,EAAA6L,SAAA7L,EAAA6L,OAAAlkB,MACAA,KAAAmO,KAAAkK,EAAA5K,IACA4K,EAAA5K,MAAA4K,EAAA5K,IAAAS,KAAAlO,MACAqY,EAAA5K,IAAAzN,KACAA,KAAAkO,KAAA,MAEAmc,EAAA9mB,EAAAkL,EAEAktB,GAAA54B,UAAAsnB,EACAA,EAAAvlB,YAAA62B,EACAtR,EAAAva,UAAA,SAAA6U,GACA,SAAAA,EACA,MAAA3kB,MAAAwP,EAAAM,SAEA,IAEA+xB,GAFAC,EAAA9hC,KAAA+O,MAAAgzB,cACAC,EAAAF,EAAA,KAAAA,EAAAvc,MAAAuc,EAAAvc,OAAA,SAAAuc,EAAAjd,GAAAid,EAAAhd,IAAApS,CAEAovB,KACAD,EAAAld,EAAAzU,EAAAyU,GAAAvL,QAAA,gBAAkDpZ,KAAAwP,EAAAM,WAAA4C,IAElDnP,EAAAmhB,kBAAA1kB,KAAAgiC,EAAArd,EACA,IAGAxU,GAHAP,EAAA5P,KAAA4P,OAAAjL,QACAs9B,EAAAjiC,KAAAiiC,KACAlgC,EAAA/B,KAAAwpB,KAEA0Y,GAAAhyB,EAAAlQ,KAAAM,MAAAqU,MAAA4H,QAAA,KACA4lB,GAAAjyB,EAAAlQ,KAAAM,MAAAqU,MAAA4H,QAAA,OAEA,IADA3M,EAAA0V,UAAA,KACA6c,GAAAD,GAAA,SAAAliC,KAAAY,KAIA,GAHAqhC,EAAAryB,OAAA,UACAqyB,EAAAje,OAAA,MACA7T,EAAAP,EAAAO,QACA+xB,GAAA/xB,EAAAkX,aAAAlX,EAAAgX,SAAA,CACAplB,EAAAkW,MAAA8kB,OAAAntB,EAAAiX,UACA,IAAAhH,GAAA7f,KAAA+P,UACAqyB,EAAApiC,KAAA+P,QAAA,GACA8U,EAAAhF,EAAA1Z,EAAAi8B,EAAAj8B,EACA2e,EAAAjF,EAAAzZ,EAAAg8B,EAAAh8B,CACArE,GAAA29B,YAAA7a,GAAA8Z,EAAAhzB,EAAAmZ,GAAA6Z,EACAQ,EAAAn/B,KAAA,IAAA6kB,EAAAC,EAAA,OAEA/iB,GAAAkW,MAAA8kB,OAAArqB,EACAysB,EAAAn/B,KAAAmQ,EAAA4W,OAAA5W,EAAA8W,OAAA9W,EAAA0U,GAAA1U,EAAA2U,GAAA3U,EAAA4Q,YAGAhf,GAAAkW,MAAA8kB,OAAArqB,EACAuvB,EAAAryB,OAAAM,EAAAN,GACAqyB,EAAAje,OAAApU,EAAAoU,QAMA,OAJA,QAAA6d,IACA7hC,KAAAwP,EAAAM,UAAA+xB,EACAt+B,EAAAmhB,kBAAA1kB,KAAA6hC,IAEA7hC,MAEAqqB,EAAAtJ,OAAA,SAAAlI,EAAAtM,EAAAK,GACA,GAAA5M,KAAAkuB,QACA,MAAAluB,KAEA,UAAA6Y,EAAA,CAUA,GAPAA,EAAA3I,EAAA2I,GAAA1I,MAAAC,GACAyI,EAAArU,OAAA,IACA+H,EAAAe,EAAAuL,EAAA,IACAjM,EAAAU,EAAAuL,EAAA,KAEAA,EAAAvL,EAAAuL,EAAA,IACA,MAAAjM,IAAAL,EAAAK,GACA,MAAAL,GAAA,MAAAK,EAAA,CACA,GAAAyK,GAAArX,KAAA+P,QAAA,EACAxD,GAAA8K,EAAAlR,EAAAkR,EAAAzL,MAAA,EACAgB,EAAAyK,EAAAjR,EAAAiR,EAAAxL,OAAA,EAIA,MAFA7L,MAAAwP,EAAAgW,OAAA,EACAxlB,KAAA8P,UAAA9P,KAAAwP,EAAAM,UAAAjG,SAAA,IAAAgP,EAAAtM,EAAAK,MACA5M,OAEAqqB,EAAA/E,UAAA,SAAAT,EAAAC,GACA,MAAA9kB,MAAAkuB,QACAluB,MAEA6kB,EAAA3U,EAAA2U,GAAA1U,MAAAC,GACAyU,EAAArgB,OAAA,IACAsgB,EAAAxX,EAAAuX,EAAA,KAEAA,EAAAvX,EAAAuX,EAAA,OACAC,MAAA,EACA9kB,KAAAwP,EAAA6H,OACArX,KAAAwP,EAAA6H,KAAAlR,GAAA0e,EACA7kB,KAAAwP,EAAA6H,KAAAjR,GAAA0e,GAEA9kB,KAAA8P,UAAA9P,KAAAwP,EAAAM,UAAAjG,SAAA,IAAAgb,EAAAC,MACA9kB,OAEAqqB,EAAA9E,MAAA,SAAAR,EAAAC,EAAAzY,EAAAK,GACA,GAAA5M,KAAAkuB,QACA,MAAAluB,KAaA,IAXA+kB,EAAA7U,EAAA6U,GAAA5U,MAAAC,GACA2U,EAAAvgB,OAAA,IACAwgB,EAAA1X,EAAAyX,EAAA,IACAxY,EAAAe,EAAAyX,EAAA,IACAnY,EAAAU,EAAAyX,EAAA,IACAyR,MAAAjqB,OAAA,MACAiqB,MAAA5pB,OAAA,OAEAmY,EAAAzX,EAAAyX,EAAA,IACA,MAAAC,MAAAD,GACA,MAAAnY,IAAAL,EAAAK,GACA,MAAAL,GAAA,MAAAK,EACA,GAAAyK,GAAArX,KAAA+P,QAAA,EAOA,OALAxD,GAAA,MAAAA,EAAA8K,EAAAlR,EAAAkR,EAAAzL,MAAA,EAAAW,EACAK,EAAA,MAAAA,EAAAyK,EAAAjR,EAAAiR,EAAAxL,OAAA,EAAAe,EAEA5M,KAAA8P,UAAA9P,KAAAwP,EAAAM,UAAAjG,SAAA,IAAAkb,EAAAC,EAAAzY,EAAAK,MACA5M,KAAAwP,EAAAgW,OAAA,EACAxlB,MAEAqqB,EAAAwR,KAAA,WAEA,OADA77B,KAAAkuB,UAAAluB,KAAAwpB,KAAAvR,MAAAqC,QAAA,QACAta,MAEAqqB,EAAAyR,KAAA,WAEA,OADA97B,KAAAkuB,UAAAluB,KAAAwpB,KAAAvR,MAAAqC,QAAA5H,GACA1S,MAGAqqB,EAAAgY,WAAA9+B,EAAAkL,GAAAsB,QACAsa,EAAAta,QAAA,WACA,GAAAvE,GAAAxL,KAAAqiC,YACA,IAAAriC,KAAA+O,OAAA/O,KAAA+O,MAAAgzB,cACA,CACA,GAAAngC,MACAqE,EAAA,EAAAjG,KAAA+O,MAAAgzB,cAAAxc,KASA,OARA3jB,GAAAuE,EAAAqF,EAAArF,EAAAnG,KAAA+O,MAAAgzB,cAAAld,GACAjjB,EAAAuE,GAAAF,EACArE,EAAAwE,EAAAoF,EAAApF,EAAApG,KAAA+O,MAAAgzB,cAAAjd,GACAljB,EAAAwE,GAAAH,EACArE,EAAAgK,MAAAJ,EAAAI,MAAA3F,EACArE,EAAAiK,OAAAL,EAAAK,OAAA5F,EACArE,EAAAiF,GAAAjF,EAAAuE,EAAAvE,EAAAgK,MACAhK,EAAAkF,GAAAlF,EAAAwE,EAAAxE,EAAAiK,OACAjK,EAEA,MAAA4J,IAEA6e,EAAA/S,SAAA,WACA,MAAAtX,MAAAkuB,YAIA/nB,EAAAnG,KAAAyb,GAAAzb,KAAAohC,KAAA,GAAAphC,KAAAghC,EAAA,EACA56B,EAAApG,KAAAuf,EAAAvf,KAAA2b,EACA/P,MAAA5L,KAAAghC,EACAn1B,OAAA7L,KAAA2b,IAGA0O,EAAA0R,OAAA,WACA,IAAA/7B,KAAAkuB,SAAAluB,KAAAwpB,KAAAG,WAAA,CAGA3pB,KAAA+O,MAAA6c,SAAA5rB,KAAA+O,MAAA6c,QAAAoG,QAAAhyB,MACAuD,EAAAG,IAAA6mB,OAAA,eAAAvqB,KAAA0O,IACAnL,EAAA0gB,MAAAjkB,UAAA+O,OACA/O,KAAAwpB,KAAAG,WAAAvN,YAAApc,KAAAwpB,MACAxpB,KAAAwqB,OAAAxqB,KAAAwqB,MAAAb,WAAAvN,YAAApc,KAAAwqB,MACA,QAAAhpB,KAAAxB,MACAA,KAAAwB,GAAA,kBAAAxB,MAAAwB,GAAA+B,EAAA6b,gBAAA5d,GAAA,IAEAxB,MAAAkuB,SAAA,IAEA7D,EAAAhd,KAAA,SAAAlO,EAAAP,GACA,GAAAoB,KAAAkuB,QACA,MAAAluB,KAEA,UAAAb,EAAA,CACA,GAAA0F,KACA,QAAA0G,KAAAvL,MAAAM,MAAAN,KAAAM,MAAAyE,GAAAwG,KACA1G,EAAA0G,GAAAvL,KAAAM,MAAAiL,GAIA,OAFA1G,GAAAqQ,UAAA,QAAArQ,EAAA8P,OAAA9P,EAAA8P,KAAA9P,EAAAqQ,iBAAArQ,GAAAqQ,SACArQ,EAAAiL,UAAA9P,KAAAwP,EAAAM,UACAjL,EAEA,SAAAjG,GAAA2E,EAAAK,GAAAzE,EAAA,WACA,GAzmBA,QAymBAA,GAAA,QAAAa,KAAAM,MAAAqU,MAAA3U,KAAAM,MAAA4U,SACA,MAAAlV,MAAAM,MAAA4U,QAIA,QAFAmnB,GAAAl9B,EAAAgR,MAAAC,GACAsW,KACAllB,EAAA,EAAA0D,EAAAm3B,EAAA73B,OAA8ChD,EAAA0D,EAAQ1D,IACtDrC,EAAAk9B,EAAA76B,GACArC,IAAAa,MAAAM,MACAomB,EAAAvnB,GAAAa,KAAAM,MAAAnB,GACiBoE,EAAAK,GAAA5D,KAAA+O,MAAAC,iBAAA7P,GAAA,YACjBunB,EAAAvnB,GAAAa,KAAA+O,MAAAC,iBAAA7P,GAAAm9B,IAEA5V,EAAAvnB,GAAAoE,EAAA8Q,gBAAAlV,EAGA,OAAA+F,GAAA,EAAAwhB,IAAA2V,EAAA,IAEA,GAAAr8B,KAAAM,OAAA,MAAA1B,GAAA2E,EAAAK,GAAAzE,EAAA,UAEA,IADAunB,KACAllB,EAAA,EAAA0D,EAAA/F,EAAAqF,OAAyChD,EAAA0D,EAAQ1D,IACjDklB,EAAAvnB,EAAAqC,IAAAxB,KAAAqN,KAAAlO,EAAAqC,GAEA,OAAAklB,GAEA,GAAA3Y,EACA,OAAAnP,IACAmP,KACAA,EAAA5O,GAAAP,GAEA,MAAAA,GAAA2E,EAAAK,GAAAzE,EAAA,YAAA4O,EAAA5O,EACA,QAAAuD,KAAAqL,GACArK,EAAA,gBAAAhB,EAAA,IAAA1C,KAAA0O,GAAA1O,KAAA+N,EAAArL,GAEA,IAAAqL,EAAA,CACA,IAAArL,IAAA1C,MAAA+O,MAAAC,iBAAA,GAAAhP,KAAA+O,MAAAC,iBAAAjK,GAAArC,IAAAqL,EAAAhJ,GAAArC,IAAAa,EAAAK,GAAA5D,KAAA+O,MAAAC,iBAAAtM,GAAA,aACA,GAAAqhB,GAAA/jB,KAAA+O,MAAAC,iBAAAtM,GAAAc,MAAAxD,QAAA6J,OAAAkE,EAAArL,IACA1C,MAAAM,MAAAoC,GAAAqL,EAAArL,EACA,QAAA65B,KAAAxY,KAAAhf,GAAAw3B,KACAxuB,EAAAwuB,GAAAxY,EAAAwY,IAIAxuB,EAAA6D,MAAA,QAAA5R,KAAAY,OACAZ,KAAAkgC,SAAAvM,OAAA5lB,EAAA6D,MAEAooB,EAAAh6B,KAAA+N,GAGA,MAAA/N,OAEAqqB,EAAAmS,QAAA,WAGA,OAFAx8B,KAAAkuB,SAAAluB,KAAAwpB,KAAAG,WAAApP,YAAAva,KAAAwpB,MACAxpB,KAAA+O,OAAA/O,KAAA+O,MAAAtB,KAAAzN,MAAAuD,EAAA6gB,SAAApkB,UAAA+O,OACA/O,MAEAqqB,EAAAoS,OAAA,WACA,MAAAz8B,MAAAkuB,QACAluB,MAEAA,KAAAwpB,KAAAG,WAAA3R,YAAAhY,KAAAwpB,OACAxpB,KAAAwpB,KAAAG,WAAAG,aAAA9pB,KAAAwpB,KAAAxpB,KAAAwpB,KAAAG,WAAA3R,YACAzU,EAAA8gB,QAAArkB,UAAA+O,QAEA/O,OAEAqqB,EAAA6H,YAAA,SAAAvkB,GACA,MAAA3N,MAAAkuB,QACAluB,MAEA2N,EAAA7I,aAAAvB,EAAAyxB,GAAAlwB,cACA6I,MAAAnJ,OAAA,IAEAmJ,EAAA6b,KAAAC,YACA9b,EAAA6b,KAAAG,WAAAG,aAAA9pB,KAAAwpB,KAAA7b,EAAA6b,KAAAC,aAEA9b,EAAA6b,KAAAG,WAAApP,YAAAva,KAAAwpB,MAEAjmB,EAAA+gB,aAAAtkB,KAAA2N,EAAA3N,KAAA+O,OACA/O,OAEAqqB,EAAAP,aAAA,SAAAnc,GACA,MAAA3N,MAAAkuB,QACAluB,MAEA2N,EAAA7I,aAAAvB,EAAAyxB,GAAAlwB,cACA6I,IAAA,IAEAA,EAAA6b,KAAAG,WAAAG,aAAA9pB,KAAAwpB,KAAA7b,EAAA6b,MACAjmB,EAAAihB,cAAAxkB,KAAA2N,EAAA3N,KAAA+O,OACA/O,OAEAqqB,EAAA7V,KAAA,SAAAof,GACA,GAAA1wB,GAAAlD,KAAAwpB,KAAA8Y,aACA79B,EAAAvB,EAAA65B,MAWA,OAVAt4B,KAAA2U,QAAAqlB,EAAA/rB,GACA,IAAAkhB,GACA5zB,KAAAM,MAAAkU,KAAAof,EACA1wB,EAAA65B,OAAAt4B,EAAAkH,EAvsBA,yDAusBAioB,GAAA,SACA1wB,EAAAq/B,OAAAh/B,EAAAsoB,OAAA,oBAAgD9X,GAAA6f,GAAA,QAEhD1wB,EAAA65B,OAAAt4B,EACAvB,EAAAq/B,OAAA,QACAviC,MAAAM,MAAAkU,MAEAxU,MAGAuD,EAAAS,QAAA0N,KAAA,SAAAyL,EAAA9E,GACA,GAAA5J,GAAA8xB,EAAA,QACA9xB,GAAAwJ,MAAAiE,QAAAwiB,EACAjwB,EAAA+wB,UAAAb,EAAAhzB,EAAAgzB,EACAlwB,EAAAixB,YAAArnB,EAAAqnB,WACA,IAAAz8B,GAAA,GAAA04B,GAAAltB,EAAA4J,GACAhL,GAAoBsH,KAAA,OAAAc,OAAA,OACpB0H,KAAA9P,EAAAqE,KAAAyL,GACAla,EAAArC,KAAA,OACAqC,EAAAyO,QACAzO,EAAAu/B,KAAA9vB,EACAsnB,EAAA/2B,EAAAoK,GACAgL,EAAA8T,QAAA9T,EAAA8T,OAAA5R,YAAA9L,EACA,IAAAwzB,GAAA1B,EAAA,OAKA,OAJA0B,GAAAn+B,IAAA,EACA2K,EAAA8L,YAAA0nB,GACAh/B,EAAAg/B,OACAh/B,EAAA6M,UAAA4C,GACAzP,GAEAM,EAAAS,QAAAyN,KAAA,SAAA4G,EAAAlS,EAAAC,EAAA4Q,EAAAC,EAAA/U,GACA,GAAAwP,GAAAnO,EAAAwT,UAAA5Q,EAAAC,EAAA4Q,EAAAC,EAAA/U,GACA2C,EAAAwT,EAAA3G,QACAnG,EAAA1G,EAAAvE,KAQA,OAPAuE,GAAA4W,EAAAlQ,EAAApF,IACAtB,EAAA0a,EAAAhU,EAAAnF,IACAvB,EAAAm8B,EAAAz1B,EAAAK,MAAAoL,EACAnS,EAAA8W,EAAApQ,EAAAM,OAAAoL,EACA1L,EAAArJ,IACAqJ,EAAAmG,OACA7M,EAAAjE,KAAA,OACAiE,GAEAtB,EAAAS,QAAA2N,QAAA,SAAA0G,EAAAlS,EAAAC,EAAAkP,EAAAC,GACA,GAAA1Q,GAAAwT,EAAA3G,MACA7M,GAAAvE,KAYA,OAXAuE,GAAA4W,EAAAtV,EAAAmP,EACAzQ,EAAA0a,EAAAnZ,EAAAmP,EACA1Q,EAAAm8B,EAAA,EAAA1rB,EACAzQ,EAAA8W,EAAA,EAAApG,EACA1Q,EAAAjE,KAAA,UACAo5B,EAAAn1B,GACA0H,GAAApG,EACAyG,GAAAxG,EACAkP,KACAC,OAEA1Q,GAEAtB,EAAAS,QAAAwN,OAAA,SAAA6G,EAAAlS,EAAAC,EAAAlE,GACA,GAAA2C,GAAAwT,EAAA3G,MACA7M,GAAAvE,KAUA,OATAuE,GAAA4W,EAAAtV,EAAAjE,EACA2C,EAAA0a,EAAAnZ,EAAAlE,EACA2C,EAAAm8B,EAAAn8B,EAAA8W,EAAA,EAAAzZ,EACA2C,EAAAjE,KAAA,SACAo5B,EAAAn1B,GACA0H,GAAApG,EACAyG,GAAAxG,EACAlE,MAEA2C,GAEAtB,EAAAS,QAAA6N,MAAA,SAAAwG,EAAA7C,EAAArP,EAAAC,EAAA4Q,EAAAC,GACA,GAAAvF,GAAAnO,EAAAwT,UAAA5Q,EAAAC,EAAA4Q,EAAAC,GACApS,EAAAwT,EAAA3G,QAAArE,MAAuCoI,OAAA,SACvClK,EAAA1G,EAAAvE,MACAkpB,EAAA3kB,EAAA2kB,KACA7U,EAAA6U,EAAAgP,qBAxxBA,QAwxBA,EAgBA,OAfAjtB,GAAAiK,MACA3Q,EAAA4W,EAAAlQ,EAAApF,IACAtB,EAAA0a,EAAAhU,EAAAnF,IACAvB,EAAAm8B,EAAAz1B,EAAAK,MAAAoL,EACAnS,EAAA8W,EAAApQ,EAAAM,OAAAoL,EACA1L,EAAAmG,OACA7M,EAAAjE,KAAA,QACA+T,EAAAgV,YAAAH,KAAApN,YAAAzH,GACAA,EAAAoM,QAAA,EACApM,EAAAa,MACAb,EAAA/T,KAAA,OACAiE,EAAA2K,EAAA4vB,SAAAj5B,EAAAC,GACAvB,EAAA2K,EAAAmwB,UAAA3oB,EAAAC,GACAuS,EAAAjP,YAAA5F,GACAwqB,EAAAt6B,EAAA,WACAA,GAEAtB,EAAAS,QAAA4N,KAAA,SAAAyG,EAAAlS,EAAAC,EAAAwL,GACA,GAAAnD,GAAA8xB,EAAA,SACA7uB,EAAA6uB,EAAA,QACAx+B,EAAAw+B,EAAA,WACAp6B,MAAA,EACAC,KAAA,EACAwL,KAAA,GACAF,EAAA4J,EAAA/X,EAAAsoB,OAAA,mBAA2C9X,EAAA5N,EAAAw4B,GAAA5qB,EAAA3N,EAAAu4B,GAAA5qB,EAAA5N,EAAAw4B,GAAA,GAC3CjtB,EAAA+wB,YAAA,EACA1gC,EAAA4xB,OAAAzjB,EAAA0B,GACA7P,EAAA+B,IAAA,EACA2K,EAAAwJ,MAAAiE,QAAAwiB,EACAjwB,EAAA+wB,UAAAb,EAAAhzB,EAAAgzB,EACAlwB,EAAAixB,YAAA,KACA,IAAAz8B,GAAA,GAAA04B,GAAAltB,EAAA4J,GACAhL,GACAsH,KAAA,OACAc,OAAA,OACAZ,KAAAtR,EAAA8Q,gBAAAQ,KACAjD,OAEA3O,GAAAunB,MAAA/b,EACAxL,EAAAyO,OACAzO,EAAAi9B,SAAAn+B,EACAkB,EAAArC,KAAA,OACAqC,EAAA3C,MAAAsR,KAAA1B,EAAA0B,GACA3O,EAAA3C,MAAA6F,IACAlD,EAAA3C,MAAA8F,IACAnD,EAAA3C,MAAA0W,EAAA,EACA/T,EAAA3C,MAAA2W,EAAA,EACA+iB,EAAA/2B,EAAAoK,GACAoB,EAAA8L,YAAAxY,GACA0M,EAAA8L,YAAA7I,GACA2G,EAAA8T,OAAA5R,YAAA9L,EACA,IAAAwzB,GAAA1B,EAAA,OAKA,OAJA0B,GAAAn+B,IAAA,EACA2K,EAAA8L,YAAA0nB,GACAh/B,EAAAg/B,OACAh/B,EAAA6M,UAAA4C,GACAzP,GAEAM,EAAAS,QAAAooB,QAAA,SAAAxgB,EAAAC,GACA,GAAA62B,GAAA1iC,KAAAmsB,OAAAlU,KAWA,OAVAjY,MAAA4L,QACA5L,KAAA6L,SACAD,WAAA,MACAC,WAAA,MACA62B,EAAA92B,QACA82B,EAAA72B,SACA62B,EAAAjI,KAAA,UAAA7uB,EAAA,IAAAC,EAAA,MACA7L,KAAAk9B,UACA35B,EAAAS,QAAAqoB,WAAA7oB,MAAAxD,UAAAk9B,UAEAl9B,MAEAuD,EAAAS,QAAAqoB,WAAA,SAAAlmB,EAAAC,EAAA4Q,EAAAC,EAAAqV,GACA/oB,EAAAG,IAAA,qBAAA1D,UAAAk9B,UAAA/2B,EAAAC,EAAA4Q,EAAAC,EAAAqV,GACA,IAGA3Q,GAAAqlB,EAHAlD,EAAA99B,KAAAksB,UACAtgB,EAAAkyB,EAAAlyB,MACAC,EAAAiyB,EAAAjyB,MAqBA,OAnBAygB,KACA3Q,EAAA9P,EAAAoL,EACA+pB,EAAAp1B,EAAAoL,EACAA,EAAA2E,EAAA/P,IACAzF,IAAAyF,EAAAoL,EAAA2E,GAAA,EAAAA,GAEA1E,EAAA+pB,EAAAn1B,IACAzF,IAAAyF,EAAAoL,EAAA+pB,GAAA,EAAAA,IAGAhhC,KAAAk9B,UAAA/2B,EAAAC,EAAA4Q,EAAAC,IAAAqV,GACAtsB,KAAA+hC,eACAld,IAAA1e,EACA2e,IAAA1e,EACAmf,MAAAuY,GAEA99B,KAAA0tB,QAAA,SAAAjf,GACAA,EAAAqB,UAAA,SAEA9P,KAEA,IAAAugC,EACAh9B,GAAAS,QAAAwV,QAAA,SAAAvH,GACA,GAAAF,GAAAE,EAAAD,QACAD,GAAA4wB,YAAAn+B,OAAA,GACAuN,EAAA6wB,mBAAAC,QAAA,sCAIA9wB,EAAA4wB,YAAA,GAAAE,QAAA,qCAEA,MACA9wB,EAAA+wB,WAAAC,MAAAhxB,EAAA+wB,WAAA3+B,IAAA,wCACAo8B,EAAA,SAAAta,GACA,MAAAlU,GAAA+F,cAAA,SAAAmO,EAAA,mBAEa,MAAAxa,GACb80B,EAAA,SAAAta,GACA,MAAAlU,GAAA+F,cAAA,IAAAmO,EAAA,2DAIA1iB,EAAAS,QAAAwV,QAAAjW,EAAAmU,GAAAzF,KACA1O,EAAAS,QAAAvB,OAAA,WACA,GAAA06B,GAAA55B,EAAAuiB,cAAAtiB,MAAA,EAAAe,WACAwhB,EAAAoX,EAAApX,UACAla,EAAAsxB,EAAAtxB,OAEAD,EAAAuxB,EAAAvxB,MACAzF,EAAAg3B,EAAAh3B,EACAC,EAAA+2B,EAAA/2B,CACA,KAAA2f,EACA,SAAAqX,OAAA,2BAEA,IAAAv4B,GAAA,GAAAtB,GAAA+U,OACA1W,EAAAiD,EAAAsnB,OAAA5oB,EAAAmU,GAAA3F,IAAA+F,cAAA,OACA4qB,EAAA9gC,EAAAqW,KA4BA,OA3BA9R,MAAA,EACAC,KAAA,EACAwF,KAAA,IACAC,KAAA,IACAhH,EAAA+G,QACA/G,EAAAgH,SACAD,WAAA,MACAC,WAAA,MACAhH,EAAA26B,UAAAb,MAAAhzB,EAAAgzB,MACA95B,EAAA66B,YAAA,MACA76B,EAAAi8B,KAAAv9B,EAAAmU,GAAA3F,IAAA+F,cAAA,QACAjT,EAAAi8B,KAAA7oB,MAAAiE,QAAA,+EACAta,EAAA2Y,YAAA1V,EAAAi8B,MACA4B,EAAAxmB,QAAA3Y,EAAAsoB,OAAA,kHAA+HjgB,EAAAC,GAC/H,GAAAka,GACAxiB,EAAAmU,GAAA3F,IAAAkI,KAAAM,YAAA3Y,GACA8gC,EAAAliC,KAAA2F,EAAA,KACAu8B,EAAAj1B,IAAArH,EAAA,KACAs8B,EAAA9C,SAAA,YAEA7Z,EAAA/N,WACA+N,EAAA+D,aAAAloB,EAAAmkB,EAAA/N,YAEA+N,EAAAxL,YAAA3Y,GAGAiD,EAAA+4B,UAAA,aACA/4B,GAEAtB,EAAAR,UAAA2uB,MAAA,WACAnuB,EAAAG,IAAA,gBAAA1D,MACAA,KAAAmsB,OAAApU,UAAArF,EACA1S,KAAA8gC,KAAAv9B,EAAAmU,GAAA3F,IAAA+F,cAAA,QACA9X,KAAA8gC,KAAA7oB,MAAAiE,QAAA,8FACAlc,KAAAmsB,OAAA5R,YAAAva,KAAA8gC,MACA9gC,KAAAkkB,OAAAlkB,KAAAyN,IAAA,MAEAlK,EAAAR,UAAAg5B,OAAA,WACAx4B,EAAAG,IAAA,iBAAA1D,MACAA,KAAAmsB,OAAAxC,WAAAvN,YAAApc,KAAAmsB,OACA,QAAA3qB,KAAAxB,MACAA,KAAAwB,GAAA,kBAAAxB,MAAAwB,GAAA+B,EAAA6b,gBAAA5d,GAAA,IAEA,UAGA,IAAAgwB,GAAAjuB,EAAAyxB,EACA,QAAAvD,KAAApH,KAAAtlB,GAAA0sB,KAAAD,EAAAzsB,GAAA0sB,KACAD,EAAAC,GAAA,SAAApS,GACA,kBACA,GAAA7Z,GAAAjB,SACA,OAAAvE,MAAA0tB,QAAA,SAAAjf,GACAA,EAAA4Q,GAAA7b,MAAAiL,EAAAjJ,OAGSisB,MAERjuB,MAAAvC,EAAAmC,MACD/E,EAAA4C,QAAAoC,IAKA2/B;;;;AAKA,SAAA3kC,EAAA4C,EAAA1C,GAEA,GAAA6E,GAAAC,GAmBA,SAAA4/B,GACA,GASAC,GACApyB,EATA/L,EAAA,iBACAqL,EAAA,SACA+yB,EAAA,UAGAC,EAAA,SAAA73B,EAAAC,GACA,MAAAD,GAAAC,GAIAmH,GAAkB/P,MAClBygC,EAAA,WACA,OAAA7hC,GAAA,EAAA0D,EAAAlF,KAAAwE,OAA6ChD,EAAA0D,EAAQ1D,IACrD,YAAAxB,KAAAwB,GACA,MAAAxB,MAAAwB,IAIA8hC,EAAA,WAEA,IADA,GAAA9hC,GAAAxB,KAAAwE,SACAhD,GACA,YAAAxB,KAAAwB,GACA,MAAAxB,MAAAwB,IAIA+hC,EAAA7kC,OAAAqE,UAAAyQ,SACAtD,EAAA5Q,OACAmZ,EAAApU,MAAAoU,SAAA,SAAA+qB,GACA,MAAAA,aAAAn/B,QAAA,kBAAAk/B,EAAA7hC,KAAA8hC,IAgBA9/B,EAAA,SAAAvE,EAAAkG,GACA,GAMA5D,GALAgiC,EAAA3yB,EACA1M,EAAAC,MAAAtB,UAAAuB,MAAA5C,KAAA6C,UAAA,GACAm/B,EAAAhgC,EAAAggC,UAAAvkC,GACA8G,EAAA,EAGA09B,KACAC,KACAld,KACAmd,EAAAX,CAEAxc,GAAA2c,eACA3c,EAAA4c,cACAJ,EAAA/jC,EACA2R,EAAA,CACA,QAAAtP,GAAA,EAAA0D,EAAAw+B,EAAAl/B,OAAkDhD,EAAA0D,EAAQ1D,IAAA,UAAAkiC,GAAAliC,KAC1DmiC,EAAAx+B,KAAAu+B,EAAAliC,GAAAsiC,QACAJ,EAAAliC,GAAAsiC,OAAA,IACAF,EAAAF,EAAAliC,GAAAsiC,QAAAJ,EAAAliC,IAIA,KADAmiC,EAAAp2B,KAAA61B,GACAO,EAAA19B,GAAA,GAGA,GAFAxE,EAAAmiC,EAAAD,EAAA19B,MACAygB,EAAAvhB,KAAA1D,EAAA+B,MAAA6B,EAAAjB,IACA0M,EAEA,MADAA,GAAA2yB,EACA/c,CAGA,KAAAllB,EAAA,EAAuBA,EAAA0D,EAAQ1D,IAE/B,cADAC,EAAAiiC,EAAAliC,IAEA,GAAAC,EAAAqiC,QAAAH,EAAA19B,GAAA,CAEA,GADAygB,EAAAvhB,KAAA1D,EAAA+B,MAAA6B,EAAAjB,IACA0M,EACA,KAEA,IAIA,GAHA7K,IACAxE,EAAAmiC,EAAAD,EAAA19B,IACAxE,GAAAilB,EAAAvhB,KAAA1D,EAAA+B,MAAA6B,EAAAjB,IACA0M,EACA,YAEyBrP,OAEzBmiC,GAAAniC,EAAAqiC,QAAAriC,MAIA,IADAilB,EAAAvhB,KAAA1D,EAAA+B,MAAA6B,EAAAjB,IACA0M,EACA,KAMA,OAFAA,GAAA2yB,EACAP,EAAAW,EACAnd,EAGAhjB,GAAAqgC,QAAApxB,EAaAjP,EAAAggC,UAAA,SAAAvkC,GACA,GAEA8F,GACAssB,EACArmB,EACA1J,EACA0D,EACA4E,EACAiB,EACAi5B,EATA3H,EAAA5jB,EAAAtZ,OAAAgR,MAAAC,GACA3E,EAAAkH,EASAsxB,GAAAx4B,GACAib,IACA,KAAAllB,EAAA,EAAA0D,EAAAm3B,EAAA73B,OAAsChD,EAAA0D,EAAQ1D,IAAA,CAE9C,IADAwiC,KACAl6B,EAAA,EAAAiB,EAAAk5B,EAAAz/B,OAAuCsF,EAAAiB,EAAQjB,IAI/C,IAHA2B,EAAAw4B,EAAAn6B,GAAAlH,EACA2uB,GAAA9lB,EAAA4wB,EAAA76B,IAAAiK,EAvIA,MAwIAP,EAAA,EACAA,MACAjG,EAAAssB,EAAArmB,MAEA84B,EAAA7+B,KAAAF,GACAyhB,IAAA7c,OAAA5E,EAAAR,OAIAw/B,GAAAD,EAEA,MAAAtd,IAYAhjB,EAAA0M,UAAA,SAAA8zB,GACAA,GACAA,EAAAh0B,EAAAg0B,GAAA9qB,QAAA,0BACA8qB,EAAA,IAAAA,EAAA,IACA9zB,EAAA,GAAAkjB,QAAA4Q,IAEA9zB,EAAA,UA4BA1M,EAAAI,GAAA,SAAA3E,EAAAsF,GACA,qBAAAA,GACA,mBAGA,QADA43B,GAAA5jB,EAAAtZ,GAAAsZ,EAAAtZ,EAAA,IAAAA,MAAA+Q,EAAA/Q,GAAAgR,MAAAgzB,GACA3hC,EAAA,EAAA0D,EAAAm3B,EAAA73B,OAA0ChD,EAAA0D,EAAQ1D,KAClD,SAAArC,GAIA,OADAglC,GAFA9H,EAAA5jB,EAAAtZ,KAAA+Q,EAAA/Q,GAAAgR,MAAAC,GACA3E,EAAAkH,EAEAnR,EAAA,EAAA0D,EAAAm3B,EAAA73B,OAAkDhD,EAAA0D,EAAQ1D,IAC1DiK,IAAA7I,EACA6I,IAAAzI,eAAAq5B,EAAA76B,KAAAiK,EAAA4wB,EAAA76B,MAAAiK,EAAA4wB,EAAA76B,KAAqFoB,MAGrF,KADA6I,EAAAhH,EAAAgH,EAAAhH,MACAjD,EAAA,EAAA0D,EAAAuG,EAAAhH,EAAAD,OAA4ChD,EAAA0D,EAAQ1D,IAAA,GAAAiK,EAAAhH,EAAAjD,IAAAiD,EAAA,CACpD0/B,GAAA,CACA,QAEAA,GAAA14B,EAAAhH,EAAAU,KAAAV,IACa43B,EAAA76B,GAEb,iBAAAsiC,IACAA,QACAr/B,EAAAq/B,aAoBApgC,EAAAe,EAAA,SAAAskB,GACA,GAAAzoB,MAAAgE,MAAA5C,KAAA6C,UAAA,EACA,mBACAb,EAAAF,MAAA,MAAAulB,EAAA,MAAAlf,OAAAvJ,GAAAuJ,UAAAvF,MAAA5C,KAAA6C,UAAA,OASAb,EAAAoN,KAAA,WACAA,EAAA,GAgBApN,EAAA0gC,GAAA,SAAAC,GACA,GAAAC,GAAA7rB,EAAAyqB,KAAAz9B,KAAA,KAAAy9B,CACA,OAAAmB,GACA,GAAA/Q,QAAA,gBAAA+Q,EAAA,iBAAA7Q,KAAA8Q,GAEAA,GAWA5gC,EAAA6gC,IAAA,WACA,MAAA9rB,GAAAyqB,OAAA/yB,MAAAC,IAoBA1M,EAAA8gC,IAAA9gC,EAAA6mB,OAAA,SAAAprB,EAAAsF,GACA,IAAAtF,EAEA,YADAuE,EAAAqgC,QAAApxB,GAAoC/P,MAGpC,IAAAy5B,GAAA5jB,EAAAtZ,GAAAsZ,EAAAtZ,EAAA,IAAAA,MAAA+Q,EAAA/Q,GAAAgR,MAAAgzB,EACA,IAAA9G,EAAA73B,OAAA,EACA,OAAAhD,GAAA,EAAA0D,EAAAm3B,EAAA73B,OAA8ChD,EAAA0D,EAAQ1D,IACtDkC,EAAA8gC,IAAAnI,EAAA76B,GAAAiD,OAFA,CAMA43B,EAAA5jB,EAAAtZ,KAAA+Q,EAAA/Q,GAAAgR,MAAAC,EACA,IAAA3E,GACA/I,EACAuB,EACAzC,EAAA0D,EAAA4E,EAAAiB,EACAu5B,GAAA3xB,EACA,KAAAnR,EAAA,EAAA0D,EAAAm3B,EAAA73B,OAAsChD,EAAA0D,EAAQ1D,IAC9C,IAAAsI,EAAA,EAAuBA,EAAAw6B,EAAA9/B,OAAgBsF,GAAA7F,EAAAO,OAAA,GAGvC,GAFAP,GAAA6F,EAAA,GACA2B,EAAA64B,EAAAx6B,GAAAlH,EApUA,KAqUAy5B,EAAA76B,GACAiK,EAAA4wB,EAAA76B,KACAyC,EAAAkB,KAAAsG,EAAA4wB,EAAA76B,SAGA,KAAAkB,IAAA+I,KAAA1G,GAAArC,IACAuB,EAAAkB,KAAAsG,EAAA/I,GAGA4hC,GAAArgC,OAAAT,MAAA8gC,EAAArgC,GAGA,IAAAzC,EAAA,EAAA0D,EAAAo/B,EAAA9/B,OAAoChD,EAAA0D,EAAQ1D,IAE5C,IADAiK,EAAA64B,EAAA9iC,GACAiK,EAAA7I,GAAA,CACA,GAAA6B,EAAA,CACA,GAAAgH,EAAAhH,EAAA,CACA,IAAAqF,EAAA,EAAAiB,EAAAU,EAAAhH,EAAAD,OAAoDsF,EAAAiB,EAAQjB,IAAA,GAAA2B,EAAAhH,EAAAqF,IAAArF,EAAA,CAC5DgH,EAAAhH,EAAAR,OAAA6F,EAAA,EACA,QAEA2B,EAAAhH,EAAAD,cAAAiH,GAAAhH,EAEA,IAAA/B,IAAA+I,GAAA7I,EAAA,GAAA6I,EAAA7I,EAAAmC,GAAArC,IAAA+I,EAAA7I,EAAAF,GAAA+B,EAAA,CACA,GAAAggC,GAAAh5B,EAAA7I,EAAAF,GAAA+B,CACA,KAAAqF,EAAA,EAAAiB,EAAA05B,EAAAjgC,OAAsDsF,EAAAiB,EAAQjB,IAAA,GAAA26B,EAAA36B,IAAArF,EAAA,CAC9DggC,EAAAxgC,OAAA6F,EAAA,EACA,QAEA26B,EAAAjgC,cAAAiH,GAAA7I,EAAAF,GAAA+B,OAEiB,OACjBgH,GAAAhH,CACA,KAAA/B,IAAA+I,GAAA7I,EAAA6I,EAAA7I,EAAAmC,GAAArC,IAAA+I,EAAA7I,EAAAF,GAAA+B,SACAgH,GAAA7I,EAAAF,GAAA+B,EAGAgH,IAAA7I,KAqBAc,EAAAghC,KAAA,SAAAvlC,EAAAsF,GACA,GAAA0c,GAAA,WAEA,MADAzd,GAAA8gC,IAAArlC,EAAAgiB,GACA1c,EAAAjB,MAAAxD,KAAAuE,WAEA,OAAAb,GAAAI,GAAA3E,EAAAgiB,IAQAzd,EAAA2N,QAhZA,QAiZA3N,EAAA8P,SAAA,WACA,mCAEAnV,EAAA4C,QAAA5C,EAAA4C,QAAAyC,GAAAN,SACAE,MADAD,EAAA,WAAqJ,MAAAK,IAAcF,MAAAvC,EAAAmC,MACnK/E,EAAA4C,QAAAoC,aLgJMshC,IACA,SAAUtmC,EAAQ4C,EAAS1C,IAEL,SAASqmC,GAAS,GAAIxhC,GAA8BC,CMj4QhFD,UAK+4hDE,MAL/4hDD,EAAA,WAAiC,gBAAAhB,GAAmB,QAAAb,GAAAO,GAAc,GAAA0J,EAAA1J,GAAA,MAAA0J,GAAA1J,GAAAd,OAA4B,IAAAiB,GAAAuJ,EAAA1J,IAAYP,EAAAO,EAAAN,GAAA,EAAAR,WAAqB,OAAAoB,GAAAN,GAAAL,KAAAQ,EAAAjB,QAAAiB,IAAAjB,QAAAO,GAAAU,EAAAT,GAAA,EAAAS,EAAAjB,QAA2D,GAAAwK,KAAS,OAAAjK,GAAAG,EAAAU,EAAAb,EAAAI,EAAA6J,EAAAjK,IAAA,SAAAa,GAAmC,MAAAA,IAASb,EAAAK,EAAA,SAAAQ,EAAAoJ,EAAA1J,GAAqBP,EAAAO,EAAAM,EAAAoJ,IAAA/M,OAAAC,eAAA0D,EAAAoJ,GAAqCo5B,cAAA,EAAA7iC,YAAA,EAAAC,IAAAF,KAAsCP,EAAAoB,EAAA,SAAAP,GAAiB,GAAAoJ,GAAApJ,KAAAE,WAAA,WAAiC,MAAAF,GAAAyiC,SAAiB,WAAY,MAAAziC,GAAU,OAAAb,GAAAK,EAAA4J,EAAA,IAAAA,MAAsBjK,EAAAO,EAAA,SAAAM,EAAAb,GAAmB,MAAA9C,QAAAqE,UAAAC,eAAAtB,KAAAW,EAAAb,IAAiDA,EAAAyB,EAAA,SAAAzB,IAAA0B,EAAA,MAAwB,SAAAb,EAAAb,EAAAiK,GAAkB,YAAa,IAAA1J,IAAOgjC,SAAA,SAAA1iC,GAAqB,sBAAAA,GAAA2iC,KAAAC,MAAA5iC,MAAyC6iC,UAAA,SAAA7iC,GAAuB,sBAAAA,GAAA,SAAAA,KAAsC4R,MAAA,SAAA5R,GAAmB,sBAAAA,GAAA6R,SAAA7R,MAAyCA,GAAApB,QAAAc,GAAY,SAAAM,EAAAb,EAAAiK,GAAiB,YAAa/M,QAAAC,eAAA6C,EAAA,cAAsC5C,OAAA,GAAW,IAAAmD,GAAA0J,EAAA,GAAAvJ,EAAA,SAAAG,GAAyB,MAAAA,MAAAE,WAAAF,GAA0ByiC,QAAAziC,IAAWN,GAAAa,GAAO8L,IAAI9N,KAAAtB,OAAA6lC,UAAA,GAAwBznB,MAAO9c,MAAAtB,OAAA+E,OAAA8gC,UAAA,GAAgCC,WAAYxkC,MAAAtB,OAAA+E,MAAAghC,UAAAF,UAAA,GAAyCG,MAAO1kC,KAAAtB,OAAA6lC,UAAA,EAAAL,QAAA,OAAsCS,OAAQ3kC,MAAAtB,OAAA+E,OAAA8gC,UAAA,EAAAL,QAAA,WAAmD,kBAAiBU,QAAS5kC,MAAAtB,OAAA+E,OAAA8gC,UAAA,EAAAL,QAAA,WAAmD,kBAAiBW,eAAgB7kC,KAAAykC,SAAAF,UAAA,GAA0BO,MAAO9kC,MAAApB,QAAAF,QAAA6lC,UAAA,EAAAL,SAAA,GAA6Ca,WAAY/kC,KAAAtB,OAAA6lC,UAAA,GAAwBS,SAAUhlC,MAAApB,QAAAF,QAAA6lC,UAAA,GAAkCU,QAASjlC,MAAApB,QAAAF,QAAA6lC,UAAA,GAAkCW,YAAallC,MAAApB,QAAAF,QAAA6lC,UAAA,EAAAL,SAAA,GAA6CiB,MAAOnlC,MAAApB,QAAAF,QAAA6lC,UAAA,EAAAL,SAAA,GAA6CkB,eAAgBplC,KAAAtB,OAAA6lC,UAAA,EAAAL,QAAA,QAAuCmB,cAAerlC,MAAAslC,OAAA5mC,QAAA6lC,UAAA,EAAAL,QAAA,IAA4CqB,gBAAiBvlC,KAAAtB,OAAA6lC,UAAA,EAAAL,QAAA,cAA6CsB,gBAAiBxlC,KAAAtB,OAAA6lC,UAAA,EAAAL,QAAA,UAAyCtD,QAAS5gC,MAAAtB,OAAA+E,OAAA8gC,UAAA,GAAgCkB,WAAYzlC,KAAAykC,SAAAF,UAAA,GAA0BmB,YAAa1lC,MAAAtB,OAAA+E,MAAAghC,UAAAF,UAAA,GAAyCoB,SAAU3lC,KAAAtB,OAAA6lC,UAAA,GAAwBqB,WAAY5lC,MAAAslC,OAAA5mC,QAAA6lC,UAAA,GAAiCsB,WAAY7lC,MAAAslC,OAAA5mC,QAAA6lC,UAAA,GAAiCuB,iBAAkB9lC,MAAAtB,OAAA+E,OAAA8gC,UAAA,GAAgCwB,mBAAoB/lC,MAAAtB,OAAA+E,OAAA8gC,UAAA,GAAgCvlB,MAAOhf,KAAAtB,OAAA6lC,UAAA,GAAwBzlB,MAAO9e,KAAAtB,OAAA6lC,UAAA,GAAwByB,QAAShmC,MAAApB,QAAAF,QAAA6lC,UAAA,EAAAL,SAAA,GAA6C+B,WAAYjmC,MAAApB,QAAAF,QAAA6lC,UAAA,EAAAL,SAAA,GAA6CgC,WAAYlmC,KAAAtB,OAAA6lC,UAAA,GAAwB4B,UAAWnmC,KAAAtB,OAAA6lC,UAAA,GAAwB6B,YAAapmC,KAAAykC,SAAAF,UAAA,GAA0B8B,cAAermC,KAAAykC,SAAAF,UAAA,GAA0B+B,cAAetmC,KAAAykC,SAAAF,UAAA,GAA0BgC,aAAcvmC,KAAAtB,OAAA6lC,UAAA,GAAwBiC,OAAQxmC,MAAAtB,OAAA+E,OAAA8gC,UAAA,GAAgCkC,iBAAkBzmC,MAAAslC,OAAA5mC,QAAA6lC,UAAA,GAAiCmC,gBAAiB1mC,MAAAtB,OAAA+E,OAAA8gC,UAAA,GAAgCxyB,QAAS/R,MAAAtB,OAAA+E,OAAA8gC,UAAA,GAAgCoC,kBAAmB3mC,KAAAtB,OAAA6lC,UAAA,GAAwBqC,iBAAkB5mC,MAAAtB,OAAA+E,OAAA8gC,UAAA,GAAgCnO,aAAcp2B,KAAAtB,OAAA6lC,UAAA,GAAwBsC,gBAAiB7mC,MAAApB,QAAAF,QAAA6lC,UAAA,EAAAL,SAAA,IAA8C5hC,GAAIwL,GAAA9L,EAAA8L,GAAAgP,KAAA9a,EAAA8a,KAAA0nB,UAAAxiC,EAAAwiC,UAAAE,KAAA1iC,EAAA0iC,KAAAC,MAAA3iC,EAAA2iC,MAAAC,OAAA5iC,EAAA4iC,OAAAyB,aAAArkC,EAAAqkC,aAAAC,aAAAtkC,EAAAskC,aAAAC,YAAAvkC,EAAAukC,YAAA1B,cAAA7iC,EAAA6iC,cAAAM,KAAAnjC,EAAAmjC,KAAAD,WAAAljC,EAAAkjC,WAAAJ,KAAA9iC,EAAA8iC,KAAAC,UAAA/iC,EAAA+iC,UAAAC,QAAAhjC,EAAAgjC,QAAAC,OAAAjjC,EAAAijC,OAAAjmB,KAAAhd,EAAAgd,KAAAF,KAAA9c,EAAA8c,KAAAsmB,cAAApjC,EAAAojC,cAAAC,aAAArjC,EAAAqjC,aAAAE,eAAAvjC,EAAAujC,eAAAC,eAAAxjC,EAAAwjC,gBAA8b76B,GAAImD,GAAA9L,EAAA8L,GAAAgP,KAAA9a,EAAA8a,KAAA8jB,OAAA5+B,EAAA4+B,OAAA6E,UAAAzjC,EAAAyjC,UAAAR,OAAAjjC,EAAAijC,QAA0E5uB,GAAIvI,GAAA9L,EAAA8L,GAAAgP,KAAA9a,EAAA8a,KAAAmoB,OAAAjjC,EAAAijC,OAAAS,WAAA1jC,EAAA0jC,WAAAhB,KAAA1iC,EAAA0iC,KAAAC,MAAA3iC,EAAA2iC,MAAAC,OAAA5iC,EAAA4iC,OAAAe,QAAA3jC,EAAA2jC,QAAAR,KAAAnjC,EAAAmjC,KAAAC,cAAApjC,EAAAojC,cAAAC,aAAArjC,EAAAqjC,aAAAE,eAAAvjC,EAAAujC,eAAAC,eAAAxjC,EAAAwjC,eAAAI,UAAA5jC,EAAA4jC,UAAAC,UAAA7jC,EAAA6jC,UAAAC,gBAAA9jC,EAAA8jC,gBAAAC,kBAAA/jC,EAAA+jC,kBAAA/mB,KAAAhd,EAAAgd,KAAAF,KAAA9c,EAAA8c,KAAAknB,OAAAhkC,EAAAgkC,OAAAjB,UAAA/iC,EAAA+iC,UAAAkB,UAAAjkC,EAAAikC,UAAAC,UAAAlkC,EAAAkkC,UAAAC,SAAAnkC,EAAAmkC,SAAAC,WAAApkC,EAAAokC,WAAAC,aAAArkC,EAAAqkC,aAAAC,aAAAtkC,EAAAskC,aAAAC,YAAAvkC,EAAAukC,YAAAC,MAAAxkC,EAAAwkC,MAAAC,gBAAAzkC,EAAAykC,gBAAAC,eAAA1kC,EAAA0kC,eAAA30B,OAAA/P,EAAA+P,OAAA40B,iBAAA3kC,EAAA2kC,iBAAAC,gBAAA5kC,EAAA4kC,gBAAAxQ,YAAAp0B,EAAAo0B,YAAAyO,cAAA7iC,EAAA6iC,eAAwzBhkC,GAAIgmC,eAAA7kC,EAAA6kC,eAAiC,QAAAxkC,KAAAgU,KAAAjU,eAAAC,KAAAxB,EAAAwB,GAAAgU,EAAAhU,GAAgD,IAAAykC,IAAOC,UAAA,SAAAtlC,EAAAb,GAAwBxB,KAAAqC,KAAAb,EAAAa,GAAArC,KAAAqC,KAAwBulC,kBAAA,SAAAvlC,EAAAb,GAAiCxB,KAAAqC,KAAAb,EAAAa,GAAAH,EAAA4iC,QAAAC,SAAA/kC,KAAAqC,MAA8Cb,GAAAsjC,SAAW+C,KAAKzoC,MAAA8D,EAAA4kC,QAAAJ,GAAkBK,OAAQ3oC,MAAAmM,EAAAu8B,QAAAJ,GAAkBM,MAAO5oC,MAAA6X,EAAA6wB,QAAAJ,GAAkBO,MAAO7oC,MAAAqC,EAAAqmC,QAAAJ,KAAoB,SAAArlC,EAAAb;;;;;CAK9gJ,WAAY,GAAAa,GAAAb,EAAAiK,EAAA1J,EAAAG,KAAAoC,MAAA1B,EAAA,SAAAP,EAAAb,GAAuC,kBAAkB,MAAAa,GAAAmB,MAAAhC,EAAA+C,aAA6BrB,KAAKF,eAAAuI,EAAA,SAAAlJ,EAAAb,GAAgC,QAAAiK,KAAazL,KAAA8E,YAAAzC,EAAmB,OAAAN,KAAAP,GAAA0B,EAAAxB,KAAAF,EAAAO,KAAAM,EAAAN,GAAAP,EAAAO,GAAwC,OAAA0J,GAAA1I,UAAAvB,EAAAuB,UAAAV,EAAAU,UAAA,GAAA0I,GAAApJ,EAAA6lC,UAAA1mC,EAAAuB,UAAAV,GAA2E4U,KAAAsF,SAAA,SAAAla,GAA2B,OAAAb,GAAA,EAAAiK,EAAAzL,KAAAwE,OAA0BhD,EAAAiK,EAAIjK,IAAA,GAAAA,IAAAxB,YAAAwB,KAAAa,EAAA,MAAAb,EAAuC,UAAUA,GAAAJ,OAAA+mC,UAAkB9lC,EAAAuiC,EAAApjC,EAAA4mC,aAAA,WAAoC,QAAA/lC,MAAc,MAAAA,GAAAU,UAAAe,GAAA,SAAAzB,EAAAb,GAAoC,aAAAxB,KAAAqoC,WAAAroC,KAAAqoC,aAA6C,MAAAroC,KAAAqoC,SAAAhmC,KAAArC,KAAAqoC,SAAAhmC,OAAArC,KAAAqoC,SAAAhmC,GAAA8C,KAAA3D,GAAAxB,MAA8EqC,EAAAU,UAAAulC,KAAA,WAA6B,GAAAjmC,GAAAb,EAAAiK,EAAA1J,EAAAa,EAAAM,EAAAqI,CAAkB,IAAAE,EAAAlH,UAAA,GAAAlC,EAAA,GAAAkC,UAAAC,OAAAtC,EAAAR,KAAA6C,UAAA,YAAAvE,KAAAqoC,UAAA,MAAAroC,KAAAqoC,SAAA58B,GAAA,CAA4G,IAAAvI,EAAAlD,KAAAqoC,SAAA58B,GAAAF,KAAAxJ,EAAA,EAAAa,EAAAM,EAAAsB,OAA2CzC,EAAAa,EAAIb,IAAAP,EAAA0B,EAAAnB,GAAAwJ,EAAApG,KAAA3D,EAAAgC,MAAA,KAAAnB,GAAmC,OAAAkJ,KAAUlJ,KAAGb,EAAA+mC,OAAA,SAAAlmC,GAAwB,GAAAb,GAAAiK,EAAA1J,EAAAG,CAAY,cAAAG,GAAAN,EAAAM,EAAA,SAAAb,EAAA0R,KAAAjL,IAAA5F,GAAAoJ,EAAAyH,KAAA6d,MAAAvvB,GAAAmH,QAAA,GAAA5G,GAAA0J,EAAA2N,QAAA,wBAA+F,KAAAlX,EAAAV,EAAAgS,WAAAtR,EAAAsC,OAAAiH,EAAAjH,SAAAzC,GAAAG,EAAAoC,MAAAmH,EAAAjH,SAAAzC,GAAA,KAAiFP,EAAAgnC,KAAA,SAAAnmC,GAAoB,OAAAA,EAAA,WAAAA,GAAsBb,EAAAinC,KAAA,SAAAh9B,GAAoB,QAAA1J,GAAAP,GAAcxB,KAAA0oC,UAAA9lC,EAAA5C,KAAA0oC,UAAA1oC,WAAA2oC,cAAA/lC,EAAA5C,KAAA2oC,cAAA3oC,KAAoF,IAAAyL,GAAAzL,IAAW,oBAAAwB,GAAAmM,QAAA3N,KAAAyO,GAAApM,EAAA2P,SAAAgU,eAAAxkB,EAAAmM,UAAA3N,KAAAyO,GAAApM,EAAAb,EAAAmM,SAAA,MAAA3N,KAAAyO,IAAA,IAAAzO,KAAAyO,GAAAjK,OAAA,SAAA44B,OAAA,oCAAwL,YAAAp9B,KAAAyO,GAAA8uB,IAAA,aAAAv9B,KAAAyO,GAAA8uB,IAAA,uBAAAv9B,KAAA4oC,QAAAvmC,EAAAwmC,UAA+F7oC,KAAA8oC,aAAA9oC,KAAA+oC,aAAoCvnC,GAAA,gBAAAxB,MAAA4oC,QAAAI,QAAAhpC,KAAA4oC,QAAA9B,UAAAtlC,EAAAwnC,OAAAhpC,KAAAusB,QAAA,GAAAna,SAAApS,KAAAyO,GAAA,IAAAzO,KAAAipC,aAAA,KAAAjpC,KAAAkpC,cAAA,KAAAlpC,KAAAmuB,OAAA,EAAAnuB,KAAAmpC,WAAA,KAAAnpC,KAAA0wB,MAAA1wB,KAAA0wB,OAAA1wB,KAAAopC,QAAAppC,KAAA4oC,QAAAlrB,MAAA1d,KAAAyO,GAAA9L,KAAA,qBAAAN,GAA6R,GAAAb,GAAAO,EAAAG,EAAAU,EAAAM,CAAc,OAAAnB,GAAA0J,EAAAgD,GAAAuV,SAAA9gB,EAAAb,EAAAgnC,MAAAtnC,EAAAvB,KAAAiL,EAAA09B,YAAA3nC,EAAAiK,EAAAiS,KAAAjS,EAAA69B,QAAAp2B,KAAAE,IAAAlQ,EAAAuI,EAAA09B,cAAAI,GAAArnC,EAAAuJ,EAAAiS,KAAAjS,EAAA69B,QAAAp2B,KAAAC,IAAAjQ,EAAAuI,EAAA09B,cAAAI,GAAA3mC,EAAAV,EAAAV,EAAAiK,EAAA+9B,cAAAn8B,MAAoLlH,EAAA3E,EAAAoK,MAAAhJ,KAAY6I,EAAA68B,KAAA,YAAAplC,EAAAb,EAAAonC,MAAA1nC,EAAA0L,OAAuCzN,KAAAyO,GAAA9L,KAAA,sBAAAN,GAAwC,MAAAoJ,GAAA09B,aAAA19B,EAAA+9B,cAAA3N,OAAApwB,EAAA09B,WAAA,MAAA19B,EAAA68B,KAAA,cAAmFtoC,KAAAyO,GAAA9L,KAAA,yCAAAN,GAA2D,GAAAb,GAAAO,CAAQ,OAAAA,GAAAM,EAAAslB,cAAAyB,QAAA,IAAA/mB,EAAAslB,cAAA+hB,eAAA,GAAAloC,EAAAiK,EAAAgD,GAAAuV,SAAAvY,EAAA68B,KAAA,YAAAvmC,EAAAsnC,MAAA7nC,EAAAhB,KAAAuB,EAAA0nC,MAAAjoC,EAAAiM,OAAwIzN,KAAAyO,GAAA9L,KAAA,iBAAAN,GAAmC,GAAAb,EAAM,OAAAA,GAAAiK,EAAAgD,GAAAuV,SAAAvY,EAAA68B,KAAA,YAAAjmC,EAAAgnC,MAAA7nC,EAAAhB,KAAA6B,EAAAonC,MAAAjoC,EAAAiM,OAAwEzN,KAAA4oC,QAAAe,cAAA3pC,KAAAwpC,cAAAxpC,KAAAusB,QAAA9a,KAAA,MAAAzR,KAAAyO,GAAAm7B,eAAAv8B,MAAqGsH,KAAA3U,KAAA4oC,QAAAiB,iBAAAp0B,QAAA,IAA6CgnB,SAAAZ,OAAA77B,KAAAyO,GAAA9L,KAAA,qBAAAN,GAAuD,GAAAb,EAAM,OAAAA,GAAAiK,EAAAgD,GAAAuV,SAAAvY,EAAAq+B,WAAAznC,EAAAgnC,MAAA7nC,EAAAhB,QAAoDR,KAAAyO,GAAA9L,KAAA,mBAAAN,GAAqC,GAAAb,EAAM,OAAAA,GAAAiK,EAAAgD,GAAAuV,SAAAvY,EAAAs+B,SAAA1nC,EAAAgnC,MAAA7nC,EAAAhB,MAAAiL,EAAA68B,KAAA,YAAAjmC,EAAAgnC,MAAA7nC,EAAAhB,KAAA6B,EAAAonC,MAAAjoC,EAAAiM,QAAmGzN,KAAA4oC,QAAA/C,QAAAxjC,EAAAjB,QAAAuB,KAAA,kBAAAN,GAA4D,aAAAoJ,EAAAu+B,WAAA5oC,OAAA6oC,aAAAx+B,EAAAu+B,WAAAv+B,EAAAu+B,UAAA5oC,OAAA8c,WAAAzS,EAAAk9B,cAAA,OAA8G3oC,KAAAyO,GAAA8uB,IAAA,+CAAAv9B,KAAAkqC,UAAAlqC,KAAAkqC,WAA4F,MAAA3+B,GAAAxJ,EAAA0J,GAAA1J,EAAAgB,UAAA+lC,cAAwC9B,WAAA,KAAAtB,MAAA,EAAAK,MAAA,EAAAoE,cAAA,OAAAC,gBAAA,GAAApE,cAAA,OAAAC,aAAA,GAAAE,eAAA,aAAAC,eAAA,SAAAT,WAAA,EAAAuB,aAAA,KAAAC,YAAA,EAAAkD,SAAA,EAAAC,QAAA,GAAAzD,WAAA,EAAAC,UAAA,GAAAC,SAAA,GAAAnnB,KAAA,OAAAF,KAAA,SAAA0nB,SAAAC,gBAAA,EAAAC,gBAAA,yCAAA30B,UAAA40B,iBAAA,EAAAC,iBAAA,yCAAAmC,YAAA,KAAAE,iBAAA,OAAAhE,QAAA,GAAkgB9jC,EAAAgB,UAAAqmC,QAAA,SAAA39B,EAAA1J,GAAmC,GAAAG,GAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,EAAA7lC,EAAAD,EAAA6C,EAAA2B,EAAAgJ,EAAAzN,EAAAwE,EAAAmV,EAAA9P,EAAAG,EAAAqL,EAAA6E,EAAA3Q,CAA8C,UAAAnJ,OAAA,GAAA/B,KAAA4oC,QAAAlrB,KAAAjS,EAAA,MAAAA,GAAA,IAAAA,EAAAjH,OAAA,MAAAxE,MAAA0d,QAAA1d,KAAAusB,QAAAmF,aAAA,MAAA1xB,KAAA2qB,OAAA3qB,KAAA2qB,MAAAkR,OAAgJ,IAAA11B,EAAAnG,KAAAuqC,WAAA,OAAAjvB,EAAAtb,KAAAuqC,WAAA,OAAAvqC,KAAA4oC,QAAAxB,MAAA5iC,OAAA,IAAAvB,EAAAiQ,KAAAE,IAAA5P,MAAA0P,KAAAlT,KAAA4oC,QAAAxB,OAAA3lC,EAAAyR,KAAAC,IAAA3P,MAAA0P,KAAAlT,KAAA4oC,QAAAxB,OAAA9rB,EAAA,MAAAA,EAAApI,KAAAE,IAAAkI,EAAArY,KAAAkD,EAAA,MAAAA,EAAA+M,KAAAC,IAAAhN,EAAA1E,MAAAzB,KAAA0d,KAAA,WAAiP,GAAArb,GAAAN,EAAAG,CAAU,KAAAA,KAAA+U,EAAA5U,EAAA,EAAAN,EAAA0J,EAAAjH,OAA0BnC,EAAAN,EAAIkV,IAAA5U,EAAAR,EAAA4J,EAAAwL,GAAAywB,GAAgBlyB,IAAA3T,GAAM6lC,EAAA8C,MAAA3oC,EAAA7B,KAAA4oC,QAAAtD,MAAAtlC,KAAA4oC,QAAA/B,WAAAa,EAAAvhC,EAAA3E,EAAAipC,UAAA/C,EAAA8C,OAAAxqC,KAAA4oC,QAAA5B,WAAAU,EAAA8C,MAAAxqC,KAAA4oC,QAAA5B,WAAAU,EAAAvhC,GAAA,gBAAAuhC,GAAA8C,QAAA9C,EAAA8C,MAAA,GAAA37B,MAAA64B,EAAA8C,OAAAh3B,cAAAk0B,EAAAvhC,EAAA8Q,EAAAjX,KAAA4oC,QAAA3B,eAAAS,EAAA8C,MAAAxqC,KAAA4oC,QAAA3B,aAAAS,KAAAthC,EAAA,EAAAshC,EAAAthC,EAAA,WAA2S,GAAA/D,GAAAb,EAAAiK,EAAA1J,CAAY,KAAA0J,EAAAzL,KAAA4oC,QAAArD,MAAAxjC,KAAAwJ,EAAAlJ,EAAA,EAAAb,EAAAiK,EAAAjH,OAA+CnC,EAAAb,EAAI+J,IAAAlJ,EAAAV,EAAA8J,EAAAF,GAAAC,EAAA3J,EAAAF,GAAA,gBAAA6J,OAAAwI,WAAAxI,IAAA,MAAAA,GAAA,gBAAAA,OAAA,YAAAA,GAAAxL,KAAA0oC,UAAAn9B,KAAAvL,KAAAuqC,WAAAnkC,GAAAoF,EAAA,MAAArF,KAAA+M,KAAAC,IAAA3H,EAAArF,GAAAmV,EAAApI,KAAAE,IAAA5H,EAAA8P,IAAAnV,EAAAmV,EAAA9P,GAAAxL,KAAAuqC,YAAA,MAAAnkC,IAAAD,EAAA+M,KAAAC,IAAA/M,EAAAD,GAAAmV,EAAApI,KAAAE,IAAAhN,EAAAkV,IAAAvZ,EAAAoD,KAAAqG,EAAyQ,OAAAzJ,IAASL,KAAA1B,MAAAkC,EAAAiD,KAAAuiC,EAAsB,OAAAxlC,IAASR,KAAA1B,WAAA4oC,QAAA/B,YAAA7mC,KAAA0d,KAAA1d,KAAA0d,KAAAnQ,KAAA,SAAAlL,EAAAb,GAA4E,OAAAa,EAAA8D,EAAA3E,EAAA2E,IAAA3E,EAAA2E,EAAA9D,EAAA8D,MAA0BnG,KAAAyf,KAAAzf,KAAA0d,KAAA,GAAAvX,EAAAnG,KAAA2f,KAAA3f,KAAA0d,KAAA1d,KAAA0d,KAAAlZ,OAAA,GAAA2B,EAAAnG,KAAA2S,UAAA3S,KAAA4oC,QAAAj2B,OAAAnO,OAAA,GAAmH,GAAAxE,KAAA4oC,QAAA/B,UAAA,IAAAhrB,EAAA7b,KAAA4oC,QAAAj2B,OAAAhH,EAAA,EAAAqL,EAAA6E,EAAArX,OAAmEmH,EAAAqL,EAAIrL,IAAAzJ,EAAA2Z,EAAAlQ,GAAAzJ,YAAAmC,QAAAnB,EAAAhB,EAAA,GAAAuC,EAAAvC,EAAA,GAAAlC,KAAA2S,OAAAxN,MAAA3D,EAAAipC,UAAAvnC,GAAA1B,EAAAipC,UAAAhmC,MAAAzE,KAAA2S,OAAAxN,KAAA3D,EAAAipC,UAAAvoC,QAAiIlC,MAAA2S,OAAA3S,KAAA4oC,QAAAj2B,MAAqC/P,GAAAP,EAAAi8B,IAAAt+B,KAAA2S,OAAA,SAAAtQ,GAAgC,MAAAA,KAASrC,KAAA2f,KAAAzM,KAAAC,IAAAnT,KAAA2f,KAAAzM,KAAAC,IAAA3P,MAAA0P,KAAAtQ,IAAA5C,KAAAyf,KAAAvM,KAAAE,IAAApT,KAAAyf,KAAAvM,KAAAE,IAAA5P,MAAA0P,KAAAtQ,IAA4G,MAAA5C,MAAAyf,OAAAzf,KAAA2f,OAAA3f,KAAAyf,MAAA,EAAAzf,KAAA2f,MAAA,GAAA3f,KAAA0f,KAAA1f,KAAA0qC,UAAA,MAAApvB,GAAAtb,KAAA4f,KAAA5f,KAAA0qC,UAAA,MAAAvkC,GAAAnG,KAAA0f,OAAA1f,KAAA4f,OAAAtE,IAAAtb,KAAA0f,MAAA,GAAA1f,KAAA4f,MAAA,SAAA1U,EAAAlL,KAAA4oC,QAAAlD,OAAA,SAAAx6B,GAAA,MAAAA,IAAA,IAAAlL,KAAA4oC,QAAA7C,OAAA/lC,KAAA4oC,QAAAhpB,OAAA5f,KAAA8oC,aAAAlpB,MAAA5f,KAAA4oC,QAAAlpB,OAAA1f,KAAA8oC,aAAAppB,MAAA1f,KAAA+lC,KAAA/lC,KAAA2qC,cAAA3qC,KAAA0f,KAAA1f,KAAA4f,KAAA5f,KAAA4oC,QAAAyB,UAAArqC,KAAA0f,KAAAxM,KAAAE,IAAApT,KAAA0f,KAAA1f,KAAA+lC,KAAA,IAAA/lC,KAAA4f,KAAA1M,KAAAC,IAAAnT,KAAA4f,KAAA5f,KAAA+lC,KAAA/lC,KAAA+lC,KAAAvhC,OAAA,MAAA5C,GAAA5B,KAAA4f,KAAA5f,KAAA0f,OAAA1f,KAAA4oC,QAAAyB,SAAA,GAAArqC,KAAA+lC,KAAA,WAAglB,GAAA1jC,GAAAb,EAAAiK,CAAU,KAAAA,KAAA2D,EAAA/M,EAAArC,KAAA0f,KAAAle,EAAAxB,KAAA4f,KAAmChe,EAAA,EAAAS,GAAAb,EAAAa,GAAAb,EAAc4N,EAAA/M,GAAAT,EAAA6J,EAAAtG,KAAAiK,EAAiB,OAAA3D,IAAS/J,KAAA1B,aAAAmuB,OAAA,EAAApsB,EAAA/B,KAAA4qC,aAAA,IAAmD7oC,EAAAgB,UAAA2nC,UAAA,SAAAroC,EAAAb,GAAqC,GAAAiK,GAAA1J,CAAQ,OAAA0J,GAAAzL,KAAA4oC,QAAA,IAAAvmC,GAAA,gBAAAoJ,GAAA,SAAAA,EAAAnH,MAAA,KAAAmH,EAAAjH,OAAA,GAAAzC,EAAAmS,SAAAzI,EAAAnH,MAAA,aAAA9C,EAAAO,EAAAmR,KAAA7Q,GAAAb,EAAAO,IAAA,MAAAP,IAAA,EAAA0S,SAAAzI,EAAA,IAAAA,GAAiK1J,EAAAgB,UAAA4nC,cAAA,SAAAtoC,EAAAb,EAAAiK,GAA2C,GAAA1J,GAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,CAAsB,OAAAn8B,GAAA/J,EAAAa,EAAAqlC,EAAAx0B,KAAA6d,MAAA7d,KAAA23B,IAAAt/B,GAAA2H,KAAA23B,IAAA,KAAAppC,EAAAyR,KAAAG,IAAA,GAAAq0B,GAAAxlC,EAAAgR,KAAA6d,MAAA1uB,EAAAZ,KAAAM,EAAAmR,KAAA43B,KAAAtpC,EAAAC,KAAAwV,GAAAlV,EAAAG,IAAAuJ,EAAA,OAAAhK,GAAAwV,EAAA,GAAA/D,KAAA43B,KAAA7zB,WAAA/D,KAAA43B,KAAA7zB,GAAAlV,EAAAG,EAAA+U,GAAAxL,EAAA,IAAAvJ,EAAA,GAAAH,EAAA,IAAAG,EAAAgR,KAAA6d,MAAA1uB,EAAA4U,KAAAlV,EAAAmR,KAAA43B,KAAAtpC,EAAAyV,QAAA,GAAA/T,EAAAgQ,KAAA6d,MAAA7d,KAAA23B,IAAA5zB,GAAA/D,KAAA23B,IAAA,KAAAjoC,EAAA,WAAiS,GAAAP,GAAAb,CAAQ,KAAAA,KAAAyB,EAAAZ,EAAAH,EAAe+U,EAAA,EAAA5U,GAAAN,EAAAM,GAAAN,EAAckB,EAAAZ,GAAA4U,EAAAzV,EAAA2D,KAAA6O,WAAA/Q,EAAA0F,QAAA,EAAAzF,IAA0C,OAAA1B,OAASoB,EAAA,WAAiB,GAAAP,GAAAb,CAAQ,KAAAA,KAAAyB,EAAAZ,EAAAH,EAAe+U,EAAA,EAAA5U,GAAAN,EAAAM,GAAAN,EAAckB,EAAAZ,GAAA4U,EAAAzV,EAAA2D,KAAAlC,EAAiB,OAAAzB,MAASoB,GAAKb,EAAAgB,UAAAgoC,MAAA,WAA8B,GAAA1oC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,CAAsB,IAAArU,EAAA5C,KAAAyO,GAAA7C,QAAA7J,EAAA/B,KAAAyO,GAAA5C,UAAA7L,KAAAipC,eAAArmC,GAAA5C,KAAAkpC,gBAAAnnC,GAAA/B,KAAAmuB,SAAAnuB,KAAAipC,aAAArmC,EAAA5C,KAAAkpC,cAAAnnC,EAAA/B,KAAAmuB,OAAA,EAAAnuB,KAAAQ,KAAAR,KAAA4oC,QAAA0B,QAAAtqC,KAAAihC,MAAAjhC,KAAAipC,aAAAjpC,KAAA4oC,QAAA0B,QAAAtqC,KAAAyN,IAAAzN,KAAA4oC,QAAA0B,QAAAtqC,KAAAkkB,OAAAlkB,KAAAkpC,cAAAlpC,KAAA4oC,QAAA0B,SAAA,KAAA/+B,EAAAvL,KAAA4oC,QAAAlD,OAAA,SAAAn6B,GAAA,MAAAA,IAAArI,EAAA,WAA+X,GAAAb,GAAAb,EAAAO,EAAAG,CAAY,KAAAH,EAAA/B,KAAA+lC,KAAA7jC,KAAAG,EAAA,EAAAb,EAAAO,EAAAyC,OAAoCnC,EAAAb,EAAIa,IAAAoJ,EAAA1J,EAAAM,GAAAH,EAAAiD,KAAAnF,KAAAgrC,YAAAhrC,KAAAirC,YAAAx/B,IAAAG,MAA+D,OAAA1J,IAASR,KAAA1B,WAAA4oC,QAAA9C,WAAA9lC,KAAAkkB,QAAAhR,KAAAC,IAAA3P,MAAA0P,KAAAhQ,GAAAlD,KAAAQ,MAAA0S,KAAAC,IAAA3P,MAAA0P,KAAAhQ,KAAA,KAAA+T,EAAAjX,KAAA4oC,QAAAlD,OAAA,SAAAzuB,GAAA,MAAAA,IAAA5U,EAAArC,KAAA4oC,QAAA9C,YAAA,IAAA9lC,KAAA4oC,QAAAzB,YAAA3lC,EAAA,WAAkO,GAAAA,GAAAiK,EAAA1J,CAAU,KAAAA,KAAAG,EAAAV,EAAA,EAAAiK,EAAAzL,KAAA0d,KAAAlZ,OAAkC,GAAAiH,EAAAjK,EAAAiK,EAAAjK,EAAAiK,EAAavJ,EAAA,GAAAuJ,IAAAjK,MAAAO,EAAAoD,KAAAnF,KAAAgrC,YAAAhrC,KAAA0d,KAAAxb,GAAAsoC,MAAAnoC,GAAAwJ,OAAqE,OAAA9J,IAASL,KAAA1B,WAAA4oC,QAAA9C,WAAA9lC,KAAAQ,MAAA0S,KAAAC,IAAA3P,MAAA0P,KAAA1R,GAAAxB,KAAAkkB,QAAAhR,KAAAC,IAAA3P,MAAA0P,KAAA1R,IAAAxB,KAAA4L,MAAAsH,KAAAC,IAAA,EAAAnT,KAAAihC,MAAAjhC,KAAAQ,MAAAR,KAAA6L,OAAAqH,KAAAC,IAAA,EAAAnT,KAAAkkB,OAAAlkB,KAAAyN,KAAAzN,KAAA4oC,QAAA9C,YAAA9lC,KAAA6kB,GAAA7kB,KAAA6L,QAAA7L,KAAA2f,KAAA3f,KAAAyf,MAAAzf,KAAA8kB,GAAA9kB,KAAA4L,OAAA5L,KAAA4f,KAAA5f,KAAA0f,MAAA1f,KAAAkrC,OAAAlrC,KAAAQ,KAAAR,KAAAmrC,KAAAnrC,KAAAihC,MAAAjhC,KAAAorC,OAAAprC,KAAAyN,IAAAzN,KAAAqrC,KAAArrC,KAAAkkB,OAAAlkB,KAAAsrC,MAAAtrC,KAAA6L,OAAA7L,KAAAurC,MAAAvrC,KAAA4L,QAAA5L,KAAA6kB,GAAA7kB,KAAA4L,OAAA5L,KAAA2f,KAAA3f,KAAAyf,MAAAzf,KAAA8kB,GAAA9kB,KAAA6L,QAAA7L,KAAA4f,KAAA5f,KAAA0f,MAAA1f,KAAAkrC,OAAAlrC,KAAAkkB,OAAAlkB,KAAAmrC,KAAAnrC,KAAAyN,IAAAzN,KAAAorC,OAAAprC,KAAAQ,KAAAR,KAAAqrC,KAAArrC,KAAAihC,MAAAjhC,KAAAsrC,MAAAtrC,KAAA4L,MAAA5L,KAAAurC,MAAAvrC,KAAA6L,QAAA7L,KAAAwrC,MAAA,MAAAxrC,MAAAwrC,QAA0qBzpC,EAAAgB,UAAA0oC,OAAA,SAAAppC,GAAgC,MAAArC,MAAA4oC,QAAA9C,WAAA9lC,KAAAQ,MAAA6B,EAAArC,KAAA0f,MAAA1f,KAAA8kB,GAAA9kB,KAAAkkB,QAAA7hB,EAAArC,KAAA0f,MAAA1f,KAAA8kB,IAAiG/iB,EAAAgB,UAAA2oC,OAAA,SAAArpC,GAAgC,WAAArC,KAAA0d,KAAAlZ,QAAAxE,KAAAorC,OAAAprC,KAAAqrC,MAAA,EAAArrC,KAAAorC,QAAA/oC,EAAArC,KAAAyf,MAAAzf,KAAA6kB,IAAwF9iB,EAAAgB,UAAA6nC,OAAA,WAA+B,GAAA5qC,KAAAusB,QAAAmF,QAAA1xB,KAAA+qC,QAAA/qC,KAAA2rC,WAAA3rC,KAAA4rC,YAAA5rC,KAAA6rC,aAAA7rC,KAAA8rC,KAAA,MAAA9rC,MAAA8rC,QAAqH/pC,EAAAgB,UAAAioC,YAAA,SAAA3oC,EAAAb,GAAuC,GAAAiK,GAAA1J,CAAQ,cAAAP,MAAA,GAAAO,EAAA/B,KAAAusB,QAAA3a,KAAA,QAAAvP,GAAAgL,KAAA,YAAArN,KAAA4oC,QAAA3C,cAAA54B,KAAA,cAAArN,KAAA4oC,QAAAzC,gBAAA94B,KAAA,cAAArN,KAAA4oC,QAAAxC,gBAAArlB,OAAAvf,GAAAiK,EAAA1J,EAAAgO,UAAAhO,EAAAg6B,SAAAtwB,GAAsO1J,EAAAgB,UAAAkoC,YAAA,SAAA5oC,GAAqC,MAAArC,MAAAknC,aAAA7kC,EAAA,IAA8BN,EAAAgB,UAAAmkC,aAAA,SAAA7kC,EAAAoJ,GAAwC,wBAAAzL,MAAA4oC,QAAA1B,aAAAlnC,KAAA4oC,QAAA1B,aAAA7kC,EAAAoJ,GAAA,GAAAzL,KAAA4oC,QAAA7B,SAAAvlC,EAAA+mC,OAAAlmC,GAAArC,KAAA4oC,QAAA9B,WAA8I/kC,EAAAgB,UAAAgpC,eAAA,WAAuC,MAAA/rC,MAAAQ,KAAAR,KAAA4oC,QAAA0B,QAAA,GAAwCvoC,EAAAgB,UAAA4oC,SAAA,WAAiC,GAAAtpC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,CAAsB,SAAAjX,KAAA4oC,QAAA7C,OAAA,KAAAnjC,EAAA5C,KAAA4oC,QAAAlD,OAAA,SAAA9iC,GAAA,MAAAA,EAAA,CAA4E,IAAAP,EAAArC,KAAA4oC,QAAA9C,WAAA9lC,KAAAgsC,iBAAAhsC,KAAA+rC,iBAAA7oC,EAAAlD,KAAA+lC,KAAA9uB,KAAAlV,EAAA,EAAAG,EAAAgB,EAAAsB,OAA0GzC,EAAAG,EAAIH,IAAAP,EAAA0B,EAAAnB,GAAA0J,EAAAzL,KAAAyrC,OAAAjqC,IAAA,KAAA+J,EAAAvL,KAAA4oC,QAAAlD,OAAA,SAAAn6B,GAAA,MAAAA,IAAAvL,KAAA4oC,QAAA9C,WAAA9lC,KAAAisC,eAAAxgC,EAAApJ,EAAArC,KAAAirC,YAAAzpC,IAAAxB,KAAAksC,eAAA7pC,EAAAoJ,EAAAzL,KAAAirC,YAAAzpC,KAAAxB,KAAA4oC,QAAA7C,MAAAt6B,EAAAyH,KAAA6d,MAAAtlB,GAAA,GAAAzL,KAAA4oC,QAAA9C,WAAA7uB,EAAA9R,KAAAnF,KAAAmsC,aAAA,IAAA1gC,EAAA,IAAAzL,KAAAorC,OAAA,IAAAprC,KAAAqrC,OAAAp0B,EAAA9R,KAAAnF,KAAAmsC,aAAA,IAAAnsC,KAAAorC,OAAA,IAAA3/B,EAAA,IAAAzL,KAAAqrC,QAAAp0B,EAAA9R,SAAA,GAA6Y,OAAA8R,KAAUlV,EAAAgB,UAAA6oC,UAAA,WAAkC,GAAAvpC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,CAAkB,KAAAN,EAAA5C,KAAA4oC,QAAAxB,MAAAlkC,KAAAuI,EAAA1J,EAAA,EAAAG,EAAAU,EAAA4B,OAA+CzC,EAAAG,EAAIuJ,IAAA1J,EAAAP,EAAAoB,EAAA6I,GAAApJ,EAAArC,KAAA4oC,QAAAtB,eAAA77B,EAAAzL,KAAA4oC,QAAAtB,eAAA9iC,QAAAtB,EAAAiC,KAAAnF,KAAAosC,SAAA5qC,EAAAa,GAA4G,OAAAa,IAASnB,EAAAgB,UAAA8oC,WAAA,WAAmC,GAAAxpC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,CAAkB,KAAAN,EAAA5C,KAAA2S,OAAAzP,KAAAuI,EAAA1J,EAAA,EAAAG,EAAAU,EAAA4B,OAAwCzC,EAAAG,EAAIuJ,IAAA1J,EAAAP,EAAAoB,EAAA6I,GAAApJ,EAAArC,KAAA4oC,QAAApB,gBAAA/7B,EAAAzL,KAAA4oC,QAAApB,gBAAAhjC,QAAAtB,EAAAiC,KAAAnF,KAAAqsC,UAAA7qC,EAAAa,GAA+G,OAAAa,IAASnB,EAAAgB,UAAAqpC,SAAA,SAAA/pC,EAAAb,GAAoC,GAAAiK,GAAA1J,CAAQ,OAAAA,GAAAmR,KAAA6d,MAAA/wB,KAAAyrC,OAAAppC,IAAA,GAAAoJ,EAAAzL,KAAA4oC,QAAA9C,WAAA,IAAA/jC,EAAA,IAAA/B,KAAAorC,OAAA,IAAAprC,KAAAqrC,KAAA,IAAArrC,KAAAorC,OAAA,IAAArpC,EAAA,IAAA/B,KAAAqrC,KAAArrC,KAAAusB,QAAA7a,KAAAjG,GAAA4B,KAAA,SAAA7L,GAAA6L,KAAA,eAAArN,KAAA4oC,QAAAvB,kBAAiOtlC,EAAAgB,UAAAspC,UAAA,SAAAhqC,EAAAb,GAAqC,GAAAiK,GAAA1J,EAAAG,EAAAU,CAAY,OAAAP,aAAAgC,QAAAoH,EAAApJ,EAAA,GAAAH,EAAAG,EAAA,GAAAoJ,EAAAyH,KAAA6d,MAAA/wB,KAAA0rC,OAAAjgC,IAAA,GAAAvJ,EAAAgR,KAAA6d,MAAA/wB,KAAA0rC,OAAAxpC,IAAA,GAAAlC,KAAA4oC,QAAA9C,WAAA9lC,KAAAusB,QAAA9a,KAAAzR,KAAAkrC,OAAAz/B,EAAAzL,KAAAmrC,KAAAnrC,KAAAkrC,OAAAhpC,EAAAuJ,GAAA4B,MAAkMsH,KAAAnT,EAAAiU,QAAA,IAAiBgnB,SAAAz8B,KAAAusB,QAAA9a,KAAAhG,EAAAzL,KAAAmrC,KAAAjpC,EAAAuJ,EAAAzL,KAAAkrC,OAAAlrC,KAAAmrC,MAAA99B,MAA0EsH,KAAAnT,EAAAiU,QAAA,IAAiBgnB,WAAA75B,EAAAsQ,KAAA6d,MAAA/wB,KAAA0rC,OAAArpC,IAAA,GAAAN,EAAA/B,KAAA4oC,QAAA9C,WAAA,IAAA9lC,KAAAkrC,OAAA,IAAAtoC,EAAA,IAAA5C,KAAAmrC,KAAA,IAAAvoC,EAAA,IAAA5C,KAAAkrC,OAAA,IAAAlrC,KAAAmrC,KAAAnrC,KAAAusB,QAAA7a,KAAA3P,GAAAsL,KAAA,SAAA7L,GAAA6L,KAAA,eAAArN,KAAA4oC,QAAArB,oBAAyOxlC,EAAAgB,UAAAmpC,eAAA,SAAA7pC,EAAAb,EAAAiK,GAA4C,MAAAzL,MAAAusB,QAAA3a,KAAAvP,EAAAb,EAAAiK,GAAA4B,KAAA,YAAArN,KAAA4oC,QAAA3C,cAAA54B,KAAA,cAAArN,KAAA4oC,QAAAzC,gBAAA94B,KAAA,cAAArN,KAAA4oC,QAAAxC,gBAAA/4B,KAAA,OAAArN,KAAA4oC,QAAA5C,eAAA34B,KAAA,sBAA8OtL,EAAAgB,UAAAopC,aAAA,SAAA9pC,GAAsC,MAAArC,MAAAusB,QAAA7a,KAAArP,GAAAgL,KAAA,SAAArN,KAAA4oC,QAAAuB,eAAA98B,KAAA,eAAArN,KAAA4oC,QAAAwB,kBAAwHroC,EAAAgB,UAAA+mC,WAAA,SAAAznC,GAAoC,MAAArC,MAAA2qB,MAAAkR,OAAA77B,KAAAmpC,WAAA9mC,EAAArC,KAAAwpC,cAAAn8B,MAAoElH,EAAA9D,EAAAuJ,MAAA,IAAYkwB,QAAS/5B,EAAAgB,UAAAgnC,SAAA,SAAA1nC,GAAkC,GAAAb,GAAAiK,CAAQ,IAAAzL,KAAAmpC,WAAA,MAAA19B,GAAAyH,KAAAE,IAAApT,KAAAmpC,WAAA9mC,GAAAb,EAAA0R,KAAAC,IAAAnT,KAAAmpC,WAAA9mC,GAAArC,KAAA4oC,QAAAe,YAAAjoC,KAAA1B,KAAAyO,IAA6HG,MAAA5O,KAAA0d,KAAA1d,KAAAspC,QAAA79B,IAAAtF,EAAA0Y,IAAA7e,KAAA0d,KAAA1d,KAAAspC,QAAA9nC,IAAA2E,IAAoEnG,KAAAmpC,WAAA,MAAuBpnC,EAAAgB,UAAA4lC,cAAA,WAAsC,MAAA3oC,MAAAgqC,UAAA,KAAAhqC,KAAAusB,QAAAH,QAAApsB,KAAAyO,GAAA7C,QAAA5L,KAAAyO,GAAA5C,UAAA7L,KAAA4qC,UAAgG7oC,EAAAgB,UAAA2lC,UAAA,SAAArmC,GAAmC,WAAArC,KAAA4oC,QAAA0D,QAAA,IAAAtsC,KAAA4oC,QAAA0D,MAAAjqC,IAA0DN,GAAGP,EAAA4mC,cAAA5mC,EAAAipC,UAAA,SAAApoC,GAAyC,GAAAb,GAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,CAA0B,uBAAArlC,MAAAoJ,EAAApJ,EAAAoO,MAAA,iBAAAvO,EAAAG,EAAAoO,MAAA,iBAAA7N,EAAAP,EAAAoO,MAAA,uBAAAlF,EAAAlJ,EAAAoO,MAAA,kBAAAwG,EAAA5U,EAAAoO,MAAA,+DAAAhP,EAAAY,EAAAoO,MAAA,6EAAAhF,EAAA,GAAAoD,MAAAqF,SAAAzI,EAAA,SAAAyI,SAAAzI,EAAA,YAAA8gC,UAAArqC,EAAA,GAAA2M,MAAAqF,SAAAhS,EAAA,OAAAgS,SAAAhS,EAAA,YAAAqqC,UAAA3pC,EAAA,GAAAiM,MAAAqF,SAAAtR,EAAA,OAAAsR,SAAAtR,EAAA,SAAAsR,SAAAtR,EAAA,QAAA2pC,UAAAhhC,GAAAtI,EAAA,GAAA4L,MAAAqF,SAAA3I,EAAA,gBAAAtI,EAAAupC,UAAAvpC,EAAAwpC,SAAA,OAAAxpC,EAAAupC,SAAA,MAAAvpC,EAAAspC,UAAA,OAAAr4B,SAAA3I,EAAA,QAAA0L,IAAA,IAAA/T,EAAA,QAAA+T,EAAA,KAAA/T,EAAA,GAAAgR,SAAA+C,EAAA,OAAA/C,SAAA+C,EAAA,aAAAA,EAAA,KAAA/T,EAAA,EAAAA,IAAA2L,KAAA69B,IAAAx4B,SAAA+C,EAAA,OAAA/C,SAAA+C,EAAA,SAAA/C,SAAA+C,EAAA,OAAA/C,SAAA+C,EAAA,OAAA/C,SAAA+C,EAAA,OAAA/T,IAAA,GAAA2L,MAAAqF,SAAA+C,EAAA,OAAA/C,SAAA+C,EAAA,SAAA/C,SAAA+C,EAAA,OAAA/C,SAAA+C,EAAA,OAAA/C,SAAA+C,EAAA,QAAAs1B,UAAA9qC,GAAAimC,EAAA1zB,WAAAvS,EAAA,IAAAD,EAAA0R,KAAA6d,MAAA2W,GAAA3lC,EAAAmR,KAAAa,MAAA,KAAA2zB,EAAAlmC,IAAAC,EAAA,IAAAyB,EAAA,QAAAzB,EAAA,KAAAyB,EAAA,GAAAgR,SAAAzS,EAAA,QAAAyS,SAAAzS,EAAA,cAAAA,EAAA,KAAAyB,EAAA,EAAAA,IAAA2L,KAAA69B,IAAAx4B,SAAAzS,EAAA,OAAAyS,SAAAzS,EAAA,SAAAyS,SAAAzS,EAAA,OAAAyS,SAAAzS,EAAA,OAAAyS,SAAAzS,EAAA,OAAAyB,EAAA1B,EAAAO,IAAA,GAAA8M,MAAAqF,SAAAzS,EAAA,OAAAyS,SAAAzS,EAAA,SAAAyS,SAAAzS,EAAA,OAAAyS,SAAAzS,EAAA,OAAAyS,SAAAzS,EAAA,OAAAD,EAAAO,GAAAwqC,WAAA,GAAA19B,MAAAqF,SAAA7R,EAAA,SAAAkqC,YAAw0C/qC,EAAAmrC,MAAA,WAAoB,QAAAlhC,MAAc,MAAAA,UAAczL,KAAA4oC,QAAAvmC,EAAAwmC,UAA0BrnC,EAAAmrC,MAAA5D,SAAAt9B,GAAAzL,KAAAyO,GAAApM,EAAA,eAAArC,KAAA4oC,QAAA1yB,MAAA,YAAAlW,KAAAyO,GAAAotB,OAAA77B,KAAA4oC,QAAAlf,OAAAkjB,OAAA5sC,KAAAyO,IAAgI,MAAAhD,GAAAs9B,UAAmB7yB,MAAA,qCAA0CzK,EAAA1I,UAAA8pC,OAAA,SAAAxqC,EAAAb,EAAAiK,EAAA1J,GAAsC,MAAAM,IAAArC,KAAA8sC,KAAAzqC,GAAArC,KAAA87B,OAAA97B,KAAA+sC,OAAAvrC,EAAAiK,EAAA1J,IAAA/B,KAAA67B,QAAmEpwB,EAAA1I,UAAA+pC,KAAA,SAAAzqC,GAA8B,MAAArC,MAAAyO,GAAAq+B,KAAAzqC,IAAuBoJ,EAAA1I,UAAAgqC,OAAA,SAAA1qC,EAAAb,EAAAiK,GAAoC,GAAA1J,GAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,CAAgB,OAAA1L,GAAAvL,KAAA4oC,QAAAlf,OAAAsjB,aAAA9pC,EAAAlD,KAAA4oC,QAAAlf,OAAAkgB,cAAA1nC,EAAAlC,KAAAyO,GAAAw+B,aAAAlrC,EAAA/B,KAAAyO,GAAAy+B,cAAAtqC,EAAAsQ,KAAAE,IAAAF,KAAAC,IAAA,EAAA9Q,EAAAH,EAAA,GAAAqJ,EAAArJ,GAAA,MAAAV,GAAA,IAAAiK,GAAAwL,EAAAzV,EAAAO,EAAA,OAAAkV,EAAA,IAAAA,EAAAzV,EAAAO,EAAA,QAAAkV,EAAAzV,EAAA,IAAAO,EAAAmB,IAAA+T,EAAA/T,EAAA,EAAAnB,EAAA,GAAAkV,EAAA/T,EAAA,EAAAnB,EAAA,EAAA/B,KAAAyO,GAAA8uB,KAAgQ/8B,KAAAoC,EAAA,KAAA6K,IAAAyG,SAAA+C,GAAA,QAAmCxL,EAAA1I,UAAA+4B,KAAA,WAA6B,MAAA97B,MAAAyO,GAAAqtB,QAAsBrwB,EAAA1I,UAAA84B,KAAA,WAA6B,MAAA77B,MAAAyO,GAAAotB,QAAsBpwB,KAAGjK,EAAA2rC,KAAA,SAAA1hC,GAAsB,QAAA1J,GAAAM,GAAc,GAAArC,KAAAotC,QAAAxqC,EAAA5C,KAAAotC,QAAAptC,WAAAqtC,WAAAzqC,EAAA5C,KAAAqtC,WAAArtC,WAAAstC,YAAA1qC,EAAA5C,KAAAstC,YAAAttC,WAAAutC,YAAA3qC,EAAA5C,KAAAutC,YAAAvtC,uBAAAwB,GAAA2rC,MAAA,UAAA3rC,GAAA2rC,KAAA9qC,EAAgNN,GAAAmmC,UAAApjC,YAAApD,KAAA1B,KAAAqC,GAAqC,MAAAkJ,GAAAxJ,EAAA0J,GAAA1J,EAAAgB,UAAA2tB,KAAA,WAA0C,cAAA1wB,KAAA4oC,QAAAjD,UAAA,MAAA3lC,MAAA2qB,MAAA,GAAAnpB,GAAAmrC,OAAoEjjB,OAAA1pB,KAAAyO,KAAezO,KAAA8D,GAAA,YAAA9D,KAAAstC,aAAAttC,KAAA8D,GAAA,WAAA9D,KAAAqtC,YAAArtC,KAAA8D,GAAA,YAAA9D,KAAAutC,cAAkHxrC,EAAAgB,UAAAgmC,UAAuBvC,UAAA,EAAAC,UAAA,EAAAH,YAAA,uEAAAkH,mBAAA,GAAA7G,mBAAA,WAAAD,mBAAAE,QAAA,EAAA0F,OAAA,EAAA/F,QAAA,OAAAU,aAAA,KAAAwG,aAAA,GAAA9H,WAAA,EAAA+H,WAAA,EAAAC,eAAA,EAAAC,iBAAA,gCAAiV7rC,EAAAgB,UAAAyoC,KAAA,WAA6B,MAAAxrC,MAAA6tC,aAAA7tC,KAAA8tC,iBAA8C/rC,EAAAgB,UAAA8qC,WAAA,WAAmC,GAAAxrC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,CAAgB,KAAAV,EAAAlC,KAAA0d,KAAA9a,KAAA6I,EAAA,EAAA1J,EAAAG,EAAAsC,OAAoCiH,EAAA1J,EAAI0J,IAAApJ,EAAAH,EAAAuJ,GAAApJ,EAAAknC,GAAAvpC,KAAA0rC,OAAArpC,EAAA8D,GAAA9D,EAAA0rC,GAAA,WAAiD,GAAAtiC,GAAA1J,EAAAG,EAAAU,CAAY,KAAAV,EAAAG,EAAA+D,EAAAxD,KAAA6I,EAAA,EAAA1J,EAAAG,EAAAsC,OAA8BiH,EAAA1J,EAAI0J,IAAAjK,EAAAU,EAAAuJ,GAAA,MAAAjK,EAAAoB,EAAAuC,KAAAnF,KAAAyrC,OAAAjqC,IAAAoB,EAAAuC,KAAA3D,EAAoD,OAAAoB,IAASlB,KAAA1B,MAAA4C,EAAAuC,KAAA9C,EAAA2rC,MAAA96B,KAAAE,IAAA5P,MAAA0P,MAAAlT,KAAAkkB,QAAAra,OAAA,WAA+E,GAAA4B,GAAA1J,EAAAG,EAAAU,CAAY,KAAAV,EAAAG,EAAA0rC,GAAAnrC,KAAA6I,EAAA,EAAA1J,EAAAG,EAAAsC,OAA+BiH,EAAA1J,EAAI0J,IAAA,OAAAjK,EAAAU,EAAAuJ,KAAA7I,EAAAuC,KAAA3D,EAA8B,OAAAoB,QAAe,OAAAA,IAASb,EAAAgB,UAAAumC,QAAA,SAAAjnC,GAAiC,GAAAb,GAAAiK,EAAA1J,EAAAG,EAAAU,CAAc,QAAA5C,KAAA0d,KAAAlZ,OAAA,WAAoC,KAAA5B,EAAA5C,KAAA0d,KAAApZ,MAAA,GAAA9C,EAAAO,EAAA,EAAAG,EAAAU,EAAA4B,OAA0CzC,EAAAG,IAAAuJ,EAAA7I,EAAApB,KAAAa,GAAAoJ,EAAA89B,GAAAvpC,KAAA0d,KAAAlc,GAAA+nC,IAAA,IAA4C/nC,IAAAO,GAAO,MAAAP,IAASO,EAAAgB,UAAAwqC,YAAA,SAAAlrC,EAAAb,GAAuC,GAAAiK,EAAM,OAAAA,GAAAzL,KAAAspC,QAAAjnC,GAAArC,KAAAsoC,KAAA,QAAA78B,EAAAzL,KAAA0d,KAAAjS,GAAA+J,IAAAnT,EAAAb,IAAmEO,EAAAgB,UAAAuqC,YAAA,SAAAjrC,EAAAb,GAAuC,GAAAiK,EAAM,OAAAA,GAAAzL,KAAAspC,QAAAjnC,GAAArC,KAAAiuC,mBAAAxiC,IAAoD1J,EAAAgB,UAAAsqC,WAAA,WAAmC,QAAArtC,KAAA4oC,QAAAjD,UAAA,MAAA3lC,MAAAiuC,mBAAA,OAAoElsC,EAAAgB,UAAAkrC,mBAAA,SAAA5rC,GAA4C,GAAAb,EAAM,cAAAa,IAAAb,EAAAxB,KAAA2qB,OAAAkiB,OAAArpC,MAAAhC,EAAAxB,KAAAkuC,mBAAA7rC,IAAArC,KAAAotC,QAAA/qC,KAAArC,KAAA2qB,MAAAkR,OAAA77B,KAAAotC,YAA8HrrC,EAAAgB,UAAAmrC,mBAAA,SAAA1sC,GAA4C,GAAAiK,GAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,CAAkB,KAAA/U,EAAAlC,KAAA0d,KAAAlc,GAAAiK,EAAApJ,EAAA,wCAAAuP,KAAA1P,EAAAsoC,OAAA/+B,IAAAonB,KAAA,aAAA5b,EAAA/U,EAAAkE,EAAArE,EAAAmB,EAAA,EAAAqI,EAAA0L,EAAAzS,OAA0HtB,EAAAqI,EAAIxJ,IAAAmB,EAAAN,EAAAqU,EAAAlV,IAAA,IAAA/B,KAAA4oC,QAAApD,OAAAzjC,KAAA0J,GAAA,iDAAAzL,KAAAmuC,SAAAjsC,EAAAH,EAAA,kBAAA/B,KAAA4oC,QAAApD,OAAAzjC,GAAA,QAAA/B,KAAAknC,aAAAtkC,EAAAb,GAAA,WAAqM,yBAAA/B,MAAA4oC,QAAAnD,gBAAAh6B,EAAAzL,KAAA4oC,QAAAnD,cAAAjkC,EAAAxB,KAAA4oC,QAAAn9B,EAAAvJ,EAAAsT,OAAA/J,EAAAvJ,EAAAqnC,GAAArnC,EAAA8rC,QAA6HjsC,EAAAgB,UAAA+qC,cAAA,WAAsC,GAAAzrC,GAAAoJ,EAAA1J,EAAAG,CAAY,OAAAlC,MAAAqd,MAAA,WAA6B,GAAAza,GAAAM,EAAAqI,EAAA9J,CAAY,KAAAA,KAAAgK,EAAA7I,EAAA,EAAAM,EAAAlD,KAAA4oC,QAAArD,MAAA/gC,OAA2C,GAAAtB,EAAAN,EAAAM,EAAAN,EAAAM,EAAauI,EAAA,GAAAvI,IAAAN,MAAAV,EAAA,iBAAAlC,MAAA4oC,QAAAhC,OAAA5mC,KAAA4oC,QAAAhC,QAAAr7B,EAAAvL,KAAA4oC,QAAArD,MAAA95B,GAAAwL,EAAAvV,KAAA1B,KAAA4oC,QAAAhC,OAAAr7B,IAAA,GAAAlJ,EAAA,WAAmJ,GAAAA,GAAAb,EAAAU,EAAAU,CAAY,KAAAV,EAAAlC,KAAA0d,KAAA9a,KAAAP,EAAA,EAAAb,EAAAU,EAAAsC,OAAoCnC,EAAAb,EAAIa,IAAAN,EAAAG,EAAAG,OAAA,KAAAN,EAAAgsC,GAAAtiC,IAAA7I,EAAAuC,MAAqCgB,EAAApE,EAAAwnC,GAAAnjC,EAAArE,EAAAgsC,GAAAtiC,IAAmB,OAAA7I,IAASlB,KAAA1B,MAAAqC,EAAAmC,OAAA,EAAA/C,EAAA0D,KAAA3D,EAAA2rC,KAAAiB,WAAA/rC,EAAAH,EAAAlC,KAAAkkB,SAAAziB,EAAA0D,KAAA,KAA+E,OAAA1D,IAASC,KAAA1B,OAAY+B,EAAAgB,UAAA+oC,KAAA,WAA6B,GAAAzpC,EAAM,UAAAA,EAAArC,KAAA4oC,QAAAlD,OAAA,SAAArjC,GAAA,MAAAA,GAAArC,KAAAquC,YAAAruC,KAAAsuC,cAAA,IAAAtuC,KAAA4oC,QAAAjD,UAAA,MAAA3lC,MAAAiuC,mBAAAjuC,KAAA0d,KAAAlZ,OAAA,IAAsKzC,EAAAgB,UAAAsrC,UAAA,WAAkC,GAAAhsC,GAAAoJ,EAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,EAAA1nC,IAA+B,KAAAuL,EAAAvL,KAAAkkB,OAAAlkB,KAAA4oC,QAAA0B,QAAA,EAAA1nC,EAAA,KAAAV,EAAA,KAAAG,EAAA,SAAAA,EAAAb,GAAuE,GAAAiK,GAAA1J,EAAAmB,EAAA+T,EAAAxV,CAAc,OAAAgK,GAAAi8B,EAAAuE,eAAAvE,EAAAgE,OAAAlqC,GAAA+J,EAAAlJ,GAAAZ,EAAAgK,EAAAsE,UAAAtE,EAAAqE,UAAA,KAAA43B,EAAAkB,QAAAzB,aAAAplC,EAAA0J,EAAAsE,UAAAtE,EAAAqE,UAAA,MAAA/N,EAAA8J,OAAA,aAAA67B,EAAAkB,QAAAzB,cAAAlwB,GAAA,GAAAxV,EAAAmK,MAAAsH,KAAA8N,IAAA0mB,EAAAkB,QAAAzB,YAAAj0B,KAAAI,GAAA,KAAA7H,EAAAqE,UAAA,IAAAmH,EAAA,UAAAlV,EAAA0J,EAAAsE,WAAA,MAAAnN,MAAAb,EAAAoE,EAAApE,EAAA6J,OAAA,MAAA1J,MAAAH,EAAAoE,IAAApE,EAAAoE,GAAA,GAAApE,EAAAoE,EAAApE,EAAA6J,MAAA87B,EAAAj5B,GAAA7C,SAAA,IAAA87B,EAAAkB,QAAAzB,cAAAjkC,EAAA,KAAAwkC,EAAAkB,QAAA3C,aAAA/yB,KAAA+N,IAAAymB,EAAAkB,QAAAzB,YAAAj0B,KAAAI,GAAA,KAAApR,EAAAH,EAAAoE,EAAAjD,GAAAN,EAAAb,EAAAoE,EAAAuhC,EAAAkB,QAAA6E,cAAAhiC,EAAAswB,UAAyfh6B,EAAA/B,KAAA4oC,QAAA/B,UAAA,IAAA7mC,KAAA0d,KAAAlZ,QAAA,SAAAxE,KAAA4oC,QAAArC,UAAAvmC,KAAA0d,KAAA,GAAA8sB,MAAAxqC,KAAA0d,KAAA,GAAAvX,IAAA3E,EAAA+sC,YAAAvuC,KAAAyf,KAAAzf,KAAA2f,KAAA3f,KAAA4L,MAAA5L,KAAA4oC,QAAArC,QAAAvmC,KAAA4oC,QAAA3B,cAAA,WAA4N,GAAA5kC,GAAAb,EAAAiK,EAAA1J,CAAY,KAAA0J,EAAAzL,KAAA0d,KAAA3b,KAAAM,EAAA,EAAAb,EAAAiK,EAAAjH,OAAoCnC,EAAAb,EAAIa,IAAAa,EAAAuI,EAAApJ,GAAAN,EAAAoD,MAAAjC,EAAAsnC,MAAAtnC,EAAAiD,GAAiC,OAAApE,IAASL,KAAA1B,MAAA+B,EAAAysC,UAAAvrC,KAAAgU,EAAA,EAAAxV,EAAAM,EAAAyC,OAA4CyS,EAAAxV,EAAIwV,IAAAxL,EAAA1J,EAAAkV,GAAAhU,EAAAkC,KAAA9C,EAAAoJ,EAAA,GAAAA,EAAA,IAAgC,OAAAxI,IAASlB,EAAAgB,UAAAurC,WAAA,WAAmC,GAAAjsC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,CAAgB,KAAA5C,KAAAyuC,gBAAApsC,EAAAb,EAAAO,EAAA/B,KAAA4oC,QAAArD,MAAA/gC,OAAA,EAA2DzC,GAAA,EAAAP,GAAA,EAAAA,GAAA,EAAea,EAAAN,GAAA,IAAAP,MAAAxB,KAAA0oC,UAAArmC,OAAA,IAAArC,KAAA4oC,QAAA8E,YAAA,IAAA1tC,KAAA4oC,QAAA8E,YAAA,IAAA1tC,KAAA4oC,QAAA8E,UAAArrC,KAAArC,KAAA0uC,eAAArsC,GAAArC,KAAA2uC,aAAAtsC,GAA4K,KAAAO,KAAAP,EAAAoJ,EAAAvJ,EAAAlC,KAAA4oC,QAAArD,MAAA/gC,OAAA,EAA2CtC,GAAA,EAAAuJ,GAAA,EAAAA,GAAA,EAAepJ,EAAAH,GAAA,IAAAuJ,MAAAzL,KAAA0oC,UAAArmC,GAAAO,EAAAuC,KAAAnF,KAAA4uC,cAAAvsC,IAAAO,EAAAuC,SAAA,GAA8E,OAAAvC,IAASb,EAAAgB,UAAA6rC,cAAA,SAAAvsC,GAAuC,GAAAb,GAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,CAAgB,KAAAlD,KAAAyuC,aAAApsC,MAAAO,EAAA5C,KAAA0d,KAAAxa,KAAAnB,EAAA,EAAAG,EAAAU,EAAA4B,OAA4DzC,EAAAG,EAAIH,IAAA0J,EAAA7I,EAAAb,GAAAP,EAAA,WAAAiK,EAAAsiC,GAAA1rC,KAAAb,EAAAxB,KAAA6uC,cAAApjC,EAAA89B,GAAA99B,EAAAsiC,GAAA1rC,GAAArC,KAAAmuC,SAAA1iC,EAAApJ,EAAA,SAAAA,IAAAa,EAAAiC,KAAAnF,KAAAyuC,aAAApsC,GAAA8C,KAAA3D,GAAwI,OAAA0B,IAASnB,EAAAgB,UAAA4rC,aAAA,SAAAtsC,GAAsC,GAAAb,EAAM,YAAAA,EAAAxB,KAAAqd,MAAAhb,IAAA,MAAArC,MAAA8uC,aAAAttC,EAAAxB,KAAAmuC,SAAA,KAAA9rC,EAAA,QAAAA,IAAuFN,EAAAgB,UAAA2rC,eAAA,SAAArsC,GAAwC,GAAAoJ,GAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,EAAA7lC,EAAAD,EAAA6C,EAAA2B,EAAAgJ,CAAkC,KAAA7D,EAAA,EAAAtI,EAAA,EAAAgU,EAAA,EAAAxV,EAAA,EAAAmB,EAAA,EAAAwM,EAAApP,KAAA0d,KAAAjZ,EAAA,EAAA2B,EAAAgJ,EAAA5K,OAAmDC,EAAA2B,EAAI3B,IAAAijC,EAAAt4B,EAAA3K,GAAA5C,EAAA6lC,EAAAvhC,MAAA,MAAAvE,EAAA8lC,EAAAthC,EAAA/D,MAAAO,GAAA,EAAA2I,GAAA1J,EAAAoB,GAAArB,EAAAqV,GAAApV,IAAAJ,GAAAI,EAAAD,EAAqE,OAAA6J,IAAA7I,EAAAnB,EAAA8J,EAAAtI,IAAAL,EAAAqU,EAAA1L,KAAAxJ,EAAAkB,EAAAL,EAAA6I,EAAAF,EAAA3I,EAAAV,UAAiDA,EAAA,GAAAiE,EAAAnG,KAAA0rC,OAAA1rC,KAAA0d,KAAA,GAAAvX,GAAAjE,EAAA,GAAAkE,EAAApG,KAAAyrC,OAAAzrC,KAAA0d,KAAA,GAAAvX,EAAAsF,EAAA1J,GAAAG,EAAA,GAAAiE,EAAAnG,KAAA0rC,OAAA1rC,KAAA0d,KAAA1d,KAAA0d,KAAAlZ,OAAA,GAAA2B,GAAAjE,EAAA,GAAAkE,EAAApG,KAAAyrC,OAAAzrC,KAAA0d,KAAA1d,KAAA0d,KAAAlZ,OAAA,GAAA2B,EAAAsF,EAAA1J,GAAAmB,EAAA1B,EAAA2rC,KAAAiB,WAAAlsC,GAAA,EAAAlC,KAAAkkB,QAAAhhB,EAAAlD,KAAAusB,QAAA7a,KAAAxO,GAAAmK,KAAA,SAAArN,KAAAmuC,SAAA,KAAA9rC,EAAA,cAAAgL,KAAA,eAAArN,KAAA4oC,QAAA+E,iBAAuV5rC,EAAAqsC,WAAA,SAAA/rC,EAAAoJ,EAAA1J,GAA8B,GAAAG,GAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,EAAA7lC,EAAAD,EAAA6C,EAAA2B,EAAAgJ,EAAAzN,CAAgC,KAAAsB,EAAA,GAAAwI,IAAAvI,EAAA1B,EAAA2rC,KAAA4B,UAAA1sC,IAAAqlC,GAAuCthC,EAAA,MAAOmF,EAAA6D,EAAA,EAAAzN,EAAAU,EAAAmC,OAAkB4K,EAAAzN,EAAI4J,IAAA6D,EAAAlN,EAAAG,EAAAkJ,GAAA,MAAArJ,EAAAkE,IAAA,MAAAshC,EAAAthC,EAAAqF,GAAA7I,EAAAM,EAAAqI,GAAA9J,EAAAyB,EAAAqI,EAAA,GAAA0L,GAAA/U,EAAAiE,EAAAuhC,EAAAvhC,GAAA,EAAAtE,EAAA6lC,EAAAvhC,EAAA8Q,EAAAxS,EAAAyO,KAAAE,IAAArR,EAAA2lC,EAAAthC,EAAA6Q,EAAAxV,GAAAG,EAAAM,EAAAiE,EAAA8Q,EAAA7Q,EAAA8M,KAAAE,IAAArR,EAAAG,EAAAkE,EAAA6Q,EAAArU,GAAAK,GAAA,IAAApB,EAAA,IAAA4C,EAAA,IAAA7C,EAAA,IAAAwE,EAAA,IAAAlE,EAAAiE,EAAA,IAAAjE,EAAAkE,GAAAnD,GAAA,IAAAf,EAAAiE,EAAA,IAAAjE,EAAAkE,EAAAqF,GAAA,MAAAvI,EAAAqI,KAAAtI,GAAA,IAAAf,EAAAiE,EAAA,IAAAjE,EAAAkE,IAAAshC,EAAAxlC,CAAwO,OAAAe,IAASlB,EAAAgtC,UAAA,SAAA1sC,GAAyB,GAAAb,GAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,CAAoB,KAAAxL,EAAA,SAAApJ,EAAAb,GAAoB,OAAAa,EAAA+D,EAAA5E,EAAA4E,IAAA/D,EAAA8D,EAAA3E,EAAA2E,IAA0B8Q,KAAAlV,EAAAmB,EAAA,EAAAqI,EAAAlJ,EAAAmC,OAAuBtB,EAAAqI,EAAIxJ,IAAAmB,EAAA1B,EAAAa,EAAAN,GAAA,MAAAP,EAAA4E,GAAAlE,EAAAG,EAAAN,EAAA,KAAmCqE,EAAA,MAAOxD,EAAAP,EAAAN,EAAA,KAAYqE,EAAA,MAAO,MAAAxD,EAAAwD,GAAA,MAAAlE,EAAAkE,EAAA6Q,EAAA9R,KAAAsG,EAAA7I,EAAAV,IAAA,MAAAU,EAAAwD,EAAA6Q,EAAA9R,KAAAsG,EAAA7I,EAAApB,IAAA,MAAAU,EAAAkE,EAAA6Q,EAAA9R,KAAAsG,EAAAjK,EAAAU,IAAA+U,EAAA9R,KAAA,OAAA8R,EAAA9R,KAAA,KAAkH,OAAA8R,IAASlV,EAAAgB,UAAAqqC,QAAA,SAAA/qC,GAAiC,GAAAb,GAAAiK,EAAA1J,EAAAG,EAAAU,CAAc,WAAA5C,KAAAgvC,aAAAhvC,KAAAgvC,cAAA3sC,EAAA,IAAAb,EAAAiK,EAAA,EAAAvJ,EAAAlC,KAAAyuC,aAAAjqC,OAAA,EAAwF,GAAAtC,EAAAuJ,GAAAvJ,EAAAuJ,GAAAvJ,EAAeV,EAAA,GAAAU,IAAAuJ,MAAAzL,KAAAyuC,aAAAjtC,GAAAxB,KAAAgvC,cAAAhvC,KAAAyuC,aAAAjtC,GAAAxB,KAAAgvC,aAAA7d,QAAAnxB,KAAAivC,kBAAAztC,GAAiI,WAAAa,GAAArC,KAAAgvC,cAAA3sC,EAAA,IAAAb,EAAAO,EAAA,EAAAa,EAAA5C,KAAAyuC,aAAAjqC,OAAA,EAAyE,GAAA5B,EAAAb,GAAAa,EAAAb,GAAAa,EAAepB,EAAA,GAAAoB,IAAAb,MAAA/B,KAAAyuC,aAAAjtC,GAAAa,IAAArC,KAAAyuC,aAAAjtC,GAAAa,GAAA8uB,QAAAnxB,KAAAkvC,gBAAA1tC,GAAiG,OAAAxB,MAAAgvC,YAAA3sC,GAA0BN,EAAAgB,UAAAorC,SAAA,SAAA9rC,EAAAb,EAAAiK,GAAsC,wBAAAzL,MAAA4oC,QAAAtC,WAAAtmC,KAAA4oC,QAAAtC,WAAA5kC,KAAA1B,KAAAqC,EAAAb,EAAAiK,GAAA,UAAAA,EAAAzL,KAAA4oC,QAAAlC,gBAAAllC,EAAAxB,KAAA4oC,QAAAlC,gBAAAliC,SAAAxE,KAAA4oC,QAAAtC,WAAA9kC,EAAAxB,KAAA4oC,QAAAtC,WAAA9hC,QAAA,SAAAiH,EAAAzL,KAAA4oC,QAAAtC,WAAA9kC,EAAAxB,KAAA4oC,QAAAtC,WAAA9hC,QAAAxE,KAAA4oC,QAAAgF,gBAAApsC,EAAAxB,KAAA4oC,QAAAgF,gBAAAppC,SAA8WzC,EAAAgB,UAAAkpC,eAAA,SAAA5pC,EAAAb,EAAAiK,GAA4C,MAAAzL,MAAAusB,QAAA3a,KAAAvP,EAAAb,EAAAiK,GAAA4B,KAAA,YAAArN,KAAA4oC,QAAA3C,cAAA54B,KAAA,cAAArN,KAAA4oC,QAAAzC,gBAAA94B,KAAA,cAAArN,KAAA4oC,QAAAxC,gBAAA/4B,KAAA,OAAArN,KAAA4oC,QAAA5C,gBAAoNjkC,EAAAgB,UAAA+rC,aAAA,SAAAzsC,EAAAb,EAAAiK,GAA0C,MAAAzL,MAAAusB,QAAA7a,KAAArP,GAAAgL,KAAA,SAAA7L,GAAA6L,KAAA,eAAArN,KAAAmvC,mBAAA1jC,KAA6F1J,EAAAgB,UAAA8rC,cAAA,SAAAxsC,EAAAb,EAAAiK,EAAA1J,GAA6C,MAAA/B,MAAAusB,QAAA/a,OAAAnP,EAAAb,EAAAxB,KAAAovC,mBAAArtC,IAAAsL,KAAA,OAAA5B,GAAA4B,KAAA,eAAArN,KAAAqvC,0BAAAttC,IAAAsL,KAAA,SAAArN,KAAAsvC,0BAAAvtC,KAAkLA,EAAAgB,UAAAssC,0BAAA,SAAAhtC,GAAmD,MAAArC,MAAA4oC,QAAA4E,kBAAAnrC,EAAArC,KAAA4oC,QAAA4E,kBAAAhpC,SAA+EzC,EAAAgB,UAAAusC,0BAAA,SAAAjtC,GAAmD,MAAArC,MAAA4oC,QAAAjC,kBAAAtkC,EAAArC,KAAA4oC,QAAAjC,kBAAAniC,SAA+EzC,EAAAgB,UAAAosC,mBAAA,SAAA9sC,GAA4C,MAAArC,MAAA4oC,QAAApC,oBAAAniC,OAAArE,KAAA4oC,QAAApC,UAAAnkC,EAAArC,KAAA4oC,QAAApC,UAAAhiC,QAAAxE,KAAA4oC,QAAApC,WAA8HzkC,EAAAgB,UAAAqsC,mBAAA,SAAA/sC,GAA4C,MAAArC,MAAA4oC,QAAAnC,oBAAApiC,OAAArE,KAAA4oC,QAAAnC,UAAApkC,EAAArC,KAAA4oC,QAAAnC,UAAAjiC,QAAAxE,KAAA4oC,QAAAnC,WAA8H1kC,EAAAgB,UAAAmsC,gBAAA,SAAA7sC,GAAyC,OAAArC,KAAAovC,mBAAA/sC,GAAA,MAAA+P,SAAAlB,WAA4DhP,EAAAlC,KAAAovC,mBAAA/sC,GAAA,GAA+B,cAAcN,EAAAgB,UAAAksC,kBAAA,SAAA5sC,GAA2C,MAAA+P,SAAAlB,WAA0BhP,EAAAlC,KAAAovC,mBAAA/sC,IAA6B,cAAcN,GAAGP,EAAAinC,MAAAjnC,EAAA+sC,YAAA,SAAA9iC,EAAA1J,EAAAG,EAAAU,EAAAM,GAA2C,GAAAqI,GAAA0L,EAAAxV,EAAAwB,EAAAykC,EAAA7lC,EAAAD,EAAA6C,EAAA2B,EAAAgJ,EAAAzN,CAA0B,IAAAF,EAAA,KAAAM,EAAA0J,GAAAvJ,EAAA+U,EAAA,GAAApI,MAAApD,OAAA,MAAA7J,EAAAJ,EAAA+tC,YAAA3sC,IAAA,IAAAjB,EAAAH,EAAAguC,iBAAAppC,EAAA,EAAAgJ,EAAAzN,EAAA6C,OAAqG4B,EAAAgJ,EAAIhJ,IAAA,GAAAnD,EAAAtB,EAAAyE,GAAAvE,EAAAL,EAAA+tC,YAAAtsC,GAAAxB,GAAAI,EAAAi/B,KAAA,CAA4Cl/B,EAAAC,CAAI,OAAM,aAAAD,MAAAJ,EAAA+tC,YAAAE,QAAAvsC,IAAAtB,EAAAS,EAAAwmC,UAA0DjnC,GAAI8tC,IAAAxsC,KAAMqI,EAAA3J,EAAAgN,MAAAqI,GAAAywB,MAAqBjjC,EAAA8G,EAAAghC,YAAAxqC,GAAmB0C,GAAAgH,GAAAi8B,EAAAviC,MAAAvD,EAAA8tC,IAAAnkC,GAAA9G,IAAA7C,EAAA+tC,KAAApkC,EAAsC,OAAAm8B,IAASj8B,EAAA,SAAApJ,GAAe,OAAOy+B,KAAA,GAAAz+B,EAAA,IAAAuM,MAAA,SAAAvM,GAAgC,UAAAwM,MAAAxM,EAAAutC,cAAAvtC,EAAAwtC,WAAAxtC,EAAAytC,UAAAztC,EAAA0tC,aAAuEL,IAAA,SAAArtC,GAAiB,MAAAb,GAAAgnC,KAAAnmC,EAAA0tC,YAAA,IAAAvuC,EAAAgnC,KAAAnmC,EAAA2tC,eAAuDL,KAAA,SAAAnuC,GAAkB,MAAAA,GAAAyuC,cAAAzuC,EAAA0uC,gBAAA7tC,MAA8CN,EAAA,SAAAM,GAAe,OAAOy+B,KAAA,IAAAz+B,EAAAuM,MAAA,SAAAvM,GAA6B,UAAAwM,MAAAxM,EAAAutC,cAAAvtC,EAAAwtC,WAAAxtC,EAAAytC,UAAAztC,EAAA0tC,WAAA1tC,EAAA2tC,eAAsFN,IAAA,SAAArtC,GAAiB,MAAAb,GAAAgnC,KAAAnmC,EAAA0tC,YAAA,IAAAvuC,EAAAgnC,KAAAnmC,EAAA2tC,cAAA,IAAAxuC,EAAAgnC,KAAAnmC,EAAA8tC,eAAkFR,KAAA,SAAAnuC,GAAkB,MAAAA,GAAA4uC,cAAA5uC,EAAA6uC,gBAAAhuC,MAA8Cb,EAAA+tC,aAAgBe,QAAQxP,KAAA,OAAAlyB,MAAA,SAAAvM,GAA8B,UAAAwM,MAAAxM,EAAAutC,cAAAvtC,EAAAutC,cAAA,SAAwDF,IAAA,SAAArtC,GAAiB,SAAAA,EAAAutC,eAAyBD,KAAA,SAAAttC,GAAkB,MAAAA,GAAAkuC,YAAAluC,EAAAutC,cAAA,MAA0CY,MAAO1P,KAAA,OAAAlyB,MAAA,SAAAvM,GAA8B,UAAAwM,MAAAxM,EAAAutC,cAAA,MAAqCF,IAAA,SAAArtC,GAAiB,SAAAA,EAAAutC,eAAyBD,KAAA,SAAAttC,GAAkB,MAAAA,GAAAkuC,YAAAluC,EAAAutC,cAAA,KAAyCa,OAAQ3P,KAAA,QAAAlyB,MAAA,SAAAvM,GAA+B,UAAAwM,MAAAxM,EAAAutC,cAAAvtC,EAAAwtC,WAAA,IAAgDH,IAAA,SAAArtC,GAAiB,MAAAA,GAAAutC,cAAA,IAAApuC,EAAAgnC,KAAAnmC,EAAAwtC,WAAA,IAAkDF,KAAA,SAAAttC,GAAkB,MAAAA,GAAAoqC,SAAApqC,EAAAwtC,WAAA,KAAmCa,MAAO5P,KAAA,OAAAlyB,MAAA,SAAAvM,GAA8B,UAAAwM,MAAAxM,EAAAutC,cAAAvtC,EAAAwtC,WAAAxtC,EAAAytC,YAA0DJ,IAAA,SAAArtC,GAAiB,MAAAA,GAAAutC,cAAA,IAAApuC,EAAAgnC,KAAAnmC,EAAAwtC,WAAA,OAAAruC,EAAAgnC,KAAAnmC,EAAAytC,YAA0EH,KAAA,SAAAttC,GAAkB,MAAAA,GAAAsuC,QAAAtuC,EAAAytC,UAAA,KAAiCc,KAAM9P,KAAA,MAAAlyB,MAAA,SAAAvM,GAA6B,UAAAwM,MAAAxM,EAAAutC,cAAAvtC,EAAAwtC,WAAAxtC,EAAAytC,YAA0DJ,IAAA,SAAArtC,GAAiB,MAAAA,GAAAutC,cAAA,IAAApuC,EAAAgnC,KAAAnmC,EAAAwtC,WAAA,OAAAruC,EAAAgnC,KAAAnmC,EAAAytC,YAA0EH,KAAA,SAAAttC,GAAkB,MAAAA,GAAAsuC,QAAAtuC,EAAAytC,UAAA,KAAiCe,KAAAplC,EAAA,IAAAqlC,QAAArlC,EAAA,IAAAslC,QAAAtlC,EAAA,IAAAulC,QAAAvlC,EAAA,IAAAwlC,OAAAxlC,EAAA,GAAAylC,OAAAzlC,EAAA,GAAA0lC,QAAApvC,EAAA,IAAAqvC,QAAArvC,EAAA,IAAAsvC,QAAAtvC,EAAA,IAAAuvC,OAAAvvC,EAAA,GAAA0tC,OAAA1tC,EAAA,IAAgJP,EAAAguC,kBAAA,6HAAAhuC,EAAA+vC,KAAA,SAAA9lC,GAAqK,QAAA1J,GAAA0J,GAAc,GAAA7I,EAAM,MAAA5C,eAAAwB,GAAA+vC,MAAA,UAAA/vC,GAAA+vC,KAAA9lC,EAAkD7I,GAAAP,EAAAwmC,UAAa3mC,EAAAuJ,GAAAzL,KAAAuqC,YAAA3nC,EAAA6kC,eAAA,SAAA7kC,EAAAo0B,cAAAp0B,EAAAo0B,YAAAp0B,EAAA6kC,eAAA,MAAA1lC,EAAAmmC,UAAApjC,YAAApD,KAAA1B,KAAA4C,GAA2I,GAAAV,EAAM,OAAAqJ,GAAAxJ,EAAA0J,GAAAvJ,GAAiB80B,YAAA,OAAAyQ,gBAAA,GAAqC1lC,EAAAgB,UAAA8qC,WAAA,WAAmC,GAAAxrC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,CAAkB,KAAAN,EAAA5C,KAAA0d,KAAAxa,KAAAnB,EAAA,EAAAG,EAAAU,EAAA4B,OAAoCzC,EAAAG,EAAIH,IAAAM,EAAAO,EAAAb,GAAAM,EAAAknC,GAAAvpC,KAAA0rC,OAAArpC,EAAA8D,GAAA3E,EAAA,EAAAa,EAAA0rC,GAAA,WAAqD,GAAAhsC,GAAAG,EAAAU,EAAAM,CAAY,KAAAN,EAAAP,EAAA+D,EAAAlD,KAAAnB,EAAA,EAAAG,EAAAU,EAAA4B,OAA8BzC,EAAAG,EAAIH,IAAA0J,EAAA7I,EAAAb,GAAA/B,KAAA4oC,QAAAnB,eAAAvkC,EAAAiC,KAAAnF,KAAAyrC,OAAAhgC,KAAAjK,GAAAiK,GAAA,EAAAvI,EAAAiC,KAAAnF,KAAAyrC,OAAAjqC,IAA+F,OAAA0B,IAASxB,KAAA1B,MAAAkD,EAAAiC,KAAA9C,EAAA2rC,MAAA96B,KAAAC,IAAA3P,MAAA0P,KAAA7Q,EAAA0rC,IAAsD,OAAA7qC,IAASnB,EAAAgB,UAAAurC,WAAA,WAAmC,GAAAjsC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,CAAoB,KAAAvL,KAAAyuC,gBAAAjtC,EAAAxB,KAAA4oC,QAAAnB,eAAA,WAAkE7kC,IAAK,QAAAP,GAAA,EAAAb,EAAAxB,KAAA4oC,QAAArD,MAAA/gC,OAAA,EAA0C,GAAAhD,EAAAa,GAAAb,EAAAa,GAAAb,EAAe,GAAAA,EAAAa,QAAAO,EAAAuC,KAAA9C,EAAuB,OAAAO,IAASY,MAAAxD,MAAA,WAAwBkD,IAAK,QAAAb,GAAAH,EAAAlC,KAAA4oC,QAAArD,MAAA/gC,OAAA,EAAwCtC,GAAA,EAAAG,GAAA,EAAAA,GAAA,EAAeH,GAAA,EAAAG,QAAAa,EAAAiC,KAAA9C,EAAuB,OAAAa,IAASM,MAAAxD,MAAAuL,KAAAE,EAAA,EAAA1J,EAAAP,EAAAgD,OAAiCiH,EAAA1J,EAAI0J,IAAApJ,EAAAb,EAAAiK,GAAAzL,KAAAwxC,aAAAnvC,GAAArC,KAAA2uC,aAAAtsC,GAAAkJ,EAAApG,KAAAnF,KAAA4uC,cAAAvsC,GAAmF,OAAAkJ,IAASxJ,EAAAgB,UAAAyuC,aAAA,SAAAnvC,GAAsC,GAAAb,EAAM,YAAAA,EAAAxB,KAAAqd,MAAAhb,IAAA,MAAAb,KAAA,IAAAxB,KAAA0rC,OAAA1rC,KAAA2f,MAAA,IAAA3f,KAAAkkB,OAAA,IAAAlkB,KAAA0rC,OAAA1rC,KAAAyf,MAAA,IAAAzf,KAAAkkB,OAAA,IAAAlkB,KAAAyxC,eAAAjwC,EAAAxB,KAAA0xC,cAAArvC,KAA8KN,EAAAgB,UAAA2uC,cAAA,SAAArvC,GAAuC,GAAAb,EAAM,OAAAA,GAAA4Q,QAAAgJ,QAAApb,KAAAmuC,SAAAnuC,KAAA0d,KAAArb,KAAA,SAAA+P,QAAA2K,IAAAvb,EAAAyV,EAAAjX,KAAA4oC,QAAAnB,eAAA,GAAAjmC,EAAA0B,EAAA,IAAA1B,EAAA0B,EAAAgQ,KAAAE,IAAA,IAAApT,KAAA4oC,QAAAnB,eAAA,IAAAjmC,EAAAC,EAAA,KAAAD,EAAAC,KAAsLM,EAAAgB,UAAA0uC,eAAA,SAAApvC,EAAAb,GAA0C,MAAAxB,MAAAusB,QAAA7a,KAAArP,GAAAgL,KAAA,OAAA7L,GAAA6L,KAAA,eAAArN,KAAA4oC,QAAA5R,aAAA3pB,KAAA,kBAA+GtL,GAAGP,EAAA2rC,MAAA3rC,EAAAmwC,IAAA,SAAAlmC,GAA2B,QAAA1J,GAAA0J,GAAc,GAAAzL,KAAAqtC,WAAAzqC,EAAA5C,KAAAqtC,WAAArtC,WAAAstC,YAAA1qC,EAAA5C,KAAAstC,YAAAttC,WAAAutC,YAAA3qC,EAAA5C,KAAAutC,YAAAvtC,uBAAAwB,GAAAmwC,KAAA,UAAAnwC,GAAAmwC,IAAAlmC,EAA4K1J,GAAAmmC,UAAApjC,YAAApD,KAAA1B,KAAAqC,EAAAwmC,UAA6Cp9B,GAAIo7B,WAAA,KAAgB,MAAAt7B,GAAAxJ,EAAA0J,GAAA1J,EAAAgB,UAAA2tB,KAAA,WAA0C,GAAA1wB,KAAAuqC,WAAAvqC,KAAA4oC,QAAAhD,QAAA,WAAA5lC,KAAA4oC,QAAAjD,UAAA,MAAA3lC,MAAA2qB,MAAA,GAAAnpB,GAAAmrC,OAAyGjjB,OAAA1pB,KAAAyO,KAAezO,KAAA8D,GAAA,YAAA9D,KAAAstC,aAAAttC,KAAA8D,GAAA,WAAA9D,KAAAqtC,YAAArtC,KAAA8D,GAAA,YAAA9D,KAAAutC,cAAkHxrC,EAAAgB,UAAAgmC,UAAuB6I,aAAA,IAAAC,OAAA,EAAAzM,WAAA,uEAAA0M,WAAA,EAAAC,WAAA,SAAAtE,aAAA,GAAA3H,YAAA,EAAAwG,OAAA,GAAoLvqC,EAAAgB,UAAAyoC,KAAA,WAA6B,GAAAnpC,EAAM,IAAArC,KAAAgyC,YAAA,IAAAhyC,KAAA4oC,QAAAjD,UAAA,OAAAtjC,EAAArC,KAAA2qB,OAAAkiB,OAAArpC,MAAAnB,EAAArC,KAAAkuC,mBAAAluC,KAAA0d,KAAAlZ,OAAA,KAAgIzC,EAAAgB,UAAAivC,SAAA,WAAiC,GAAA3vC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,CAAkB,KAAAN,EAAA5C,KAAA0d,KAAAxa,KAAAb,EAAAN,EAAA,EAAAG,EAAAU,EAAA4B,OAAsCzC,EAAAG,EAAIG,IAAAN,EAAAP,EAAAoB,EAAAP,GAAAb,EAAA+nC,GAAAvpC,KAAAorC,OAAAprC,KAAAsrC,OAAAjpC,EAAA,IAAArC,KAAA0d,KAAAlZ,OAAAtB,EAAAiC,KAAA3D,EAAAusC,GAAA,WAAwF,GAAA1rC,GAAAN,EAAAG,EAAAU,CAAY,KAAAV,EAAAV,EAAA4E,EAAAxD,KAAAP,EAAA,EAAAN,EAAAG,EAAAsC,OAA8BnC,EAAAN,EAAIM,IAAAoJ,EAAAvJ,EAAAG,GAAA,MAAAoJ,EAAA7I,EAAAuC,KAAAnF,KAAAyrC,OAAAhgC,IAAA7I,EAAAuC,KAAA,KAAuD,OAAAvC,IAASlB,KAAA1B,MAAa,OAAAkD,IAASnB,EAAAgB,UAAA+oC,KAAA,WAA6B,GAAAzpC,EAAM,aAAAA,EAAArC,KAAA4oC,QAAAlD,OAAA,SAAArjC,GAAA,MAAAA,GAAArC,KAAAquC,YAAAruC,KAAAsuC,cAA0FvsC,EAAAgB,UAAAsrC,UAAA,WAAkC,GAAAhsC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,EAAA7lC,EAAAD,EAAA6C,EAAA2B,EAAAgJ,CAAsC,KAAA5N,EAAAxB,KAAA4oC,QAAA9C,WAAA9lC,KAAA+rC,iBAAA/rC,KAAAgsC,iBAAAvqC,EAAA,KAAAwV,EAAA,KAAA7H,KAAA3D,EAAAhH,EAAA,EAAA2B,EAAApG,KAAA0d,KAAAlZ,OAAsH,GAAA4B,EAAA3B,EAAA2B,EAAA3B,EAAA2B,EAAaqF,EAAA,GAAArF,IAAA3B,MAAAxB,EAAAjD,KAAA0d,KAAA1d,KAAA0d,KAAAlZ,OAAA,EAAAiH,GAAA1J,EAAA/B,KAAA4oC,QAAA9C,WAAA9lC,KAAAksC,eAAA1qC,EAAAyB,EAAAsmC,GAAA,GAAAvpC,KAAA4oC,QAAA3C,aAAAhjC,EAAAunC,OAAAxqC,KAAAisC,eAAAhpC,EAAAsmC,GAAA/nC,EAAAyB,EAAAunC,OAAAnoC,EAAArC,KAAA4oC,QAAA9C,WAAA,EAAA9lC,KAAA4oC,QAAAzB,YAAAvlC,EAAAG,EAAAgO,UAAAhO,EAAA+N,UAAA,KAAAzN,GAAAH,EAAAH,EAAAgO,UAAAhO,EAAA+N,UAAA,MAAA5N,EAAA2J,OAAA,aAAAxJ,IAAAkJ,GAAA,GAAA3J,EAAAgK,MAAAsH,KAAA8N,IAAA3e,EAAA6Q,KAAAI,GAAA,KAAAvR,EAAA+N,UAAA,IAAAvE,EAAA,UAAAvL,KAAA4oC,QAAA9C,YAAAjkC,EAAAK,EAAAkE,EAAAshC,EAAAxlC,EAAA2J,OAAA3I,EAAAlD,KAAAyO,GAAA5C,WAAAhK,EAAAK,EAAAiE,EAAAuhC,EAAAxlC,EAAA0J,MAAA1I,EAAAlD,KAAAyO,GAAA7C,UAAA,MAAAnK,MAAAI,EAAA6lC,GAAA,MAAAzwB,MAAApV,OAAA,GAAAA,EAAA6lC,EAAAxkC,GAAA,IAAAb,IAAAO,EAAA,KAAA5C,KAAA4oC,QAAA3C,aAAA/yB,KAAA+N,IAAA5e,EAAA6Q,KAAAI,GAAA,KAAA2D,EAAApV,EAAAe,GAAA5C,KAAA4oC,QAAA9C,WAAA12B,EAAAjK,KAAA1D,EAAAI,GAAAuN,EAAAjK,KAAA1D,EAAAI,EAAA7B,KAAA4oC,QAAA6E,eAAAr+B,EAAAjK,KAAApD,EAAAg6B,SAA0rB,OAAA3sB,IAASrN,EAAAgB,UAAAipC,eAAA,WAAuC,MAAAhsC,MAAAkkB,QAAAlkB,KAAA4oC,QAAAqJ,sBAAAjyC,KAAA4oC,QAAA0B,QAAA,IAA+EvoC,EAAAgB,UAAAurC,WAAA,WAAmC,GAAAjsC,GAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,EAAA7lC,EAAAD,EAAA6C,EAAA2B,EAAAgJ,EAAAzN,CAAwC,IAAA8J,EAAAzL,KAAAsrC,MAAAtrC,KAAA4oC,QAAAlrB,KAAAlZ,OAAAxE,KAAA4oC,QAAAhD,QAAA3uB,EAAA,MAAkE,KAAAA,EAAA,EAAAlV,EAAAqN,EAAA,EAAAzN,EAAA3B,KAAA4oC,QAAArD,MAAA/gC,OAAA,EAAiD,GAAA7C,EAAAyN,GAAAzN,EAAAyN,GAAAzN,EAAeI,EAAA,GAAAJ,IAAAyN,MAAApP,KAAA0oC,UAAA3mC,KAAAkV,GAAA,EAAyC,OAAA5U,IAAAoJ,EAAAzL,KAAA4oC,QAAAgJ,aAAA5xC,KAAA4oC,QAAAiJ,QAAA56B,EAAA,IAAAA,EAAAjX,KAAA4oC,QAAAsJ,UAAA7vC,EAAA6Q,KAAAE,IAAA/Q,EAAArC,KAAA4oC,QAAAsJ,UAAArwC,EAAA4J,EAAApJ,EAAA4U,EAAAjX,KAAA4oC,QAAAiJ,QAAA56B,EAAA,GAAA1L,EAAA1J,EAAA,EAAAuE,EAAApG,KAAA0f,MAAA,GAAA1f,KAAA4f,MAAA,EAAA5f,KAAAyrC,OAAA,QAAAzrC,KAAAmyC,KAAA,WAA4O,GAAApwC,GAAAkV,EAAApV,EAAAuN,CAAY,KAAAvN,EAAA7B,KAAA0d,KAAAtO,KAAAlN,EAAAH,EAAA,EAAAkV,EAAApV,EAAA2C,OAAsCzC,EAAAkV,EAAI/U,IAAAH,EAAAN,EAAAI,EAAAK,GAAAU,EAAA,EAAAwM,EAAAjK,KAAA,WAAmC,GAAApD,GAAAkV,EAAApV,EAAAuN,CAAY,KAAAvN,EAAAJ,EAAAssC,GAAA3+B,KAAAnM,EAAAlB,EAAA,EAAAkV,EAAApV,EAAA2C,OAAiCzC,EAAAkV,EAAIhU,IAAAlB,EAAA0C,EAAA5C,EAAAoB,GAAAjD,KAAA0oC,UAAAzlC,KAAA,OAAAwB,GAAA2B,GAAAxE,EAAAsR,KAAAE,IAAA3O,EAAA2B,GAAA5E,EAAA0R,KAAAC,IAAA1O,EAAA2B,KAAAxE,EAAA6C,EAAAjD,EAAAxB,KAAAkkB,QAAAhhB,EAAAlD,KAAAorC,OAAAlpC,EAAAuJ,EAAAF,EAAAvL,KAAA4oC,QAAAhD,UAAA1iC,GAAAD,GAAAZ,EAAArC,KAAA4oC,QAAAiJ,SAAAnK,EAAAlmC,EAAAI,EAAA5B,KAAA4oC,QAAAwJ,uBAAApyC,KAAA4oC,QAAAwJ,sBAAA3wC,EAAA0E,KAAAnG,KAAA4oC,QAAA9C,WAAA9lC,KAAAqyC,QAAAryC,KAAAkrC,OAAAlrC,KAAAorC,OAAAlpC,EAAAuJ,EAAAzL,KAAAurC,MAAA9/B,EAAAzL,KAAA4oC,QAAA0J,kBAAAtyC,KAAA4oC,QAAA2J,oBAAAvyC,KAAA4oC,QAAAmJ,WAAA/xC,KAAAqyC,QAAAryC,KAAAorC,OAAAlpC,EAAAuJ,EAAAzL,KAAAmrC,KAAA1/B,EAAAzL,KAAAurC,MAAAvrC,KAAA4oC,QAAA0J,kBAAAtyC,KAAA4oC,QAAA2J,oBAAAvyC,KAAA4oC,QAAAmJ,YAAA/xC,KAAA4oC,QAAAhD,UAAAhkC,GAAAgB,GAAA5C,KAAA4oC,QAAA9C,YAAA9lC,KAAAqyC,QAAAzwC,EAAAsB,EAAAwkC,EAAArlC,EAAArC,KAAAmuC,SAAA1sC,EAAAwB,EAAA,OAAAjD,KAAA4oC,QAAAkJ,WAAA9xC,KAAA4oC,QAAAmJ,WAAA3iC,EAAAjK,KAAAvC,GAAA8kC,KAAA1nC,KAAAqyC,QAAAnvC,EAAAtB,EAAAS,EAAAqlC,EAAA1nC,KAAAmuC,SAAA1sC,EAAAwB,EAAA,OAAAjD,KAAA4oC,QAAAkJ,WAAA9xC,KAAA4oC,QAAAmJ,WAAA3iC,EAAAjK,KAAAvC,GAAA8kC,KAAAt4B,EAAAjK,KAAA,MAAi1B,OAAAiK,IAAS1N,KAAA1B,MAAa,OAAAoP,IAAS1N,KAAA1B,OAAY+B,EAAAgB,UAAAorC,SAAA,SAAA9rC,EAAAb,EAAAiK,GAAsC,GAAA1J,GAAAG,CAAQ,yBAAAlC,MAAA4oC,QAAAxD,WAAArjC,GAAoDoE,EAAA9D,EAAA8D,EAAAC,EAAA/D,EAAA+D,EAAA5E,GAAAgpC,MAAAnoC,EAAAmoC,OAA6BtoC,GAAIyvB,MAAAnwB,EAAAkB,IAAA1C,KAAA4oC,QAAArD,MAAA/jC,GAAAgpC,MAAAxqC,KAAA4oC,QAAApD,OAAAhkC,IAA+DxB,KAAA4oC,QAAAxD,UAAA1jC,KAAA1B,KAAA+B,EAAAG,EAAAuJ,IAAAzL,KAAA4oC,QAAAxD,UAAA5jC,EAAAxB,KAAA4oC,QAAAxD,UAAA5gC,SAAkGzC,EAAAgB,UAAAumC,QAAA,SAAAjnC,EAAAb,GAAmC,GAAAiK,EAAM,YAAAzL,KAAA0d,KAAAlZ,OAAA,MAAAiH,EAAAzL,KAAA4oC,QAAA9C,WAAAtkC,EAAAa,EAAAoJ,EAAAyH,KAAAC,IAAAD,KAAAE,IAAA3H,EAAAzL,KAAAqrC,MAAArrC,KAAAorC,QAAAl4B,KAAAE,IAAApT,KAAA0d,KAAAlZ,OAAA,EAAA0O,KAAA6d,OAAAtlB,EAAAzL,KAAAorC,SAAAprC,KAAAsrC,MAAAtrC,KAAA0d,KAAAlZ,YAAsMzC,EAAAgB,UAAAwqC,YAAA,SAAAlrC,EAAAb,GAAuC,GAAAiK,EAAM,OAAAA,GAAAzL,KAAAspC,QAAAjnC,EAAAb,GAAAxB,KAAAsoC,KAAA,QAAA78B,EAAAzL,KAAA0d,KAAAjS,GAAA+J,IAAAnT,EAAAb,IAAqEO,EAAAgB,UAAAuqC,YAAA,SAAAjrC,EAAAb,GAAuC,GAAAiK,GAAA1J,CAAQ,OAAA0J,GAAAzL,KAAAspC,QAAAjnC,EAAAb,IAAAO,EAAA/B,KAAA2qB,OAAAkiB,OAAArpC,MAAAzB,EAAA/B,KAAAkuC,mBAAAziC,KAAqF1J,EAAAgB,UAAAsqC,WAAA,WAAmC,QAAArtC,KAAA4oC,QAAAjD,UAAA,MAAA3lC,MAAA2qB,MAAAkR,QAAwD95B,EAAAgB,UAAAmrC,mBAAA,SAAA1sC,GAA4C,GAAAiK,GAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,CAAoB,KAAAS,EAAAlC,KAAA0d,KAAAlc,GAAAiK,EAAApJ,EAAA,wCAAAuP,KAAA1P,EAAAsoC,OAAA/+B,IAAAonB,KAAA,aAAApxB,EAAAS,EAAAkE,EAAArE,EAAAwJ,EAAA,EAAA0L,EAAAxV,EAAA+C,OAA0H+G,EAAA0L,EAAIlV,IAAAwJ,EAAArI,EAAAzB,EAAAM,IAAA,IAAA/B,KAAA4oC,QAAApD,OAAAzjC,KAAA0J,GAAA,iDAAAzL,KAAAmuC,SAAAjsC,EAAAH,EAAA,kBAAA/B,KAAA4oC,QAAApD,OAAAzjC,GAAA,QAAA/B,KAAAknC,aAAAhkC,EAAAnB,GAAA,WAAqM,yBAAA/B,MAAA4oC,QAAAnD,gBAAAh6B,EAAAzL,KAAA4oC,QAAAnD,cAAAjkC,EAAAxB,KAAA4oC,QAAAn9B,EAAAvJ,EAAAsT,MAAAxV,KAAA4oC,QAAA9C,YAAAljC,EAAA5C,KAAAQ,KAAA,GAAAR,KAAA4L,MAAA1I,EAAAlD,KAAAyN,KAAAjM,EAAA,IAAAxB,KAAA6L,OAAA7L,KAAA0d,KAAAlZ,QAAAiH,EAAA7I,EAAAM,GAAA,KAAAN,EAAA5C,KAAAQ,MAAAgB,EAAA,IAAAxB,KAAA4L,MAAA5L,KAAA0d,KAAAlZ,QAAAiH,EAAA7I,KAAiRb,EAAAgB,UAAAkpC,eAAA,SAAA5pC,EAAAb,EAAAiK,GAA4C,MAAAzL,MAAAusB,QAAA3a,KAAAvP,EAAAb,EAAAiK,GAAA4B,KAAA,YAAArN,KAAA4oC,QAAA3C,cAAA54B,KAAA,cAAArN,KAAA4oC,QAAAzC,gBAAA94B,KAAA,cAAArN,KAAA4oC,QAAAxC,gBAAA/4B,KAAA,OAAArN,KAAA4oC,QAAA5C,gBAAoNjkC,EAAAgB,UAAAsvC,QAAA,SAAAhwC,EAAAb,EAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,GAA6C,GAAAqI,GAAA0L,CAAQ,OAAA1L,GAAA2H,KAAAC,IAAA3P,MAAA0P,KAAAhQ,GAAA+T,EAAA,IAAA1L,KAAAxJ,EAAA/B,KAAAusB,QAAA9a,KAAApP,EAAAb,EAAAiK,EAAA1J,GAAA/B,KAAAusB,QAAA7a,KAAA1R,KAAAwyC,YAAAnwC,EAAAb,EAAAiK,EAAA1J,EAAAmB,IAAA+T,EAAA5J,KAAA,OAAAnL,GAAAmL,KAAA,eAAAzK,GAAAyK,KAAA,kBAAqLtL,EAAAgB,UAAAyvC,YAAA,SAAAnwC,EAAAb,EAAAiK,EAAA1J,EAAAG,GAA6C,aAAAA,OAAA,eAAAG,EAAAH,EAAA,GAAAV,EAAA,IAAAa,EAAAb,EAAAa,EAAAH,EAAA,GAAAV,EAAA,IAAAa,EAAAoJ,EAAAvJ,EAAA,GAAAV,EAAA,IAAAa,EAAAoJ,EAAAjK,EAAAa,EAAAoJ,EAAAjK,EAAAU,EAAA,OAAAG,EAAAoJ,EAAAjK,EAAAO,EAAAG,EAAA,OAAAG,EAAAoJ,EAAAjK,EAAAO,EAAAM,EAAAoJ,EAAAvJ,EAAA,GAAAV,EAAAO,EAAA,IAAAM,EAAAH,EAAA,GAAAV,EAAAO,EAAA,IAAAM,EAAAb,EAAAO,EAAAM,EAAAb,EAAAO,EAAAG,EAAA,SAAoLH,GAAGP,EAAAinC,MAAAjnC,EAAAixC,MAAA,SAAAhnC,GAA6B,QAAA1J,GAAA0J,GAAczL,KAAA2oC,cAAA/lC,EAAA5C,KAAA2oC,cAAA3oC,WAAA0yC,OAAA9vC,EAAA5C,KAAA0yC,OAAA1yC,WAAA2yC,MAAA/vC,EAAA5C,KAAA2yC,MAAA3yC,KAA4G,IAAA+B,GAAA/B,IAAW,MAAAA,eAAAwB,GAAAixC,OAAA,UAAAjxC,GAAAixC,MAAAhnC,EAAoD,IAAAzL,KAAA4oC,QAAAvmC,EAAAwmC,UAA2B7oC,KAAA+oC,SAAAt9B,GAAA,gBAAAA,GAAAkC,QAAA3N,KAAAyO,GAAApM,EAAA2P,SAAAgU,eAAAva,EAAAkC,UAAA3N,KAAAyO,GAAApM,EAAAoJ,EAAAkC,SAAA,OAAA3N,KAAAyO,IAAA,IAAAzO,KAAAyO,GAAAjK,OAAA,SAAA44B,OAAA,oCAAmM,KAAA3xB,EAAAiS,MAAA,IAAAjS,EAAAiS,KAAAlZ,SAAAxE,KAAAusB,QAAA,GAAAna,SAAApS,KAAAyO,GAAA,IAAAzO,KAAA4oC,QAAA/C,QAAAxjC,EAAAjB,QAAAuB,KAAA,kBAAAN,GAAmI,aAAAN,EAAAioC,WAAA5oC,OAAA6oC,aAAAloC,EAAAioC,WAAAjoC,EAAAioC,UAAA5oC,OAAA8c,WAAAnc,EAAA4mC,cAAA,OAA8G3oC,KAAAopC,QAAA39B,EAAAiS,OAAwB,MAAAnS,GAAAxJ,EAAA0J,GAAA1J,EAAAgB,UAAAgmC,UAAoCvH,QAAA,qGAAAoR,gBAAA,UAAAC,WAAA,UAAAxM,UAAA7kC,EAAA+mC,OAAA1C,QAAA,GAAyL9jC,EAAAgB,UAAA6nC,OAAA,WAA+B,GAAAvoC,GAAAoJ,EAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,EAAA7lC,EAAAD,EAAA6C,EAAA2B,EAAAgJ,EAAAzN,EAAAwE,EAAAmV,EAAA9P,EAAAG,EAAAqL,EAAA6E,CAAkD,KAAA7b,KAAAusB,QAAAmF,QAAAjmB,EAAAzL,KAAAyO,GAAA7C,QAAA,EAAA7J,EAAA/B,KAAAyO,GAAA5C,SAAA,EAAAjK,GAAAsR,KAAAE,IAAA3H,EAAA1J,GAAA,MAAA2lC,EAAA,EAAAl8B,EAAAxL,KAAAiQ,OAAAxL,EAAA,EAAA9C,EAAA6J,EAAAhH,OAA0HC,EAAA9C,EAAI8C,IAAA5C,EAAA2J,EAAA/G,GAAAijC,GAAA7lC,CAAgB,KAAAoV,EAAA,KAAArV,GAAAS,EAAA,OAAA6Q,KAAAI,GAAA2D,EAAAjX,KAAA0d,KAAAlZ,OAAAtB,EAAA,EAAAN,EAAA,EAAA5C,KAAA8yC,YAAAnnC,EAAA3L,KAAAiQ,OAAA/N,EAAAkE,EAAA,EAAAD,EAAAwF,EAAAnH,OAA0G4B,EAAAD,EAAIjE,IAAAkE,EAAAvE,EAAA8J,EAAAzJ,GAAAT,EAAAyB,EAAA+T,EAAA5U,GAAAR,EAAA6lC,GAAAzkC,EAAA,GAAAzB,GAAAuxC,aAAAtnC,EAAA1J,EAAA,EAAAH,IAAAsB,EAAAzB,EAAAzB,KAAA0d,KAAAxb,GAAAwX,OAAA1Z,KAAA4oC,QAAApH,OAAA5+B,EAAA5C,KAAA4oC,QAAApH,OAAAh9B,QAAAxE,KAAA4oC,QAAAgK,gBAAAhwC,EAAA5C,KAAAusB,SAAAtpB,EAAAnD,SAAAE,KAAA8yC,SAAA3tC,KAAAlC,KAAAa,GAAA,QAAA9D,KAAA0yC,QAAAzvC,EAAAa,GAAA,QAAA9D,KAAA2yC,OAAAzvC,EAAAzB,EAAAmB,GAAA,CAA8Q,KAAA5C,KAAAgzC,MAAAhzC,KAAAizC,oBAAAxnC,EAAA1J,EAAA,GAAA/B,KAAA4oC,QAAAiK,WAAA,QAAA7yC,KAAAkzC,MAAAlzC,KAAAizC,oBAAAxnC,EAAA1J,EAAA,GAAA/B,KAAA4oC,QAAAiK,WAAA,IAAAtnC,EAAA2H,KAAAC,IAAA3P,MAAA0P,KAAAlT,KAAAiQ,QAAArN,EAAA,EAAAoU,EAAAhX,KAAAiQ,OAAA4L,KAAAzM,EAAA,EAAAkM,EAAAtE,EAAAxS,OAA+N4K,EAAAkM,EAAIlM,IAAA,CAAK,IAAAvN,EAAAmV,EAAA5H,MAAA7D,EAAA,CAAiBvL,KAAA0yC,OAAA9vC,EAAe,OAAMiZ,EAAA1W,KAAAvC,GAAA,GAAa,MAAAiZ,IAAS9Z,EAAAgB,UAAAqmC,QAAA,SAAA/mC,GAAiC,GAAAb,EAAM,OAAAxB,MAAA0d,KAAArb,EAAArC,KAAAiQ,OAAA,WAA0C,GAAA5N,GAAAoJ,EAAA1J,EAAAG,CAAY,KAAAH,EAAA/B,KAAA0d,KAAAxb,KAAAG,EAAA,EAAAoJ,EAAA1J,EAAAyC,OAAoCnC,EAAAoJ,EAAIpJ,IAAAb,EAAAO,EAAAM,GAAAH,EAAAiD,KAAA6O,WAAAxS,EAAA5C,OAAuC,OAAAsD,IAASR,KAAA1B,WAAA4qC,UAA0B7oC,EAAAgB,UAAA4vC,MAAA,SAAAtwC,GAA+B,MAAArC,MAAAsoC,KAAA,QAAAjmC,EAAArC,KAAA0d,KAAArb,KAAyCN,EAAAgB,UAAA2vC,OAAA,SAAArwC,GAAgC,GAAAb,GAAAiK,EAAA1J,EAAAG,EAAAU,EAAAM,CAAgB,KAAAA,EAAAlD,KAAA8yC,SAAA5wC,EAAA,EAAAU,EAAAM,EAAAsB,OAAmCtC,EAAAU,EAAIV,IAAAuJ,EAAAvI,EAAAhB,GAAAuJ,EAAA0nC,UAAwB,OAAApxC,GAAA/B,KAAA8yC,SAAAzwC,GAAAN,EAAA2wC,SAAAlxC,EAAAxB,KAAA0d,KAAArb,GAAArC,KAAAozC,UAAA5xC,EAAAgpC,MAAAxqC,KAAA4oC,QAAAvC,UAAA7kC,EAAA5C,MAAA4C,KAA8GO,EAAAgB,UAAAqwC,UAAA,SAAA/wC,EAAAb,GAAqC,GAAAiK,GAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,CAAoB,OAAAgK,GAAA,GAAAyH,KAAAE,IAAApT,KAAAyO,GAAA7C,QAAA,EAAA5L,KAAAyO,GAAA5C,SAAA,SAAAjJ,EAAA,IAAA6I,EAAAvJ,EAAAuJ,EAAA,EAAA1J,EAAA0J,EAAA,EAAAzL,KAAAgzC,MAAA3lC,MAAsGuE,KAAAvP,EAAAyN,UAAA,KAAoB5M,EAAAlD,KAAAgzC,MAAAjjC,UAAAxE,EAAA2H,KAAAE,IAAAxQ,EAAAM,EAAA0I,MAAA1J,EAAAgB,EAAA2I,QAAA7L,KAAAgzC,MAAA3lC,MAA2EyC,UAAA,IAAAvE,EAAA,IAAAA,EAAA,KAAArI,EAAAiD,EAAAjD,EAAA0I,MAAA,QAAA1I,EAAAkD,EAAAlD,EAAA2I,UAA6D7L,KAAAkzC,MAAA7lC,MAAmBuE,KAAApQ,EAAAsO,UAAA,KAAoBmH,EAAAjX,KAAAkzC,MAAAnjC,UAAAtO,EAAAyR,KAAAE,IAAAxQ,EAAAqU,EAAArL,MAAA7J,EAAAkV,EAAApL,QAAA7L,KAAAkzC,MAAA7lC,MAA2EyC,UAAA,IAAArO,EAAA,IAAAA,EAAA,KAAAwV,EAAA9Q,EAAA8Q,EAAArL,MAAA,OAAAqL,EAAA7Q,KAAoDrE,EAAAgB,UAAAkwC,oBAAA,SAAA5wC,EAAAb,EAAAiK,EAAA1J,EAAAG,GAAqD,GAAAU,EAAM,OAAAA,GAAA5C,KAAAusB,QAAA3a,KAAAvP,EAAAb,EAAA,IAAA6L,KAAA,YAAAtL,GAAAsL,KAAA,OAAA5B,GAAA,MAAAvJ,GAAAU,EAAAyK,KAAA,cAAAnL,GAAAU,GAAyGb,EAAAgB,UAAA4lC,cAAA,WAAsC,MAAA3oC,MAAAgqC,UAAA,KAAAhqC,KAAAusB,QAAAH,QAAApsB,KAAAyO,GAAA7C,QAAA5L,KAAAyO,GAAA5C,UAAA7L,KAAA4qC,UAAgG7oC,GAAGP,EAAA4mC,cAAA5mC,EAAAuxC,aAAA,SAAA1wC,GAA4C,QAAAb,GAAAa,EAAAb,EAAAiK,EAAA1J,EAAAG,EAAAgB,EAAAqI,EAAA0L,EAAAxV,EAAAwB,GAAgCjD,KAAAuM,GAAAlK,EAAArC,KAAA4M,GAAApL,EAAAxB,KAAAqzC,MAAA5nC,EAAAzL,KAAAszC,MAAAvxC,EAAA/B,KAAA0Z,MAAAnO,EAAAvL,KAAA4yC,gBAAA37B,EAAAjX,KAAA2xB,MAAAlwB,EAAAzB,KAAAusB,QAAAtpB,EAAAjD,KAAAmzC,SAAAvwC,EAAA5C,KAAAmzC,SAAAnzC,WAAA0yC,OAAA9vC,EAAA5C,KAAA0yC,OAAA1yC,WAAAuzC,OAAArgC,KAAA+N,IAAA/e,GAAAlC,KAAAwzC,OAAAtgC,KAAA8N,IAAA9e,GAAAlC,KAAAyzC,OAAAvgC,KAAA+N,IAAA/d,GAAAlD,KAAA0zC,OAAAxgC,KAAA8N,IAAA9d,GAAAlD,KAAA2zC,QAAAzwC,EAAAhB,EAAAgR,KAAAI,GAAA,IAAAtT,KAAA0R,KAAA1R,KAAA4zC,YAAA5zC,KAAAqzC,MAAA,EAAArzC,KAAAqzC,MAAArzC,KAAAszC,MAAA,GAAAtzC,KAAA6zC,aAAA7zC,KAAA4zC,YAAA5zC,KAAAqzC,MAAA,EAAArzC,KAAAqzC,MAAArzC,KAAAszC,OAAAtzC,KAAAotC,QAAAptC,KAAA8zC,QAAA9zC,KAAAqzC,OAA6d,MAAA9nC,GAAA/J,EAAAa,GAAAb,EAAAuB,UAAAgxC,cAAA,SAAA1xC,GAAoD,OAAArC,KAAAuM,GAAAlK,EAAArC,KAAAuzC,OAAAvzC,KAAA4M,GAAAvK,EAAArC,KAAAwzC,OAAAxzC,KAAAuM,GAAAlK,EAAArC,KAAAyzC,OAAAzzC,KAAA4M,GAAAvK,EAAArC,KAAA0zC,SAAgGlyC,EAAAuB,UAAA6wC,YAAA,SAAAvxC,EAAAb,GAAuC,GAAAiK,GAAA1J,EAAAG,EAAAU,EAAAM,EAAAqI,EAAA0L,EAAAxV,EAAAwB,EAAAykC,CAAwB,OAAAzkC,GAAAjD,KAAA+zC,cAAA1xC,GAAAoJ,EAAAxI,EAAA,GAAAf,EAAAe,EAAA,GAAAlB,EAAAkB,EAAA,GAAAL,EAAAK,EAAA,GAAAykC,EAAA1nC,KAAA+zC,cAAAvyC,GAAA0B,EAAAwkC,EAAA,GAAAzwB,EAAAywB,EAAA,GAAAn8B,EAAAm8B,EAAA,GAAAjmC,EAAAimC,EAAA,OAAAj8B,EAAA,IAAAvJ,EAAA,IAAAG,EAAA,IAAAA,EAAA,MAAArC,KAAA2zC,QAAA,MAAA5xC,EAAA,IAAAa,EAAA,IAAA2I,EAAA,IAAA9J,EAAA,IAAAD,EAAA,IAAAA,EAAA,MAAAxB,KAAA2zC,QAAA,MAAAzwC,EAAA,IAAA+T,EAAA,KAAqOzV,EAAAuB,UAAA+wC,QAAA,SAAAzxC,GAAiC,GAAAb,GAAAiK,EAAA1J,EAAAG,EAAAU,CAAc,OAAAA,GAAA5C,KAAA+zC,cAAA1xC,GAAAb,EAAAoB,EAAA,GAAAb,EAAAa,EAAA,GAAA6I,EAAA7I,EAAA,GAAAV,EAAAU,EAAA,OAAApB,EAAA,IAAAO,EAAA,IAAAM,EAAA,IAAAA,EAAA,MAAArC,KAAA2zC,QAAA,MAAAloC,EAAA,IAAAvJ,GAAoHV,EAAAuB,UAAAjD,OAAA,WAA+B,GAAAuC,GAAArC,IAAW,OAAAA,MAAAg0C,IAAAh0C,KAAAi0C,aAAAj0C,KAAAotC,QAAAptC,KAAA0Z,OAAA1Z,KAAAyjB,IAAAzjB,KAAAk0C,iBAAAl0C,KAAA0R,KAAA1R,KAAA0Z,MAAA1Z,KAAA4yC,gBAAA,WAA+I,MAAAvwC,GAAAimC,KAAA,QAAAjmC,EAAAsvB,QAA+B,WAAY,MAAAtvB,GAAAimC,KAAA,QAAAjmC,EAAAsvB,UAAiCnwB,EAAAuB,UAAAkxC,aAAA,SAAA5xC,EAAAb,GAAwC,MAAAxB,MAAAusB,QAAA7a,KAAArP,GAAAgL,MAAkCoI,OAAAjU,EAAAuU,eAAA,EAAAV,QAAA,KAAsC7T,EAAAuB,UAAAmxC,iBAAA,SAAA7xC,EAAAb,EAAAiK,EAAA1J,EAAAG,GAAkD,MAAAlC,MAAAusB,QAAA7a,KAAArP,GAAAgL,MAAkCsH,KAAAnT,EAAAiU,OAAAhK,EAAAsK,eAAA,IAAiC4U,MAAA5oB,GAAA4wC,MAAAzwC,IAAoBV,EAAAuB,UAAA2vC,OAAA,WAA+B,IAAA1yC,KAAAm0C,SAAA,MAAAn0C,MAAAyjB,IAAA0N,SAA2Czf,KAAA1R,KAAA6zC,cAAuB,UAAA7zC,KAAAg0C,IAAA7iB,SAA6B9b,QAAA,GAAU,UAAArV,KAAAm0C,UAAA,GAA4B3yC,EAAAuB,UAAAowC,SAAA,WAAiC,GAAAnzC,KAAAm0C,SAAA,MAAAn0C,MAAAyjB,IAAA0N,SAA0Czf,KAAA1R,KAAA0R,MAAe,UAAA1R,KAAAg0C,IAAA7iB,SAA6B9b,QAAA,GAAU,UAAArV,KAAAm0C,UAAA,GAA4B3yC,GAAGA,EAAA4mC,gBAAiB1mC,KAAA1B,OAAa,SAAAqC,EAAAb,GAAea,EAAApB,QAAA,SAAAoB,EAAAb,EAAAiK,EAAA1J,GAA4B,GAAAG,GAAAU,EAAAP,QAAea,QAAAb,GAAAyiC,OAAoB,YAAA5hC,GAAA,aAAAA,IAAAhB,EAAAG,EAAAO,EAAAP,EAAAyiC,QAAgD,IAAAv5B,GAAA,kBAAA3I,KAAAgmC,QAAAhmC,CAAuC,IAAApB,IAAA+J,EAAAzL,OAAA0B,EAAA1B,OAAAyL,EAAAzK,gBAAAU,EAAAV,iBAAA2K,IAAAF,EAAA6oC,SAAA3oC,GAAA1J,EAAA,CAAmF,GAAAkV,GAAA1L,EAAA8oC,WAAA9oC,EAAA8oC,YAAkC31C,QAAA41C,KAAAvyC,GAAA2rB,QAAA,SAAArrB,GAAmC,GAAAb,GAAAO,EAAAM,EAAW4U,GAAA5U,GAAA,WAAgB,MAAAb,MAAY,OAAO+yC,SAAAryC,EAAAjB,QAAA2B,EAAAgmC,QAAAr9B,KAAiC,SAAAlJ,EAAAb,EAAAiK,GAAiB,GAAA1J,GAAA0J,EAAA,GAAY,iBAAA1J,SAAAM,EAAAb,EAAAO,EAAA,MAAqC0J,EAAA,IAAA1J,MAAYA,EAAAyyC,SAAAnyC,EAAApB,QAAAc,EAAAyyC,SAA+B,SAAAnyC,EAAAb,EAAAiK,GAAiB,GAAA1J,GAAA0J,EAAA,GAAAA,EAAA,GAAAA,EAAA,cAAiCpJ,GAAApB,QAAAc,EAAAd,SAAoB,SAAAoB,EAAAb,EAAAiK,GAAiB,GAAA1J,GAAA0J,EAAA,GAAAA,EAAA,IAAAA,EAAA,cAAkCpJ,GAAApB,QAAAc,EAAAd,SAAoB,SAAAoB,EAAAb,EAAAiK,GAAiB,GAAA1J,GAAA0J,EAAA,GAAAA,EAAA,IAAAA,EAAA,cAAkCpJ,GAAApB,QAAAc,EAAAd,SAAoB,SAAAoB,EAAAb,EAAAiK,GAAiB,GAAA1J,GAAA0J,EAAA,GAAAA,EAAA,IAAAA,EAAA,cAAkCpJ,GAAApB,QAAAc,EAAAd,SAAoB,SAAAoB,EAAAb,EAAAiK,GAAiB,YAAa,SAAA1J,GAAAM,GAAc,MAAAA,MAAAE,WAAAF,GAA0ByiC,QAAAziC,GAAW3D,OAAAC,eAAA6C,EAAA,cAAsC5C,OAAA,IAAS6M,EAAA,GAAAA,EAAA,EAAY,IAAAvJ,GAAAuJ,EAAA,GAAA7I,EAAAb,EAAAG,GAAAgB,EAAAuI,EAAA,GAAAF,EAAAxJ,EAAAmB,EAAgC1B,GAAAsjC,SAAW3lC,KAAA,aAAAs1C,QAAAlpC,EAAAu5B,QAAAmD,MAAAvqB,KAAA,WAA0D,OAAOg3B,MAAA,OAAYC,OAAQj3B,KAAA,SAAArb,GAAiB,GAAAb,GAAAxB,IAAWA,MAAA40C,UAAA,WAA0BpzC,EAAAkzC,MAAA9L,QAAApD,OAAA5iC,EAAAkiC,QAAAC,SAAAvjC,EAAAgkC,QAAAhkC,EAAAkzC,MAAA9L,QAAAtD,KAAA9jC,EAAA8jC,KAAA9jC,EAAAkzC,MAAA9L,QAAArD,MAAA3iC,EAAAkiC,QAAAC,SAAAvjC,EAAA+jC,OAAA/jC,EAAA8kC,aAAA9kC,EAAAkzC,MAAA9L,QAAAtC,WAAA1jC,EAAAkiC,QAAAC,SAAAvjC,EAAA8kC,aAAA9kC,EAAAkzC,MAAAtL,QAAAxmC,EAAAkiC,QAAAC,SAAAvjC,EAAAkc,WAA6Pm3B,QAAA,WAAoB,GAAAxyC,IAAOsL,QAAA3N,KAAA0O,GAAAgP,KAAA9a,EAAAkiC,QAAAC,SAAA/kC,KAAA0d,MAAAmoB,OAAAjjC,EAAAkiC,QAAAI,UAAAllC,KAAA6lC,QAAAL,OAAA5iC,EAAAkiC,QAAAC,SAAA/kC,KAAAwlC,QAAAF,KAAAtlC,KAAAslC,KAAAC,MAAA3iC,EAAAkiC,QAAAC,SAAA/kC,KAAAulC,OAAAQ,KAAAnjC,EAAAkiC,QAAAI,UAAAllC,KAAA+lC,MAAAC,cAAAhmC,KAAAgmC,cAAAC,aAAArjC,EAAAkiC,QAAA7wB,MAAAjU,KAAAimC,cAAAE,eAAAnmC,KAAAmmC,eAAAC,eAAApmC,KAAAomC,eAAAI,UAAAxmC,KAAAwmC,UAAAC,UAAAzmC,KAAAymC,UAAA7mB,KAAA5f,KAAA4f,KAAAF,KAAA1f,KAAA0f,KAAAknB,OAAAhkC,EAAAkiC,QAAAI,UAAAllC,KAAA4mC,QAAAjB,UAAA3lC,KAAA2lC,UAAAkB,UAAAjkC,EAAAkiC,QAAAI,UAAAllC,KAAA6mC,WAAAC,UAAA9mC,KAAA8mC,UAAAC,SAAA/mC,KAAA+mC,SAAAI,YAAAnnC,KAAAmnC,YAAAE,gBAAArnC,KAAAqnC,gBAAAE,iBAAAvnC,KAAAunC,iBAAAvQ,YAAAh3B,KAAAg3B,YAAAyQ,eAAAznC,KAAAynC,eAA0wBznC,MAAA4nC,kBAAA,aAAAvlC,GAAArC,KAAA2nC,UAAA,UAAAtlC,GAAArC,KAAA4nC,kBAAA,kBAAAvlC,GAAArC,KAAA4nC,kBAAA,oBAAAvlC,GAAArC,KAAA2nC,UAAA,aAAAtlC,GAAArC,KAAA2nC,UAAA,eAAAtlC,GAAArC,KAAA2nC,UAAA,eAAAtlC,GAAArC,KAAA4nC,kBAAA,QAAAvlC,GAAArC,KAAA4nC,kBAAA,iBAAAvlC,GAAArC,KAAA4nC,kBAAA,SAAAvlC,GAAArC,KAAA4nC,kBAAA,kBAAAvlC,GAAArC,KAAA2nC,UAAA,gBAAAtlC,GAAArC,KAAA00C,MAAAvM,OAAAoJ,KAAAlvC,MAAwd,SAAAA,EAAAb,EAAAiK,GAAiB,YAAa,SAAA1J,GAAAM,GAAc,MAAAA,MAAAE,WAAAF,GAA0ByiC,QAAAziC,GAAW3D,OAAAC,eAAA6C,EAAA,cAAsC5C,OAAA,IAAS6M,EAAA,GAAAA,EAAA,EAAY,IAAAvJ,GAAAuJ,EAAA,GAAA7I,EAAAb,EAAAG,GAAAgB,EAAAuI,EAAA,GAAAF,EAAAxJ,EAAAmB,EAAgC1B,GAAAsjC,SAAW3lC,KAAA,YAAAs1C,QAAAlpC,EAAAu5B,QAAA+C,KAAAnqB,KAAA,WAAwD,OAAOg3B,MAAA,OAAYC,OAAQj3B,KAAA,SAAArb,GAAiB,GAAAb,GAAAxB,IAAWA,MAAA40C,UAAA,WAA0BpzC,EAAAkzC,MAAA9L,QAAApD,OAAA5iC,EAAAkiC,QAAAC,SAAAvjC,EAAAgkC,QAAAhkC,EAAAkzC,MAAA9L,QAAAtD,KAAA9jC,EAAA8jC,KAAA9jC,EAAAkzC,MAAA9L,QAAArD,MAAA3iC,EAAAkiC,QAAAC,SAAAvjC,EAAA+jC,OAAA/jC,EAAA4jC,YAAA5jC,EAAAkzC,MAAA9L,QAAAxD,UAAAxiC,EAAAkiC,QAAAC,SAAAvjC,EAAA4jC,YAAA5jC,EAAAkzC,MAAAtL,QAAA5nC,EAAAkc,UAAsOm3B,QAAA,WAAoB,GAAAxyC,IAAOsL,QAAA3N,KAAA0O,GAAAgP,KAAA9a,EAAAkiC,QAAAC,SAAA/kC,KAAA0d,MAAA8nB,OAAA5iC,EAAAkiC,QAAAC,SAAA/kC,KAAAwlC,QAAAK,OAAAjjC,EAAAkiC,QAAAI,UAAAllC,KAAA6lC,QAAAP,KAAAtlC,KAAAslC,KAAAC,MAAA3iC,EAAAkiC,QAAAC,SAAA/kC,KAAAulC,OAAAG,KAAA9iC,EAAAkiC,QAAAI,UAAAllC,KAAA0lC,MAAA9lB,KAAA5f,KAAA4f,KAAAF,KAAA1f,KAAA0f,KAAAimB,UAAA3lC,KAAA2lC,UAAAG,WAAAljC,EAAAkiC,QAAAI,UAAAllC,KAAA8lC,YAAAF,QAAAhjC,EAAAkiC,QAAAI,UAAAllC,KAAA4lC,SAAAG,KAAAnjC,EAAAkiC,QAAAI,UAAAllC,KAAA+lC,MAAAC,cAAAhmC,KAAAgmC,cAAAC,aAAArjC,EAAAkiC,QAAA7wB,MAAAjU,KAAAimC,cAAAE,eAAAnmC,KAAAmmC,eAAAC,eAAApmC,KAAAomC,eAAAe,YAAAnnC,KAAAmnC,YAAAX,UAAAxmC,KAAAwmC,UAAAC,UAAAzmC,KAAAymC,UAAsnBzmC,MAAA4nC,kBAAA,YAAAvlC,GAAArC,KAAA2nC,UAAA,eAAAtlC,GAAArC,KAAA2nC,UAAA,eAAAtlC,GAAArC,KAAA2nC,UAAA,gBAAAtlC,GAAArC,KAAA00C,MAAAvM,OAAAwJ,IAAAtvC,MAAqK,SAAAA,EAAAb,EAAAiK,GAAiB,YAAa,SAAA1J,GAAAM,GAAc,MAAAA,MAAAE,WAAAF,GAA0ByiC,QAAAziC,GAAW3D,OAAAC,eAAA6C,EAAA,cAAsC5C,OAAA,IAAS6M,EAAA,GAAAA,EAAA,EAAY,IAAAvJ,GAAAuJ,EAAA,GAAA7I,EAAAb,EAAAG,GAAAgB,EAAAuI,EAAA,GAAAF,EAAAxJ,EAAAmB,EAAgC1B,GAAAsjC,SAAW3lC,KAAA,cAAAs1C,QAAAlpC,EAAAu5B,QAAAiD,OAAArqB,KAAA,WAA4D,OAAOg3B,MAAA,OAAYC,OAAQj3B,KAAA,SAAArb,GAAiB,GAAAb,GAAAxB,IAAWA,MAAA40C,UAAA,WAA0BpzC,EAAAkc,MAAAlc,EAAAkc,KAAAlZ,OAAA,IAAAhD,EAAAkzC,OAAAlzC,EAAAszC,cAAAtzC,EAAAkzC,QAAAlzC,EAAAggC,SAAAhgC,EAAAkzC,MAAA9L,QAAApH,OAAA5+B,EAAAkiC,QAAAC,SAAAvjC,EAAAggC,SAAAhgC,EAAAkzC,MAAAtL,QAAAxmC,EAAAkiC,QAAAC,SAAAvjC,EAAAkc,YAA6Km3B,QAAA,WAAoB70C,KAAA0d,MAAA1d,KAAA0d,KAAAlZ,OAAA,GAAAxE,KAAA80C,eAAkDhN,SAAUgN,YAAA,WAAuB,GAAAzyC,IAAOsL,QAAA3N,KAAA0O,GAAAgP,KAAA9a,EAAAkiC,QAAAC,SAAA/kC,KAAA0d,MAAAmoB,OAAAjjC,EAAAkiC,QAAAI,UAAAllC,KAAA6lC,QAA4F7lC,MAAA4nC,kBAAA,SAAAvlC,GAAArC,KAAA2nC,UAAA,YAAAtlC,GAAArC,KAAA00C,MAAAvM,OAAAsK,MAAApwC,OAA+F,SAAAA,EAAAb,EAAAiK,GAAiB,YAAa,SAAA1J,GAAAM,GAAc,MAAAA,MAAAE,WAAAF,GAA0ByiC,QAAAziC,GAAW3D,OAAAC,eAAA6C,EAAA,cAAsC5C,OAAA,IAAS6M,EAAA,GAAAA,EAAA,EAAY,IAAAvJ,GAAAuJ,EAAA,GAAA7I,EAAAb,EAAAG,GAAAgB,EAAAuI,EAAA,GAAAF,EAAAxJ,EAAAmB,EAAgC1B,GAAAsjC,SAAW3lC,KAAA,aAAAs1C,QAAAlpC,EAAAu5B,QAAAkD,MAAAtqB,KAAA,WAA0D,OAAOg3B,MAAA,OAAYC,OAAQj3B,KAAA,SAAArb,GAAiB,GAAAb,GAAAxB,IAAWA,MAAA40C,UAAA,WAA0BpzC,EAAAkzC,MAAA9L,QAAApD,OAAA5iC,EAAAkiC,QAAAC,SAAAvjC,EAAAgkC,QAAAhkC,EAAAkzC,MAAA9L,QAAAtD,KAAA9jC,EAAA8jC,KAAA9jC,EAAAkzC,MAAA9L,QAAArD,MAAA3iC,EAAAkiC,QAAAC,SAAAvjC,EAAA+jC,OAAA/jC,EAAA8kC,aAAA9kC,EAAAkzC,MAAA9L,QAAAtC,WAAA1jC,EAAAkiC,QAAAC,SAAAvjC,EAAA8kC,aAAA9kC,EAAAkzC,MAAAtL,QAAAxmC,EAAAkiC,QAAAC,SAAAvjC,EAAAkc,WAA6Pm3B,QAAA,WAAoB,GAAAxyC,IAAOsL,QAAA3N,KAAA0O,GAAAgP,KAAA9a,EAAAkiC,QAAAC,SAAA/kC,KAAA0d,MAAAmoB,OAAAjjC,EAAAkiC,QAAAI,UAAAllC,KAAA6lC,QAAAL,OAAA5iC,EAAAkiC,QAAAC,SAAA/kC,KAAAwlC,QAAAF,KAAAtlC,KAAAslC,KAAAC,MAAA3iC,EAAAkiC,QAAAC,SAAA/kC,KAAAulC,OAAAQ,KAAAnjC,EAAAkiC,QAAAI,UAAAllC,KAAA+lC,MAAAC,cAAAhmC,KAAAgmC,cAAAC,aAAArjC,EAAAkiC,QAAA7wB,MAAAjU,KAAAimC,cAAAE,eAAAnmC,KAAAmmC,eAAAC,eAAApmC,KAAAomC,eAAAI,UAAAxmC,KAAAwmC,UAAAC,UAAAzmC,KAAAymC,UAAA7mB,KAAA5f,KAAA4f,KAAAF,KAAA1f,KAAA0f,KAAAknB,OAAAhkC,EAAAkiC,QAAAI,UAAAllC,KAAA4mC,QAAAjB,UAAA3lC,KAAA2lC,UAAAkB,UAAAjkC,EAAAkiC,QAAAI,UAAAllC,KAAA6mC,WAAAC,UAAA9mC,KAAA8mC,UAAAC,SAAA/mC,KAAA+mC,SAAAI,YAAAnnC,KAAAmnC,YAAAE,gBAAArnC,KAAAqnC,gBAAAE,iBAAAvnC,KAAAunC,iBAAAvQ,YAAAh3B,KAAAg3B,YAAuuBh3B,MAAA4nC,kBAAA,aAAAvlC,GAAArC,KAAA2nC,UAAA,UAAAtlC,GAAArC,KAAA4nC,kBAAA,kBAAAvlC,GAAArC,KAAA4nC,kBAAA,oBAAAvlC,GAAArC,KAAA2nC,UAAA,aAAAtlC,GAAArC,KAAA2nC,UAAA,eAAAtlC,GAAArC,KAAA2nC,UAAA,eAAAtlC,GAAArC,KAAA4nC,kBAAA,QAAAvlC,GAAArC,KAAA4nC,kBAAA,iBAAAvlC,GAAArC,KAAA4nC,kBAAA,SAAAvlC,GAAArC,KAAA4nC,kBAAA,kBAAAvlC,GAAArC,KAAA2nC,UAAA,gBAAAtlC,GAAArC,KAAA00C,MAAAvM,OAAAgF,KAAA9qC,MAAwd,SAAAA,EAAAb,EAAAiK,GAAiB,YAAa,SAAA1J,GAAAM,GAAc,MAAAA,MAAAE,WAAAF,GAA0ByiC,QAAAziC,GAAW,GAAAH,GAAAuJ,EAAA,GAAA7I,EAAAb,EAAAG,GAAAgB,EAAAuI,EAAA,GAAAF,EAAAxJ,EAAAmB,GAAA+T,EAAAxL,EAAA,GAAAhK,EAAAM,EAAAkV,GAAAhU,EAAAwI,EAAA,GAAAi8B,EAAA3lC,EAAAkB,GAAApB,GAA+DkzC,WAAAnyC,EAAAkiC,QAAAkQ,SAAAzpC,EAAAu5B,QAAAmQ,UAAAxzC,EAAAqjC,QAAAoQ,UAAAxN,EAAA5C,QAAiFziC,GAAApB,QAAAY,GAAY,SAAAQ,EAAAb,EAAAiK,GAAiBjK,EAAAa,EAAApB,QAAAwK,EAAA,MAAAjK,EAAA2D,MAAA9C,EAAAb,EAAA,waAAsc,MAAO,SAAAa,EAAAb,GAAea,EAAApB,QAAA,WAAqB,GAAAoB,KAAS,OAAAA,GAAAmR,SAAA,WAA6B,OAAAnR,MAAAb,EAAA,EAAiBA,EAAAxB,KAAAwE,OAAchD,IAAA,CAAK,GAAAiK,GAAAzL,KAAAwB,EAAciK,GAAA,GAAApJ,EAAA8C,KAAA,UAAAsG,EAAA,OAA6BA,EAAA,QAASpJ,EAAA8C,KAAAsG,EAAA,IAAgB,MAAApJ,GAAAoD,KAAA,KAAkBpD,EAAAb,EAAA,SAAAA,EAAAiK,GAAmB,gBAAAjK,SAAA,KAAAA,EAAA,KAAsC,QAAAO,MAAYG,EAAA,EAAKA,EAAAlC,KAAAwE,OAActC,IAAA,CAAK,GAAAU,GAAA5C,KAAAkC,GAAA,EAAiB,iBAAAU,KAAAb,EAAAa,IAAA,GAA8B,IAAAV,EAAA,EAAQA,EAAAV,EAAAgD,OAAWtC,IAAA,CAAK,GAAAgB,GAAA1B,EAAAU,EAAW,iBAAAgB,GAAA,IAAAnB,EAAAmB,EAAA,MAAAuI,IAAAvI,EAAA,GAAAA,EAAA,GAAAuI,MAAAvI,EAAA,OAAAA,EAAA,aAAAuI,EAAA,KAAApJ,EAAA8C,KAAAjC,MAAgGb,IAAI,SAAAA,EAAAb,GAAea,EAAApB,SAAWnB,OAAA,WAAkB,GAAAuC,GAAArC,KAAAwB,EAAAa,EAAAnC,cAA8B,QAAAmC,EAAAjC,MAAAD,IAAAqB,GAAA,OAA6BlB,OAAOoO,GAAArM,EAAAqM,OAAW5N,qBAAqB,SAAAuB,EAAAb,GAAea,EAAApB,SAAWnB,OAAA,WAAkB,GAAAuC,GAAArC,KAAAwB,EAAAa,EAAAnC,cAA8B,QAAAmC,EAAAjC,MAAAD,IAAAqB,GAAA,OAA6BlB,OAAOoO,GAAArM,EAAAqM,OAAW5N,qBAAqB,SAAAuB,EAAAb,GAAea,EAAApB,SAAWnB,OAAA,WAAkB,GAAAuC,GAAArC,KAAAwB,EAAAa,EAAAnC,cAA8B,QAAAmC,EAAAjC,MAAAD,IAAAqB,GAAA,OAA6BlB,OAAOoO,GAAArM,EAAAqM,OAAW5N,qBAAqB,SAAAuB,EAAAb,GAAea,EAAApB,SAAWnB,OAAA,WAAkB,GAAAuC,GAAArC,KAAAwB,EAAAa,EAAAnC,cAA8B,QAAAmC,EAAAjC,MAAAD,IAAAqB,GAAA,OAA6BlB,OAAOoO,GAAArM,EAAAqM,OAAW5N,qBAAqB,SAAAuB,EAAAb,GAAe,QAAAiK,GAAApJ,EAAAb,GAAgB,OAAAiK,GAAA,EAAYA,EAAApJ,EAAAmC,OAAWiH,IAAA,CAAK,GAAA1J,GAAAM,EAAAoJ,GAAAvJ,EAAAe,EAAAlB,EAAA2M,GAAqB,IAAAxM,EAAA,CAAMA,EAAAizC,MAAS,QAAAvyC,GAAA,EAAYA,EAAAV,EAAAkzC,MAAA5wC,OAAiB5B,IAAAV,EAAAkzC,MAAAxyC,GAAAb,EAAAqzC,MAAAxyC,GAA2B,MAAKA,EAAAb,EAAAqzC,MAAA5wC,OAAiB5B,IAAAV,EAAAkzC,MAAAjwC,KAAAoG,EAAAxJ,EAAAqzC,MAAAxyC,GAAApB,QAAkC,CAAK,OAAA0B,MAAAN,EAAA,EAAiBA,EAAAb,EAAAqzC,MAAA5wC,OAAiB5B,IAAAM,EAAAiC,KAAAoG,EAAAxJ,EAAAqzC,MAAAxyC,GAAApB,GAA4ByB,GAAAlB,EAAA2M,KAASA,GAAA3M,EAAA2M,GAAAymC,KAAA,EAAAC,MAAAlyC,KAA0B,QAAAnB,GAAAM,GAAc,OAAAb,MAAAiK,KAAiB1J,EAAA,EAAKA,EAAAM,EAAAmC,OAAWzC,IAAA,CAAK,GAAAG,GAAAG,EAAAN,GAAAa,EAAAV,EAAA,GAAAgB,EAAAhB,EAAA,GAAAqJ,EAAArJ,EAAA,GAAA+U,EAAA/U,EAAA,GAAAT,GAA0C87B,IAAAr6B,EAAAmyC,MAAA9pC,EAAA+pC,UAAAr+B,EAA2BxL,GAAA7I,GAAA6I,EAAA7I,GAAAwyC,MAAAjwC,KAAA1D,GAAAD,EAAA2D,KAAAsG,EAAA7I,IAAqC8L,GAAA9L,EAAAwyC,OAAA3zC,KAAiB,MAAAD,GAAS,QAAAU,GAAAG,EAAAb,GAAgB,GAAAiK,GAAA7J,IAAAG,EAAAqN,IAAA5K,OAAA,EAA0B,YAAAnC,EAAAkzC,SAAAxzC,IAAA0nB,YAAAhe,EAAAqe,aAAAtoB,EAAAO,EAAA0nB,aAAAhe,EAAA8O,YAAA/Y,GAAAiK,EAAAqe,aAAAtoB,EAAAiK,EAAAuM,YAAA5I,EAAAjK,KAAA3D,OAAgI,CAAK,cAAAa,EAAAkzC,SAAA,SAAAnY,OAAA,qEAA+G3xB,GAAA8O,YAAA/Y,IAAkB,QAAAoB,GAAAP,GAAcA,EAAAsnB,WAAAvN,YAAA/Z,EAA4B,IAAAb,GAAA4N,EAAAmN,QAAAla,EAAmBb,IAAA,GAAA4N,EAAAnL,OAAAzC,EAAA,GAAoB,QAAA0B,GAAAb,GAAc,GAAAb,GAAAwQ,SAAA8F,cAAA,QAAsC,OAAAtW,GAAAZ,KAAA,WAAAsB,EAAAG,EAAAb,KAAkC,QAAA+J,GAAAlJ,EAAAb,GAAgB,GAAAiK,GAAA1J,EAAAG,CAAU,IAAAV,EAAAg0C,UAAA,CAAgB,GAAAjqC,GAAAnF,GAAUqF,GAAAhH,MAAAvB,EAAA1B,IAAAO,EAAAkV,EAAAtU,KAAA,KAAA8I,EAAAF,GAAA,GAAArJ,EAAA+U,EAAAtU,KAAA,KAAA8I,EAAAF,GAAA,OAA0DE,GAAAvI,EAAA1B,GAAAO,EAAAN,EAAAkB,KAAA,KAAA8I,GAAAvJ,EAAA,WAA0CU,EAAA6I,GAAM,OAAA1J,GAAAM,GAAA,SAAAb,GAAwB,GAAAA,EAAA,CAAM,GAAAA,EAAA+7B,MAAAl7B,EAAAk7B,KAAA/7B,EAAA6zC,QAAAhzC,EAAAgzC,OAAA7zC,EAAA8zC,YAAAjzC,EAAAizC,UAAA,MAAsEvzC,GAAAM,EAAAb,OAAOU,MAAU,QAAA+U,GAAA5U,EAAAb,EAAAiK,EAAA1J,GAAoB,GAAAG,GAAAuJ,EAAA,GAAA1J,EAAAw7B,GAAiB,IAAAl7B,EAAAozC,WAAApzC,EAAAozC,WAAAv5B,QAAAva,EAAAH,EAAAU,OAA4C,CAAK,GAAAU,GAAAoP,SAAAsoB,eAAAp4B,GAAAgB,EAAAb,EAAAqzC,UAAgDxyC,GAAA1B,IAAAa,EAAA+Z,YAAAlZ,EAAA1B,IAAA0B,EAAAsB,OAAAnC,EAAAynB,aAAAlnB,EAAAM,EAAA1B,IAAAa,EAAAkY,YAAA3X,IAA4E,QAAAnB,GAAAY,EAAAb,GAAgB,GAAAiK,GAAAjK,EAAA+7B,IAAAx7B,EAAAP,EAAA6zC,MAAAnzC,EAAAV,EAAA8zC,SAAoC,IAAAvzC,GAAAM,EAAAyzB,aAAA,QAAA/zB,GAAAG,IAAAuJ,GAAA,mBAAAvJ,EAAAyzC,QAAA,SAAAlqC,GAAA,uDAA8HmqC,KAAAC,SAAAC,mBAAA9Q,KAAA+Q,UAAA7zC,MAAA,OAAAG,EAAAozC,WAAApzC,EAAAozC,WAAAv5B,QAAAzQ,MAA0G,CAAK,KAAKpJ,EAAA2V,YAAa3V,EAAA+Z,YAAA/Z,EAAA2V,WAA6B3V,GAAAkY,YAAAvI,SAAAsoB,eAAA7uB,KAA2C,GAAAxI,MAAQykC,EAAA,SAAArlC,GAAe,GAAAb,EAAM,mBAAkB,gBAAAA,MAAAa,EAAAmB,MAAAxD,KAAAuE,YAAA/C,IAAkDK,EAAA6lC,EAAA,WAAgB,qBAAAlU,KAAApyB,OAAA40C,UAAAC,UAAAhjC,iBAAoErR,EAAA8lC,EAAA,WAAiB,MAAA11B,UAAAkkC,MAAAlkC,SAAAwmB,qBAAA,aAA+D/zB,EAAA,KAAA2B,EAAA,EAAAgJ,IAAkB/M,GAAApB,QAAA,SAAAoB,EAAAb,GAAwB,sBAAA20C,eAAA,gBAAAnkC,UAAA,SAAAorB,OAAA,+DAA+I57B,aAAO,KAAAA,EAAAg0C,YAAAh0C,EAAAg0C,UAAA3zC,SAAA,KAAAL,EAAA+zC,WAAA/zC,EAAA+zC,SAAA,SAAoF,IAAArzC,GAAAH,EAAAM,EAAW,OAAAoJ,GAAAvJ,EAAAV,GAAA,SAAAa,GAA0B,OAAAO,MAAAM,EAAA,EAAiBA,EAAAhB,EAAAsC,OAAWtB,IAAA,CAAK,GAAAqI,GAAArJ,EAAAgB,GAAA+T,EAAAhU,EAAAsI,EAAAmD,GAAqBuI,GAAAk+B,OAAAvyC,EAAAuC,KAAA8R,GAAmB5U,GAAMoJ,EAAA1J,EAAAM,GAAAb,EAAU,QAAA0B,GAAA,EAAYA,EAAAN,EAAA4B,OAAWtB,IAAA,CAAK,GAAA+T,GAAArU,EAAAM,EAAW,QAAA+T,EAAAk+B,KAAA,CAAe,OAAA1zC,GAAA,EAAYA,EAAAwV,EAAAm+B,MAAA5wC,OAAiB/C,IAAAwV,EAAAm+B,MAAA3zC,WAAiBwB,GAAAgU,EAAAvI,OAAmB,IAAA/M,GAAA,WAAiB,GAAAU,KAAS,iBAAAb,EAAAiK,GAAqB,MAAApJ,GAAAb,GAAAiK,EAAApJ,EAAA06B,OAAAv9B,SAAAiG,KAAA,cAAkDjC,MAAAvC,EAAAmC,MAAA/E,EAAA4C,QAAAoC,KNo4Ql3hD3B,KAAKT,EAAS1C,EAAoB,OAIzD63C,IACA,SAAU/3C,EAAQC,EAAqBC,GAE7C,cAC4B,SAAS83C,GAA8B,GAAIC,GAAgD/3C,EAAoB,KAClHg4C,EAAwDh4C,EAAoBqE,EAAE0zC,GAC9EE,EAA2Cj4C,EAAoB,IACZA,GAAoBqE,EAAE4zC,EOv2QlGH,GAAAjkC,QAAAmkC,EAAAhrC,EAGAjN,EAAA,GACAa,KAAA,eACAs3C,YACAxB,UAAAuB,EAAA,WAEAp3C,OACAse,KAAArZ,MACAqK,GAAApP,OACAsB,KAAAtB,OACAkmC,OAAAnhC,MACAqyC,WAAAryC,MACAm9B,QACA5gC,KAAAyD,MACAygC,SAAA,0GPw5Q6BpjC,KAAKpD,EAAqBC,EAAoB,MAIrEo4C,IACA,SAAUt4C,EAAQC,EAAqBC,GAE7C,YQ59QA,SAAAC,GAAAC,GACAF,EAAA,KR49QqB,GAAIq4C,GAA0Hr4C,EAAoB,KQ79QvKs4C,EAAAt4C,EAAA,KAGAQ,EAAAR,EAAA,IASAS,EAAAR,EAKAS,EAAAF,EACA63C,EAAA,EACAC,EAAA,GATA,EAWA73C,EAPA,kBAEA,KAUAV,GAAA,EAAAW,EAAA,SRq+QM63C,IACA,SAAUz4C,EAAQ4C,EAAS1C,GS7/QjC,GAAAw4C,GAAAx4C,EAAA,IACA,iBAAAw4C,SAAA14C,EAAAmD,EAAAu1C,EAAA,MACAA,EAAAvC,SAAAn2C,EAAA4C,QAAA81C,EAAAvC,OAEAj2C,GAAA,gBAAAw4C,GAAA,OTsgRMC,IACA,SAAU34C,EAAQ4C,EAAS1C,GU9gRjC0C,EAAA5C,EAAA4C,QAAA1C,EAAA,SAKA0C,EAAAkE,MAAA9G,EAAAmD,EAAA,yLAAgN,IAAQ6P,QAAA,EAAAskC,SAAA,mGAAAtZ,SAAA4a,SAAA,0GAAAC,KAAA,qBAAAC,gBAAA,uPAA0hBC,WAAA,OVuhR5uBC,IACA,SAAUh5C,EAAQC,EAAqBC,GAE7C,YW/hRA,IAAAuB,GAAA,WAA0B,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,CAAwB,OAAAE,GAAA,OAAiBE,YAAA,mBAA6B,OAAAN,EAAA2d,KAAAvd,EAAA,OAAgCE,YAAA,YAAsBF,EAAA,uBAA4BG,OAAOg3C,cAAA,GAAA59B,MAAA,cAAsC,OAAA3Z,EAAA2d,KAAAlZ,OAAArE,EAAA,OAAwCE,YAAA,YAAsBF,EAAA,MAAAJ,EAAAU,GAAA,eAAAN,EAAA,OAAAA,EAAA,cAA4DE,YAAA,UAAAk3C,aAAmC1rC,OAAA,SAAiBvL,OAAQoO,GAAA3O,EAAA2O,GAAAgP,KAAA3d,EAAA2d,KAAA8nB,OAAAzlC,EAAA22C,WAAA3Q,KAAA,OAAAT,KAAA,OAAAC,MAAAxlC,EAAAylC,OAAAgS,aAAA,QAAA3R,OAAA,OAAAe,QAAA,EAAA6Q,cAAA13C,EAAAyhC,WAAgL,MAC5mB1gC,KACAC,GAAiBjB,SAAAgB,kBACjBxC,GAAA,KXoiRMo5C,IACA,SAAUr5C,EAAQC,EAAqBC,GAE7C,YACqB,IAAIo5C,GAAyDp5C,EAAoB,KAC7Eq5C,EAAiEr5C,EAAoB,IY18Q9GD,GAAA,GACAm4C,YACAoB,UAAAF,EAAA,EACAG,WAAAF,EAAA,GAEAl6B,KAAA,WACA,OACAq6B,YAAA,EACAC,MAAA,KACAC,aAAA,KACAC,UAAA,KACAC,cAAA,wCACAC,sBAAA,qBACAC,cAAA,6BACAC,sBAAA,sCACAC,eACAC,UAAA,KACAC,uBAAA,EACAC,kBAAA,IAGA/D,OACAoD,YAAA,WACA/3C,KAAA24C,kBAEAX,MAAA,WACAh4C,KAAA04C,kBACAr0C,MAAAoU,QAAAzY,KAAAg4C,QAAAh4C,KAAAg4C,MAAAxzC,SACAxE,KAAAi4C,aAAAj4C,KAAAg4C,MAAA,GAAAtpC,GACA1O,KAAA04C,kBAAA,EACA14C,KAAA44C,kBAKA/D,QAAA,WACA70C,KAAA64C,WACA74C,KAAA84C,SAAAC,YACA,WACA/4C,KAAA64C,YACAl2C,KAAA3C,MACA,MAGAg5C,cA5CA,WA6CAC,cAAAj5C,KAAA84C,WAEAhR,SACA+Q,SAAA,cAAAK,GAAAl5C,IACAA,MAAAm5C,MACAl3C,IAAAjC,KAAAo5C,YAAA,QAAAp5C,KAAAq5C,OAAAtrC,OAAAW,GAAA,UACA4qC,KAAA,SAAAC,GAEAL,EAAAlB,MAAAuB,EAAA77B,KAAA6T,QAEA,MAAAvxB,KAAAi4C,cAAAj4C,KAAA44C,gBAEAA,aAAA,cAAAY,GAAAx5C,IACA,UAAAA,KAAAi4C,aAAA,CAEAj4C,KAAAm5C,MACAl3C,IAAAjC,KAAAo5C,YAAA,QAAAp5C,KAAAq5C,OAAAtrC,OAAAW,GAAA,UAAA1O,KAAAi4C,aAAA,gBACAqB,KAAA,SAAAC,GAEAC,EAAAtB,UAAAqB,EAAA77B,KAAA6T,QAEAvxB,KAAAm5C,MACAl3C,IAAAjC,KAAAo5C,YAAA,QAAAp5C,KAAAq5C,OAAAtrC,OAAAW,GAAA,UAAA1O,KAAAi4C,aAAA,gBACAqB,KAAA,SAAAC,GAEAC,EAAAzB,YAAAwB,EAAA77B,KAAAq6B,cAEA/3C,KAAA24C,iBACA34C,KAAAm5C,MACAl3C,IAAAjC,KAAAo5C,YAAA,QAAAp5C,KAAAq5C,OAAAtrC,OAAAW,GAAA,UAAA1O,KAAAi4C,aAAA,cACAqB,KAAA,SAAAC,GAEAC,EAAAhB,UAAAe,EAAA77B,KAAA6T,UAIAonB,eAAA,cAAAc,GAAAz5C,IACA,UAAAA,KAAAi4C,aACA,OAAAz2C,GAAA,EAAAA,GAAAxB,KAAA+3C,YAAAv2C,KADA,SACAA,GACAi4C,EAAAN,MACAl3C,IAAAw3C,EAAAL,YAAA,QAAAK,EAAAJ,OAAAtrC,OAAAW,GAAA,UAAA+qC,EAAAxB,aAAA,gBAAAz2C,GACA83C,KAAA,SAAAC,GAEAE,EAAAlB,YAAA/2C,GAAA+3C,EAAA77B,KAAA6T,MACAkoB,EAAAhB,4BANAj3C,OZ2jRMk4C,IACA,SAAUr7C,EAAQ4C,EAAS1C,Ga9uRjC,GAAAw4C,GAAAx4C,EAAA,IACA,iBAAAw4C,SAAA14C,EAAAmD,EAAAu1C,EAAA,MACAA,EAAAvC,SAAAn2C,EAAA4C,QAAA81C,EAAAvC,OAEAj2C,GAAA,gBAAAw4C,GAAA,ObuvRM4C,IACA,SAAUt7C,EAAQ4C,EAAS1C,Gc/vRjC0C,EAAA5C,EAAA4C,QAAA1C,EAAA,SAKA0C,EAAAkE,MAAA9G,EAAAmD,EAAA,0CAAiE,IAAQ6P,QAAA,EAAAskC,SAAA,8FAAAtZ,SAAA4a,SAAA,yBAAAC,KAAA,gBAAAC,gBAAA,yDAAiQC,WAAA,OdwwRpUwC,IACA,SAAUv7C,EAAQC,EAAqBC,GAE7C,YehxRA,IAAAuB,GAAA,WAA0B,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,CAAwB,OAAAE,GAAA,OAAiBE,YAAA,qBAA+BF,EAAA,OAAYE,YAAA,qBAA+BF,EAAA,UAAAA,EAAA,gBAAAJ,EAAAU,GAAA,WAAAV,EAAAU,GAAA,KAAAN,EAAA,UAAAA,EAAA,aAAAJ,EAAAU,GAAA,KAAAN,EAAA,qBAAiIG,OAAOoZ,MAAA,WAAkB5V,IAAK+1C,OAAA,SAAAC,GAA0B,MAAA/5C,GAAA64C,iBAA2BmB,OAAQn7C,MAAAmB,EAAA,aAAAgR,SAAA,SAAAipC,GAAkDj6C,EAAAk4C,aAAA+B,GAAqBC,WAAA,iBAA4Bl6C,EAAAm6C,GAAAn6C,EAAA,eAAAs3B,EAAA71B,GAAqC,MAAArB,GAAA,eAAyBuC,IAAAlB,EAAAlB,OAAa1B,MAAAy4B,EAAA3oB,MAAiBvO,EAAA,uBAAAA,EAAA,qBAAoDE,YAAA,OAAA85C,UAA6BC,YAAAr6C,EAAAW,GAAA22B,EAAAl4B,UAAiC,SAAU,eAAAY,EAAAU,GAAA,KAAAV,EAAA,aAAAI,EAAA,OAA0DE,YAAA,qBAA+BF,EAAA,UAAeE,YAAA,SAAmBF,EAAA,gBAAAA,EAAA,UAAAJ,EAAAU,GAAA,gBAAAV,EAAAU,GAAA,4BAAAV,EAAAU,GAAA,KAAAN,EAAA,YAAuHG,OAAOoO,GAAA,YAAAgP,KAAA3d,EAAAm4C,UAAA1S,OAAAzlC,EAAAo4C,aAAAkC,cAAAt6C,EAAAq4C,qBAAA5W,QAAA,wBAAuIzhC,EAAAU,GAAA,KAAAN,EAAA,KAAsBE,YAAA,iDAA2DF,EAAA,UAAeG,OAAOoZ,MAAA,aAAmB3Z,EAAAU,GAAA,uBAAAV,EAAAU,GAAA,kCAAAN,EAAA,UAAsFE,YAAA,OAAAC,OAA0BoZ,MAAA,aAAmB3Z,EAAAU,GAAA,uBAAAV,EAAAU,GAAA,wCAAAV,EAAAU,GAAA,KAAAV,EAAAm6C,GAAAn6C,EAAA,qBAAAyB,GAAgI,MAAArB,GAAA,OAAiBuC,IAAAlB,IAAMzB,EAAA04C,wBAAAj3C,EAAArB,EAAA,UAAiDE,YAAA,SAAmBF,EAAA,gBAAAA,EAAA,UAAAJ,EAAAU,GAAA,eAAAV,EAAAU,GAAA,8BAAAV,EAAAW,GAAAc,GAAA,mBAAAzB,EAAAU,GAAA,KAAAN,EAAA,YAAqJG,OAAOoO,GAAA,WAAAlN,EAAA,EAAAkc,KAAA3d,EAAAw4C,YAAA/2C,GAAAgkC,OAAAzlC,EAAAs4C,aAAAgC,cAAAt6C,EAAAu4C,qBAAA9W,QAAA,wBAA+IzhC,EAAAU,GAAA,KAAAN,EAAA,KAAsBE,YAAA,iDAA2DF,EAAA,UAAeG,OAAOoZ,MAAA,aAAmB3Z,EAAAU,GAAA,uBAAAV,EAAAU,GAAA,gCAAAN,EAAA,UAAoFE,YAAA,OAAAC,OAA0BoZ,MAAA,aAAmB3Z,EAAAU,GAAA,uBAAAV,EAAAU,GAAA,uCAAAV,EAAAY,MAAA,MAA2F,GAAAZ,EAAAY,KAAAZ,EAAAU,GAAA,WAAAV,EAAAy4C,WAAAz4C,EAAAk4C,aAAA93C,EAAA,OAAmFE,YAAA,qBAA+BF,EAAA,UAAAA,EAAA,gBAAAJ,EAAAU,GAAA,wBAAAV,EAAAU,GAAA,KAAAN,EAAA,aAAAJ,EAAAU,GAAA,KAAAV,EAAAm6C,GAAAn6C,EAAA,mBAAAu6C,GAAmJ,OAAAn6C,EAAA,SAAoBE,YAAA,SAAmBF,EAAA,SAAcE,YAAA,OAAAC,OAA0Bi6C,KAAA,OAAYx6C,EAAAU,GAAA,cAAAV,EAAAU,GAAA,KAAAN,EAAA,SAAAJ,EAAAU,GAAAV,EAAAW,GAAA45C,EAAAn7C,UAAA,GAAAY,EAAAU,GAAA,KAAAN,EAAA,SAA2GE,YAAA,SAAmBF,EAAA,SAAcE,YAAA,OAAAC,OAA0Bi6C,KAAA,OAAYx6C,EAAAU,GAAA,aAAAV,EAAAU,GAAA,KAAAN,EAAA,SAAAJ,EAAAU,GAAAV,EAAAW,GAAA45C,EAAAjpC,aAAA,GAAAtR,EAAAU,GAAA,KAAAV,EAAAm6C,GAAAI,EAAA,yBAAAE,GAAkJ,OAAAr6C,EAAA,SAAoBE,YAAA,SAAmBF,EAAA,SAAcE,YAAA,OAAAC,OAA0Bi6C,KAAA,OAAYx6C,EAAAU,GAAAV,EAAAW,GAAA85C,EAAA55C,SAAAb,EAAAU,GAAA,KAAAN,EAAA,SAAAJ,EAAAU,GAAAV,EAAAW,GAAA85C,EAAAr7C,UAAA,MAAuFY,EAAAU,GAAA,KAAAN,EAAA,iBAA+B,OAAAJ,EAAAY,QACzhGG,KACAC,GAAiBjB,SAAAgB,kBACjBxC,GAAA","file":"static/js/19.713f6dea1cc1064b0cc9.js","sourcesContent":["webpackJsonp([19],{\n\n/***/ 503:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_hwMonView_vue__ = __webpack_require__(692);\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0d554a5c_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_hwMonView_vue__ = __webpack_require__(964);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(962)\n}\nvar normalizeComponent = __webpack_require__(39)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0d554a5c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_hwMonView_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0d554a5c_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_hwMonView_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 506:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"FcTile\",\n  props: {\n    title: String,\n    loading: Boolean,\n    icon: String\n  }\n});\n\n/***/ }),\n\n/***/ 508:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_fc_tile_vue__ = __webpack_require__(506);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_562e96ed_hasScoped_false_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_fc_tile_vue__ = __webpack_require__(511);\nvar normalizeComponent = __webpack_require__(39)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_fc_tile_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_562e96ed_hasScoped_false_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_fc_tile_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 511:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{staticClass:\"mx-auto\",attrs:{\"flat\":\"\"}},[_c('v-card-title',[(_vm.icon)?_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.icon)+\"\\n    \")]):_vm._e(),_vm._v(\"\\n    \"+_vm._s(_vm.title)+\"\\n  \")],1),_vm._v(\" \"),_c('v-card-text',{staticClass:\"contentFcTile\"},[(_vm.loading)?_c('v-skeleton-loader',{staticClass:\"mx-auto\",attrs:{\"type\":\"article\"}}):_vm._t(\"default\")],2)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 560:\n/***/ (function(module, exports, __webpack_require__) {\n\n// ┌───────────────────────────────────────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël 2.3.0 - JavaScript Vector Library                                                             │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright © 2008-2016 Dmitry Baranovskiy (http://raphaeljs.com)                                       │ \\\\\n// │ Copyright © 2008-2016 Sencha Labs (http://sencha.com)                                                 │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Licensed under the MIT (https://github.com/DmitryBaranovskiy/raphael/blob/master/license.txt) license.│ \\\\\n// └───────────────────────────────────────────────────────────────────────────────────────────────────────┘ \\\\\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Raphael\"] = factory();\n\telse\n\t\troot[\"Raphael\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./dev/raphael.amd.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./dev/raphael.amd.js\":\n/*!****************************!*\\\n  !*** ./dev/raphael.amd.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./raphael.core */ \"./dev/raphael.core.js\"), __webpack_require__(/*! ./raphael.svg */ \"./dev/raphael.svg.js\"), __webpack_require__(/*! ./raphael.vml */ \"./dev/raphael.vml.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(R) {\n\n    return R;\n\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"./dev/raphael.core.js\":\n/*!*****************************!*\\\n  !*** ./dev/raphael.core.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! eve */ \"./node_modules/eve-raphael/eve.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(eve) {\n\n    /*\\\n     * Raphael\n     [ method ]\n     **\n     * Creates a canvas object on which to draw.\n     * You must do this first, as all future calls to drawing methods\n     * from this instance will be bound to this canvas.\n     > Parameters\n     **\n     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\n     - width (number)\n     - height (number)\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n     * or\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n     * or\n     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n     * or\n     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\n     = (object) @Paper\n     > Usage\n     | // Each of the following examples create a canvas\n     | // that is 320px wide by 200px high.\n     | // Canvas is created at the viewport’s 10,50 coordinate.\n     | var paper = Raphael(10, 50, 320, 200);\n     | // Canvas is created at the top left corner of the #notepad element\n     | // (or its top right corner in dir=\"rtl\" elements)\n     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\n     | // Same as above\n     | var paper = Raphael(\"notepad\", 320, 200);\n     | // Image dump\n     | var set = Raphael([\"notepad\", 320, 200, {\n     |     type: \"rect\",\n     |     x: 10,\n     |     y: 10,\n     |     width: 25,\n     |     height: 25,\n     |     stroke: \"#f00\"\n     | }, {\n     |     type: \"text\",\n     |     x: 30,\n     |     y: 40,\n     |     text: \"Dump\"\n     | }]);\n    \\*/\n    function R(first) {\n        if (R.is(first, \"function\")) {\n            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\n        } else if (R.is(first, array)) {\n            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\n        } else {\n            var args = Array.prototype.slice.call(arguments, 0);\n            if (R.is(args[args.length - 1], \"function\")) {\n                var f = args.pop();\n                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\n                    f.call(R._engine.create[apply](R, args));\n                });\n            } else {\n                return R._engine.create[apply](R, arguments);\n            }\n        }\n    }\n    R.version = \"2.3.0\";\n    R.eve = eve;\n    var loaded,\n        separator = /[, ]+/,\n        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\n        formatrg = /\\{(\\d+)\\}/g,\n        proto = \"prototype\",\n        has = \"hasOwnProperty\",\n        g = {\n            doc: document,\n            win: window\n        },\n        oldRaphael = {\n            was: Object.prototype[has].call(g.win, \"Raphael\"),\n            is: g.win.Raphael\n        },\n        Paper = function () {\n            /*\\\n             * Paper.ca\n             [ property (object) ]\n             **\n             * Shortcut for @Paper.customAttributes\n            \\*/\n            /*\\\n             * Paper.customAttributes\n             [ property (object) ]\n             **\n             * If you have a set of attributes that you would like to represent\n             * as a function of some number you can do it easily with custom attributes:\n             > Usage\n             | paper.customAttributes.hue = function (num) {\n             |     num = num % 1;\n             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\n             | };\n             | // Custom attribute “hue” will change fill\n             | // to be given hue with fixed saturation and brightness.\n             | // Now you can use it like this:\n             | var c = paper.circle(10, 10, 10).attr({hue: .45});\n             | // or even like this:\n             | c.animate({hue: 1}, 1e3);\n             |\n             | // You could also create custom attribute\n             | // with multiple parameters:\n             | paper.customAttributes.hsb = function (h, s, b) {\n             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\n             | };\n             | c.attr({hsb: \"0.5 .8 1\"});\n             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\n            \\*/\n            this.ca = this.customAttributes = {};\n        },\n        paperproto,\n        appendChild = \"appendChild\",\n        apply = \"apply\",\n        concat = \"concat\",\n        //taken from Modernizr touch test: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js#L40\n        supportsTouch = ('ontouchstart' in window) || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch,\n        E = \"\",\n        S = \" \",\n        Str = String,\n        split = \"split\",\n        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\n        touchMap = {\n            mousedown: \"touchstart\",\n            mousemove: \"touchmove\",\n            mouseup: \"touchend\"\n        },\n        lowerCase = Str.prototype.toLowerCase,\n        math = Math,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        pow = math.pow,\n        PI = math.PI,\n        nu = \"number\",\n        string = \"string\",\n        array = \"array\",\n        toString = \"toString\",\n        fillString = \"fill\",\n        objectToString = Object.prototype.toString,\n        paper = {},\n        push = \"push\",\n        ISURL = R._ISURL = /^url\\(['\"]?(.+?)['\"]?\\)$/i,\n        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\n        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\n        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n        round = math.round,\n        setAttribute = \"setAttribute\",\n        toFloat = parseFloat,\n        toInt = parseInt,\n        upperCase = Str.prototype.toUpperCase,\n        availableAttrs = R._availableAttrs = {\n            \"arrow-end\": \"none\",\n            \"arrow-start\": \"none\",\n            blur: 0,\n            \"clip-rect\": \"0 0 1e9 1e9\",\n            cursor: \"default\",\n            cx: 0,\n            cy: 0,\n            fill: \"#fff\",\n            \"fill-opacity\": 1,\n            font: '10px \"Arial\"',\n            \"font-family\": '\"Arial\"',\n            \"font-size\": \"10\",\n            \"font-style\": \"normal\",\n            \"font-weight\": 400,\n            gradient: 0,\n            height: 0,\n            href: \"http://raphaeljs.com/\",\n            \"letter-spacing\": 0,\n            opacity: 1,\n            path: \"M0,0\",\n            r: 0,\n            rx: 0,\n            ry: 0,\n            src: \"\",\n            stroke: \"#000\",\n            \"stroke-dasharray\": \"\",\n            \"stroke-linecap\": \"butt\",\n            \"stroke-linejoin\": \"butt\",\n            \"stroke-miterlimit\": 0,\n            \"stroke-opacity\": 1,\n            \"stroke-width\": 1,\n            target: \"_blank\",\n            \"text-anchor\": \"middle\",\n            title: \"Raphael\",\n            transform: \"\",\n            width: 0,\n            x: 0,\n            y: 0,\n            \"class\": \"\"\n        },\n        availableAnimAttrs = R._availableAnimAttrs = {\n            blur: nu,\n            \"clip-rect\": \"csv\",\n            cx: nu,\n            cy: nu,\n            fill: \"colour\",\n            \"fill-opacity\": nu,\n            \"font-size\": nu,\n            height: nu,\n            opacity: nu,\n            path: \"path\",\n            r: nu,\n            rx: nu,\n            ry: nu,\n            stroke: \"colour\",\n            \"stroke-opacity\": nu,\n            \"stroke-width\": nu,\n            transform: \"transform\",\n            width: nu,\n            x: nu,\n            y: nu\n        },\n        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\n        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\n        hsrg = {hs: 1, rg: 1},\n        p2s = /,?([achlmqrstvxz]),?/gi,\n        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\n        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\n        eldata = {},\n        sortByKey = function (a, b) {\n            return a.key - b.key;\n        },\n        sortByNumber = function (a, b) {\n            return toFloat(a) - toFloat(b);\n        },\n        fun = function () {},\n        pipe = function (x) {\n            return x;\n        },\n        rectPath = R._rectPath = function (x, y, w, h, r) {\n            if (r) {\n                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n            }\n            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        },\n        ellipsePath = function (x, y, rx, ry) {\n            if (ry == null) {\n                ry = rx;\n            }\n            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n        },\n        getPath = R._getPath = {\n            path: function (el) {\n                return el.attr(\"path\");\n            },\n            circle: function (el) {\n                var a = el.attrs;\n                return ellipsePath(a.cx, a.cy, a.r);\n            },\n            ellipse: function (el) {\n                var a = el.attrs;\n                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\n            },\n            rect: function (el) {\n                var a = el.attrs;\n                return rectPath(a.x, a.y, a.width, a.height, a.r);\n            },\n            image: function (el) {\n                var a = el.attrs;\n                return rectPath(a.x, a.y, a.width, a.height);\n            },\n            text: function (el) {\n                var bbox = el._getBBox();\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n            },\n            set : function(el) {\n                var bbox = el._getBBox();\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n            }\n        },\n        /*\\\n         * Raphael.mapPath\n         [ method ]\n         **\n         * Transform the path string with given matrix.\n         > Parameters\n         - path (string) path string\n         - matrix (object) see @Matrix\n         = (string) transformed path string\n        \\*/\n        mapPath = R.mapPath = function (path, matrix) {\n            if (!matrix) {\n                return path;\n            }\n            var x, y, i, j, ii, jj, pathi;\n            path = path2curve(path);\n            for (i = 0, ii = path.length; i < ii; i++) {\n                pathi = path[i];\n                for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                    x = matrix.x(pathi[j], pathi[j + 1]);\n                    y = matrix.y(pathi[j], pathi[j + 1]);\n                    pathi[j] = x;\n                    pathi[j + 1] = y;\n                }\n            }\n            return path;\n        };\n\n    R._g = g;\n    /*\\\n     * Raphael.type\n     [ property (string) ]\n     **\n     * Can be “SVG”, “VML” or empty, depending on browser support.\n    \\*/\n    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\n    if (R.type == \"VML\") {\n        var d = g.doc.createElement(\"div\"),\n            b;\n        d.innerHTML = '<v:shape adj=\"1\"/>';\n        b = d.firstChild;\n        b.style.behavior = \"url(#default#VML)\";\n        if (!(b && typeof b.adj == \"object\")) {\n            return (R.type = E);\n        }\n        d = null;\n    }\n    /*\\\n     * Raphael.svg\n     [ property (boolean) ]\n     **\n     * `true` if browser supports SVG.\n    \\*/\n    /*\\\n     * Raphael.vml\n     [ property (boolean) ]\n     **\n     * `true` if browser supports VML.\n    \\*/\n    R.svg = !(R.vml = R.type == \"VML\");\n    R._Paper = Paper;\n    /*\\\n     * Raphael.fn\n     [ property (object) ]\n     **\n     * You can add your own method to the canvas. For example if you want to draw a pie chart,\n     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\n     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\n     * Raphaël instance is created, otherwise it will take no effect. Please note that the\n     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\n     * ensure any namespacing ensures proper context.\n     > Usage\n     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\n     |     return this.path( ... );\n     | };\n     | // or create namespace\n     | Raphael.fn.mystuff = {\n     |     arrow: function () {…},\n     |     star: function () {…},\n     |     // etc…\n     | };\n     | var paper = Raphael(10, 10, 630, 480);\n     | // then use it\n     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\n     | paper.mystuff.arrow();\n     | paper.mystuff.star();\n    \\*/\n    R.fn = paperproto = Paper.prototype = R.prototype;\n    R._id = 0;\n    /*\\\n     * Raphael.is\n     [ method ]\n     **\n     * Handful of replacements for `typeof` operator.\n     > Parameters\n     - o (…) any object or primitive\n     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\n     = (boolean) is given value is of given type\n    \\*/\n    R.is = function (o, type) {\n        type = lowerCase.call(type);\n        if (type == \"finite\") {\n            return !isnan[has](+o);\n        }\n        if (type == \"array\") {\n            return o instanceof Array;\n        }\n        return  (type == \"null\" && o === null) ||\n                (type == typeof o && o !== null) ||\n                (type == \"object\" && o === Object(o)) ||\n                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\n                objectToString.call(o).slice(8, -1).toLowerCase() == type;\n    };\n\n    function clone(obj) {\n        if (typeof obj == \"function\" || Object(obj) !== obj) {\n            return obj;\n        }\n        var res = new obj.constructor;\n        for (var key in obj) if (obj[has](key)) {\n            res[key] = clone(obj[key]);\n        }\n        return res;\n    }\n\n    /*\\\n     * Raphael.angle\n     [ method ]\n     **\n     * Returns angle between two or three points\n     > Parameters\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     - x3 (number) #optional x coord of third point\n     - y3 (number) #optional y coord of third point\n     = (number) angle in degrees.\n    \\*/\n    R.angle = function (x1, y1, x2, y2, x3, y3) {\n        if (x3 == null) {\n            var x = x1 - x2,\n                y = y1 - y2;\n            if (!x && !y) {\n                return 0;\n            }\n            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n        } else {\n            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\n        }\n    };\n    /*\\\n     * Raphael.rad\n     [ method ]\n     **\n     * Transform angle to radians\n     > Parameters\n     - deg (number) angle in degrees\n     = (number) angle in radians.\n    \\*/\n    R.rad = function (deg) {\n        return deg % 360 * PI / 180;\n    };\n    /*\\\n     * Raphael.deg\n     [ method ]\n     **\n     * Transform angle to degrees\n     > Parameters\n     - rad (number) angle in radians\n     = (number) angle in degrees.\n    \\*/\n    R.deg = function (rad) {\n        return Math.round ((rad * 180 / PI% 360)* 1000) / 1000;\n    };\n    /*\\\n     * Raphael.snapTo\n     [ method ]\n     **\n     * Snaps given value to given grid.\n     > Parameters\n     - values (array|number) given array of values or step of the grid\n     - value (number) value to adjust\n     - tolerance (number) #optional tolerance for snapping. Default is `10`.\n     = (number) adjusted value.\n    \\*/\n    R.snapTo = function (values, value, tolerance) {\n        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\n        if (R.is(values, array)) {\n            var i = values.length;\n            while (i--) if (abs(values[i] - value) <= tolerance) {\n                return values[i];\n            }\n        } else {\n            values = +values;\n            var rem = value % values;\n            if (rem < tolerance) {\n                return value - rem;\n            }\n            if (rem > values - tolerance) {\n                return value - rem + values;\n            }\n        }\n        return value;\n    };\n\n    /*\\\n     * Raphael.createUUID\n     [ method ]\n     **\n     * Returns RFC4122, version 4 ID\n    \\*/\n    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\n        return function () {\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\n        };\n    })(/[xy]/g, function (c) {\n        var r = math.random() * 16 | 0,\n            v = c == \"x\" ? r : (r & 3 | 8);\n        return v.toString(16);\n    });\n\n    /*\\\n     * Raphael.setWindow\n     [ method ]\n     **\n     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\n     > Parameters\n     - newwin (window) new window object\n    \\*/\n    R.setWindow = function (newwin) {\n        eve(\"raphael.setWindow\", R, g.win, newwin);\n        g.win = newwin;\n        g.doc = g.win.document;\n        if (R._engine.initWin) {\n            R._engine.initWin(g.win);\n        }\n    };\n    var toHex = function (color) {\n        if (R.vml) {\n            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\n            var trim = /^\\s+|\\s+$/g;\n            var bod;\n            try {\n                var docum = new ActiveXObject(\"htmlfile\");\n                docum.write(\"<body>\");\n                docum.close();\n                bod = docum.body;\n            } catch(e) {\n                bod = createPopup().document.body;\n            }\n            var range = bod.createTextRange();\n            toHex = cacher(function (color) {\n                try {\n                    bod.style.color = Str(color).replace(trim, E);\n                    var value = range.queryCommandValue(\"ForeColor\");\n                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\n                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\n                } catch(e) {\n                    return \"none\";\n                }\n            });\n        } else {\n            var i = g.doc.createElement(\"i\");\n            i.title = \"Rapha\\xebl Colour Picker\";\n            i.style.display = \"none\";\n            g.doc.body.appendChild(i);\n            toHex = cacher(function (color) {\n                i.style.color = color;\n                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n            });\n        }\n        return toHex(color);\n    },\n    hsbtoString = function () {\n        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n    },\n    hsltoString = function () {\n        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n    },\n    rgbtoString = function () {\n        return this.hex;\n    },\n    prepareRGB = function (r, g, b) {\n        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n            b = r.b;\n            g = r.g;\n            r = r.r;\n        }\n        if (g == null && R.is(r, string)) {\n            var clr = R.getRGB(r);\n            r = clr.r;\n            g = clr.g;\n            b = clr.b;\n        }\n        if (r > 1 || g > 1 || b > 1) {\n            r /= 255;\n            g /= 255;\n            b /= 255;\n        }\n\n        return [r, g, b];\n    },\n    packageRGB = function (r, g, b, o) {\n        r *= 255;\n        g *= 255;\n        b *= 255;\n        var rgb = {\n            r: r,\n            g: g,\n            b: b,\n            hex: R.rgb(r, g, b),\n            toString: rgbtoString\n        };\n        R.is(o, \"finite\") && (rgb.opacity = o);\n        return rgb;\n    };\n\n    /*\\\n     * Raphael.color\n     [ method ]\n     **\n     * Parses the color string and returns object with all values for the given color.\n     > Parameters\n     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\n     = (object) Combined RGB & HSB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) `true` if string can’t be parsed,\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     v (number) value (brightness),\n     o     l (number) lightness\n     o }\n    \\*/\n    R.color = function (clr) {\n        var rgb;\n        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n            rgb = R.hsb2rgb(clr);\n            clr.r = rgb.r;\n            clr.g = rgb.g;\n            clr.b = rgb.b;\n            clr.hex = rgb.hex;\n        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n            rgb = R.hsl2rgb(clr);\n            clr.r = rgb.r;\n            clr.g = rgb.g;\n            clr.b = rgb.b;\n            clr.hex = rgb.hex;\n        } else {\n            if (R.is(clr, \"string\")) {\n                clr = R.getRGB(clr);\n            }\n            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\n                rgb = R.rgb2hsl(clr);\n                clr.h = rgb.h;\n                clr.s = rgb.s;\n                clr.l = rgb.l;\n                rgb = R.rgb2hsb(clr);\n                clr.v = rgb.b;\n            } else {\n                clr = {hex: \"none\"};\n                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            }\n        }\n        clr.toString = rgbtoString;\n        return clr;\n    };\n    /*\\\n     * Raphael.hsb2rgb\n     [ method ]\n     **\n     * Converts HSB values to RGB object.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - v (number) value or brightness\n     = (object) RGB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    R.hsb2rgb = function (h, s, v, o) {\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n            v = h.b;\n            s = h.s;\n            o = h.o;\n            h = h.h;\n        }\n        h *= 360;\n        var R, G, B, X, C;\n        h = (h % 360) / 60;\n        C = v * s;\n        X = C * (1 - abs(h % 2 - 1));\n        R = G = B = v - C;\n\n        h = ~~h;\n        R += [C, X, 0, 0, X, C][h];\n        G += [X, C, C, X, 0, 0][h];\n        B += [0, 0, X, C, C, X][h];\n        return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Raphael.hsl2rgb\n     [ method ]\n     **\n     * Converts HSL values to RGB object.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (object) RGB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    R.hsl2rgb = function (h, s, l, o) {\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n            l = h.l;\n            s = h.s;\n            h = h.h;\n        }\n        if (h > 1 || s > 1 || l > 1) {\n            h /= 360;\n            s /= 100;\n            l /= 100;\n        }\n        h *= 360;\n        var R, G, B, X, C;\n        h = (h % 360) / 60;\n        C = 2 * s * (l < .5 ? l : 1 - l);\n        X = C * (1 - abs(h % 2 - 1));\n        R = G = B = l - C / 2;\n\n        h = ~~h;\n        R += [C, X, 0, 0, X, C][h];\n        G += [X, C, C, X, 0, 0][h];\n        B += [0, 0, X, C, C, X][h];\n        return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Raphael.rgb2hsb\n     [ method ]\n     **\n     * Converts RGB values to HSB object.\n     > Parameters\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSB object in format:\n     o {\n     o     h (number) hue\n     o     s (number) saturation\n     o     b (number) brightness\n     o }\n    \\*/\n    R.rgb2hsb = function (r, g, b) {\n        b = prepareRGB(r, g, b);\n        r = b[0];\n        g = b[1];\n        b = b[2];\n\n        var H, S, V, C;\n        V = mmax(r, g, b);\n        C = V - mmin(r, g, b);\n        H = (C == 0 ? null :\n             V == r ? (g - b) / C :\n             V == g ? (b - r) / C + 2 :\n                      (r - g) / C + 4\n            );\n        H = ((H + 360) % 6) * 60 / 360;\n        S = C == 0 ? 0 : C / V;\n        return {h: H, s: S, b: V, toString: hsbtoString};\n    };\n    /*\\\n     * Raphael.rgb2hsl\n     [ method ]\n     **\n     * Converts RGB values to HSL object.\n     > Parameters\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSL object in format:\n     o {\n     o     h (number) hue\n     o     s (number) saturation\n     o     l (number) luminosity\n     o }\n    \\*/\n    R.rgb2hsl = function (r, g, b) {\n        b = prepareRGB(r, g, b);\n        r = b[0];\n        g = b[1];\n        b = b[2];\n\n        var H, S, L, M, m, C;\n        M = mmax(r, g, b);\n        m = mmin(r, g, b);\n        C = M - m;\n        H = (C == 0 ? null :\n             M == r ? (g - b) / C :\n             M == g ? (b - r) / C + 2 :\n                      (r - g) / C + 4);\n        H = ((H + 360) % 6) * 60 / 360;\n        L = (M + m) / 2;\n        S = (C == 0 ? 0 :\n             L < .5 ? C / (2 * L) :\n                      C / (2 - 2 * L));\n        return {h: H, s: S, l: L, toString: hsltoString};\n    };\n    R._path2string = function () {\n        return this.join(\",\").replace(p2s, \"$1\");\n    };\n    function repush(array, item) {\n        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n            return array.push(array.splice(i, 1)[0]);\n        }\n    }\n    function cacher(f, scope, postprocessor) {\n        function newf() {\n            var arg = Array.prototype.slice.call(arguments, 0),\n                args = arg.join(\"\\u2400\"),\n                cache = newf.cache = newf.cache || {},\n                count = newf.count = newf.count || [];\n            if (cache[has](args)) {\n                repush(count, args);\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\n            }\n            count.length >= 1e3 && delete cache[count.shift()];\n            count.push(args);\n            cache[args] = f[apply](scope, arg);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        return newf;\n    }\n\n    var preload = R._preload = function (src, f) {\n        var img = g.doc.createElement(\"img\");\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n        img.onload = function () {\n            f.call(this);\n            this.onload = null;\n            g.doc.body.removeChild(this);\n        };\n        img.onerror = function () {\n            g.doc.body.removeChild(this);\n        };\n        g.doc.body.appendChild(img);\n        img.src = src;\n    };\n\n    function clrToString() {\n        return this.hex;\n    }\n\n    /*\\\n     * Raphael.getRGB\n     [ method ]\n     **\n     * Parses colour string as RGB object\n     > Parameters\n     - colour (string) colour string in one of formats:\n     # <ul>\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsl(•••, •••, •••) — same as hsb</li>\n     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\n     # </ul>\n     = (object) RGB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) true if string can’t be parsed\n     o }\n    \\*/\n    R.getRGB = cacher(function (colour) {\n        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n        }\n        if (colour == \"none\") {\n            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\n        }\n        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n        var res,\n            red,\n            green,\n            blue,\n            opacity,\n            t,\n            values,\n            rgb = colour.match(colourRegExp);\n        if (rgb) {\n            if (rgb[2]) {\n                blue = toInt(rgb[2].substring(5), 16);\n                green = toInt(rgb[2].substring(3, 5), 16);\n                red = toInt(rgb[2].substring(1, 3), 16);\n            }\n            if (rgb[3]) {\n                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n                green = toInt((t = rgb[3].charAt(2)) + t, 16);\n                red = toInt((t = rgb[3].charAt(1)) + t, 16);\n            }\n            if (rgb[4]) {\n                values = rgb[4][split](commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            }\n            if (rgb[5]) {\n                values = rgb[5][split](commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n                return R.hsb2rgb(red, green, blue, opacity);\n            }\n            if (rgb[6]) {\n                values = rgb[6][split](commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n                return R.hsl2rgb(red, green, blue, opacity);\n            }\n            rgb = {r: red, g: green, b: blue, toString: clrToString};\n            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\n            return rgb;\n        }\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n    }, R);\n    /*\\\n     * Raphael.hsb\n     [ method ]\n     **\n     * Converts HSB values to hex representation of the colour.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - b (number) value or brightness\n     = (string) hex representation of the colour.\n    \\*/\n    R.hsb = cacher(function (h, s, b) {\n        return R.hsb2rgb(h, s, b).hex;\n    });\n    /*\\\n     * Raphael.hsl\n     [ method ]\n     **\n     * Converts HSL values to hex representation of the colour.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (string) hex representation of the colour.\n    \\*/\n    R.hsl = cacher(function (h, s, l) {\n        return R.hsl2rgb(h, s, l).hex;\n    });\n    /*\\\n     * Raphael.rgb\n     [ method ]\n     **\n     * Converts RGB values to hex representation of the colour.\n     > Parameters\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (string) hex representation of the colour.\n    \\*/\n    R.rgb = cacher(function (r, g, b) {\n        function round(x) { return (x + 0.5) | 0; }\n        return \"#\" + (16777216 | round(b) | (round(g) << 8) | (round(r) << 16)).toString(16).slice(1);\n    });\n    /*\\\n     * Raphael.getColor\n     [ method ]\n     **\n     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\n     > Parameters\n     - value (number) #optional brightness, default is `0.75`\n     = (string) hex representation of the colour.\n    \\*/\n    R.getColor = function (value) {\n        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\n            rgb = this.hsb2rgb(start.h, start.s, start.b);\n        start.h += .075;\n        if (start.h > 1) {\n            start.h = 0;\n            start.s -= .2;\n            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\n        }\n        return rgb.hex;\n    };\n    /*\\\n     * Raphael.getColor.reset\n     [ method ]\n     **\n     * Resets spectrum position for @Raphael.getColor back to red.\n    \\*/\n    R.getColor.reset = function () {\n        delete this.start;\n    };\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n    /*\\\n     * Raphael.parsePathString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of arrays of path segments.\n     > Parameters\n     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\n     = (array) array of segments.\n    \\*/\n    R.parsePathString = function (pathString) {\n        if (!pathString) {\n            return null;\n        }\n        var pth = paths(pathString);\n        if (pth.arr) {\n            return pathClone(pth.arr);\n        }\n\n        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\n            data = [];\n        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\n            data = pathClone(pathString);\n        }\n        if (!data.length) {\n            Str(pathString).replace(pathCommand, function (a, b, c) {\n                var params = [],\n                    name = b.toLowerCase();\n                c.replace(pathValues, function (a, b) {\n                    b && params.push(+b);\n                });\n                if (name == \"m\" && params.length > 2) {\n                    data.push([b][concat](params.splice(0, 2)));\n                    name = \"l\";\n                    b = b == \"m\" ? \"l\" : \"L\";\n                }\n                if (name == \"r\") {\n                    data.push([b][concat](params));\n                } else while (params.length >= paramCounts[name]) {\n                    data.push([b][concat](params.splice(0, paramCounts[name])));\n                    if (!paramCounts[name]) {\n                        break;\n                    }\n                }\n            });\n        }\n        data.toString = R._path2string;\n        pth.arr = pathClone(data);\n        return data;\n    };\n    /*\\\n     * Raphael.parseTransformString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of transformations.\n     > Parameters\n     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\n     = (array) array of transformations.\n    \\*/\n    R.parseTransformString = cacher(function (TString) {\n        if (!TString) {\n            return null;\n        }\n        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n            data = [];\n        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\n            data = pathClone(TString);\n        }\n        if (!data.length) {\n            Str(TString).replace(tCommand, function (a, b, c) {\n                var params = [],\n                    name = lowerCase.call(b);\n                c.replace(pathValues, function (a, b) {\n                    b && params.push(+b);\n                });\n                data.push([b][concat](params));\n            });\n        }\n        data.toString = R._path2string;\n        return data;\n    }, this, function(elem) {\n        if (!elem) return elem;\n        var newData = [];\n        for (var i = 0; i < elem.length; i++) {\n            var newLevel = [];\n            for (var j = 0; j < elem[i].length; j++) {\n                newLevel.push(elem[i][j]);\n            }\n            newData.push(newLevel);\n        }\n      return newData; } );\n    // PATHS\n    var paths = function (ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    };\n    /*\\\n     * Raphael.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Find dot coordinates on the given cubic bezier curve at the given t.\n     > Parameters\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point\n     o     y: (number) y coordinate of the point\n     o     m: {\n     o         x: (number) x coordinate of the left anchor\n     o         y: (number) y coordinate of the left anchor\n     o     }\n     o     n: {\n     o         x: (number) x coordinate of the right anchor\n     o         y: (number) y coordinate of the right anchor\n     o     }\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve\n     o         y: (number) y coordinate of the start of the curve\n     o     }\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve\n     o         y: (number) y coordinate of the end of the curve\n     o     }\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n        (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    };\n    /*\\\n     * Raphael.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Return bounding box of a given cubic bezier curve\n     > Parameters\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for bezier curve\n     = (object) point information in format:\n     o {\n     o     min: {\n     o         x: (number) x coordinate of the left point\n     o         y: (number) y coordinate of the top point\n     o     }\n     o     max: {\n     o         x: (number) x coordinate of the right point\n     o         y: (number) y coordinate of the bottom point\n     o     }\n     o }\n    \\*/\n    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!R.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return {\n            x: bbox.min.x,\n            y: bbox.min.y,\n            x2: bbox.max.x,\n            y2: bbox.max.y,\n            width: bbox.max.x - bbox.min.x,\n            height: bbox.max.y - bbox.min.y\n        };\n    };\n    /*\\\n     * Raphael.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding boxes.\n     > Parameters\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point inside\n    \\*/\n    R.isPointInsideBBox = function (bbox, x, y) {\n        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\n    };\n    /*\\\n     * Raphael.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     > Parameters\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if they intersect\n    \\*/\n    R.isBBoxIntersect = function (bbox1, bbox2) {\n        var i = R.isPointInsideBBox;\n        return i(bbox2, bbox1.x, bbox1.y)\n            || i(bbox2, bbox1.x2, bbox1.y)\n            || i(bbox2, bbox1.x, bbox1.y2)\n            || i(bbox2, bbox1.x2, bbox1.y2)\n            || i(bbox1, bbox2.x, bbox2.y)\n            || i(bbox1, bbox2.x2, bbox2.y)\n            || i(bbox1, bbox2.x, bbox2.y2)\n            || i(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    };\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = R.bezierBBox(bez1),\n            bbox2 = R.bezierBBox(bez2);\n        if (!R.isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = mmax(~~(l1 / 5), 1),\n            n2 = mmax(~~(l2 / 5), 1),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: mmin(t1, 1),\n                                t2: mmin(t2, 1)\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    /*\\\n     * Raphael.pathIntersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     > Parameters\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point\n     o         y: (number) y coordinate of the point\n     o         t1: (number) t value for segment of path1\n     o         t2: (number) t value for segment of path2\n     o         segment1: (number) order number for segment of path1\n     o         segment2: (number) order number for segment of path2\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    R.pathIntersection = function (path1, path2) {\n        return interPathHelper(path1, path2);\n    };\n    R.pathIntersectionNumber = function (path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    };\n    function interPathHelper(path1, path2, justCount) {\n        path1 = R._path2curve(path1);\n        path2 = R._path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    /*\\\n     * Raphael.isPointInsidePath\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     > Parameters\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) true, if point is inside the path\n    \\*/\n    R.isPointInsidePath = function (path, x, y) {\n        var bbox = R.pathBBox(path);\n        return R.isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    };\n    R._removedFactory = function (methodname) {\n        return function () {\n            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\n        };\n    };\n    /*\\\n     * Raphael.pathBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Return bounding box of a given path\n     > Parameters\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box\n     o     y: (number) y coordinate of the left top point of the box\n     o     x2: (number) x coordinate of the right bottom point of the box\n     o     y2: (number) y coordinate of the right bottom point of the box\n     o     width: (number) width of the box\n     o     height: (number) height of the box\n     o     cx: (number) x coordinate of the center of the box\n     o     cy: (number) y coordinate of the center of the box\n     o }\n    \\*/\n    var pathDimensions = R.pathBBox = function (path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X[concat](dim.min.x, dim.max.x);\n                Y = Y[concat](dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin[apply](0, X),\n            ymin = mmin[apply](0, Y),\n            xmax = mmax[apply](0, X),\n            ymax = mmax[apply](0, Y),\n            width = xmax - xmin,\n            height = ymax - ymin,\n                bb = {\n                x: xmin,\n                y: ymin,\n                x2: xmax,\n                y2: ymax,\n                width: width,\n                height: height,\n                cx: xmin + width / 2,\n                cy: ymin + height / 2\n            };\n        pth.bbox = clone(bb);\n        return bb;\n    },\n        pathClone = function (pathArray) {\n            var res = clone(pathArray);\n            res.toString = R._path2string;\n            return res;\n        },\n        pathToRelative = R._pathToRelative = function (pathArray) {\n            var pth = paths(pathArray);\n            if (pth.rel) {\n                return pathClone(pth.rel);\n            }\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n                pathArray = R.parsePathString(pathArray);\n            }\n            var res = [],\n                x = 0,\n                y = 0,\n                mx = 0,\n                my = 0,\n                start = 0;\n            if (pathArray[0][0] == \"M\") {\n                x = pathArray[0][1];\n                y = pathArray[0][2];\n                mx = x;\n                my = y;\n                start++;\n                res.push([\"M\", x, y]);\n            }\n            for (var i = start, ii = pathArray.length; i < ii; i++) {\n                var r = res[i] = [],\n                    pa = pathArray[i];\n                if (pa[0] != lowerCase.call(pa[0])) {\n                    r[0] = lowerCase.call(pa[0]);\n                    switch (r[0]) {\n                        case \"a\":\n                            r[1] = pa[1];\n                            r[2] = pa[2];\n                            r[3] = pa[3];\n                            r[4] = pa[4];\n                            r[5] = pa[5];\n                            r[6] = +(pa[6] - x).toFixed(3);\n                            r[7] = +(pa[7] - y).toFixed(3);\n                            break;\n                        case \"v\":\n                            r[1] = +(pa[1] - y).toFixed(3);\n                            break;\n                        case \"m\":\n                            mx = pa[1];\n                            my = pa[2];\n                        default:\n                            for (var j = 1, jj = pa.length; j < jj; j++) {\n                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n                            }\n                    }\n                } else {\n                    r = res[i] = [];\n                    if (pa[0] == \"m\") {\n                        mx = pa[1] + x;\n                        my = pa[2] + y;\n                    }\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\n                        res[i][k] = pa[k];\n                    }\n                }\n                var len = res[i].length;\n                switch (res[i][0]) {\n                    case \"z\":\n                        x = mx;\n                        y = my;\n                        break;\n                    case \"h\":\n                        x += +res[i][len - 1];\n                        break;\n                    case \"v\":\n                        y += +res[i][len - 1];\n                        break;\n                    default:\n                        x += +res[i][len - 2];\n                        y += +res[i][len - 1];\n                }\n            }\n            res.toString = R._path2string;\n            pth.rel = pathClone(res);\n            return res;\n        },\n        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\n            var pth = paths(pathArray);\n            if (pth.abs) {\n                return pathClone(pth.abs);\n            }\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n                pathArray = R.parsePathString(pathArray);\n            }\n            if (!pathArray || !pathArray.length) {\n                return [[\"M\", 0, 0]];\n            }\n            var res = [],\n                x = 0,\n                y = 0,\n                mx = 0,\n                my = 0,\n                start = 0;\n            if (pathArray[0][0] == \"M\") {\n                x = +pathArray[0][1];\n                y = +pathArray[0][2];\n                mx = x;\n                my = y;\n                start++;\n                res[0] = [\"M\", x, y];\n            }\n            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n                res.push(r = []);\n                pa = pathArray[i];\n                if (pa[0] != upperCase.call(pa[0])) {\n                    r[0] = upperCase.call(pa[0]);\n                    switch (r[0]) {\n                        case \"A\":\n                            r[1] = pa[1];\n                            r[2] = pa[2];\n                            r[3] = pa[3];\n                            r[4] = pa[4];\n                            r[5] = pa[5];\n                            r[6] = +(pa[6] + x);\n                            r[7] = +(pa[7] + y);\n                            break;\n                        case \"V\":\n                            r[1] = +pa[1] + y;\n                            break;\n                        case \"H\":\n                            r[1] = +pa[1] + x;\n                            break;\n                        case \"R\":\n                            var dots = [x, y][concat](pa.slice(1));\n                            for (var j = 2, jj = dots.length; j < jj; j++) {\n                                dots[j] = +dots[j] + x;\n                                dots[++j] = +dots[j] + y;\n                            }\n                            res.pop();\n                            res = res[concat](catmullRom2bezier(dots, crz));\n                            break;\n                        case \"M\":\n                            mx = +pa[1] + x;\n                            my = +pa[2] + y;\n                        default:\n                            for (j = 1, jj = pa.length; j < jj; j++) {\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\n                            }\n                    }\n                } else if (pa[0] == \"R\") {\n                    dots = [x, y][concat](pa.slice(1));\n                    res.pop();\n                    res = res[concat](catmullRom2bezier(dots, crz));\n                    r = [\"R\"][concat](pa.slice(-2));\n                } else {\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\n                        r[k] = pa[k];\n                    }\n                }\n                switch (r[0]) {\n                    case \"Z\":\n                        x = mx;\n                        y = my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n            res.toString = R._path2string;\n            pth.abs = pathClone(res);\n            return res;\n        },\n        l2c = function (x1, y1, x2, y2) {\n            return [x1, y1, x2, y2, x2, y2];\n        },\n        q2c = function (x1, y1, ax, ay, x2, y2) {\n            var _13 = 1 / 3,\n                _23 = 2 / 3;\n            return [\n                    _13 * x1 + _23 * ax,\n                    _13 * y1 + _23 * ay,\n                    _13 * x2 + _23 * ax,\n                    _13 * y2 + _23 * ay,\n                    x2,\n                    y2\n                ];\n        },\n        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n            // for more information of where this math came from visit:\n            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n            var _120 = PI * 120 / 180,\n                rad = PI / 180 * (+angle || 0),\n                res = [],\n                xy,\n                rotate = cacher(function (x, y, rad) {\n                    var X = x * math.cos(rad) - y * math.sin(rad),\n                        Y = x * math.sin(rad) + y * math.cos(rad);\n                    return {x: X, y: Y};\n                });\n            if (!recursive) {\n                xy = rotate(x1, y1, -rad);\n                x1 = xy.x;\n                y1 = xy.y;\n                xy = rotate(x2, y2, -rad);\n                x2 = xy.x;\n                y2 = xy.y;\n                var cos = math.cos(PI / 180 * angle),\n                    sin = math.sin(PI / 180 * angle),\n                    x = (x1 - x2) / 2,\n                    y = (y1 - y2) / 2;\n                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n                if (h > 1) {\n                    h = math.sqrt(h);\n                    rx = h * rx;\n                    ry = h * ry;\n                }\n                var rx2 = rx * rx,\n                    ry2 = ry * ry,\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\n                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n                f1 = x1 < cx ? PI - f1 : f1;\n                f2 = x2 < cx ? PI - f2 : f2;\n                f1 < 0 && (f1 = PI * 2 + f1);\n                f2 < 0 && (f2 = PI * 2 + f2);\n                if (sweep_flag && f1 > f2) {\n                    f1 = f1 - PI * 2;\n                }\n                if (!sweep_flag && f2 > f1) {\n                    f2 = f2 - PI * 2;\n                }\n            } else {\n                f1 = recursive[0];\n                f2 = recursive[1];\n                cx = recursive[2];\n                cy = recursive[3];\n            }\n            var df = f2 - f1;\n            if (abs(df) > _120) {\n                var f2old = f2,\n                    x2old = x2,\n                    y2old = y2;\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n                x2 = cx + rx * math.cos(f2);\n                y2 = cy + ry * math.sin(f2);\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n            }\n            df = f2 - f1;\n            var c1 = math.cos(f1),\n                s1 = math.sin(f1),\n                c2 = math.cos(f2),\n                s2 = math.sin(f2),\n                t = math.tan(df / 4),\n                hx = 4 / 3 * rx * t,\n                hy = 4 / 3 * ry * t,\n                m1 = [x1, y1],\n                m2 = [x1 + hx * s1, y1 - hy * c1],\n                m3 = [x2 + hx * s2, y2 - hy * c2],\n                m4 = [x2, y2];\n            m2[0] = 2 * m1[0] - m2[0];\n            m2[1] = 2 * m1[1] - m2[1];\n            if (recursive) {\n                return [m2, m3, m4][concat](res);\n            } else {\n                res = [m2, m3, m4][concat](res).join()[split](\",\");\n                var newres = [];\n                for (var i = 0, ii = res.length; i < ii; i++) {\n                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n                }\n                return newres;\n            }\n        },\n        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n            var t1 = 1 - t;\n            return {\n                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n            };\n        },\n        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\n                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\n                c = p1x - c1x,\n                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\n                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\n                y = [p1y, p2y],\n                x = [p1x, p2x],\n                dot;\n            abs(t1) > \"1e12\" && (t1 = .5);\n            abs(t2) > \"1e12\" && (t2 = .5);\n            if (t1 > 0 && t1 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            if (t2 > 0 && t2 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\n            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\n            c = p1y - c1y;\n            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\n            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\n            abs(t1) > \"1e12\" && (t1 = .5);\n            abs(t2) > \"1e12\" && (t2 = .5);\n            if (t1 > 0 && t1 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            if (t2 > 0 && t2 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            return {\n                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\n                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\n            };\n        }),\n        path2curve = R._path2curve = cacher(function (path, path2) {\n            var pth = !path2 && paths(path);\n            if (!path2 && pth.curve) {\n                return pathClone(pth.curve);\n            }\n            var p = pathToAbsolute(path),\n                p2 = path2 && pathToAbsolute(path2),\n                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n                processPath = function (path, d, pcom) {\n                    var nx, ny, tq = {T:1, Q:1};\n                    if (!path) {\n                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                    }\n                    !(path[0] in tq) && (d.qx = d.qy = null);\n                    switch (path[0]) {\n                        case \"M\":\n                            d.X = path[1];\n                            d.Y = path[2];\n                            break;\n                        case \"A\":\n                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\n                            break;\n                        case \"S\":\n                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                                nx = d.x * 2 - d.bx;          // And reflect the previous\n                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                            }\n                            else {                            // or some else or nothing\n                                nx = d.x;\n                                ny = d.y;\n                            }\n                            path = [\"C\", nx, ny][concat](path.slice(1));\n                            break;\n                        case \"T\":\n                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                            }\n                            else {                            // or something else or nothing\n                                d.qx = d.x;\n                                d.qy = d.y;\n                            }\n                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                            break;\n                        case \"Q\":\n                            d.qx = path[1];\n                            d.qy = path[2];\n                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                            break;\n                        case \"L\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\n                            break;\n                        case \"H\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\n                            break;\n                        case \"V\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\n                            break;\n                        case \"Z\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\n                            break;\n                    }\n                    return path;\n                },\n                fixArc = function (pp, i) {\n                    if (pp[i].length > 7) {\n                        pp[i].shift();\n                        var pi = pp[i];\n                        while (pi.length) {\n                            pcoms1[i]=\"A\"; // if created multiple C:s, their original seg is saved\n                            p2 && (pcoms2[i]=\"A\"); // the same as above\n                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\n                        }\n                        pp.splice(i, 1);\n                        ii = mmax(p.length, p2 && p2.length || 0);\n                    }\n                },\n                fixM = function (path1, path2, a1, a2, i) {\n                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                        a1.bx = 0;\n                        a1.by = 0;\n                        a1.x = path1[i][1];\n                        a1.y = path1[i][2];\n                        ii = mmax(p.length, p2 && p2.length || 0);\n                    }\n                },\n                pcoms1 = [], // path commands of original path p\n                pcoms2 = [], // path commands of original path p2\n                pfirst = \"\", // temporary holder for original path command\n                pcom = \"\"; // holder for previous path command of original path\n            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n                p[i] && (pfirst = p[i][0]); // save current path command\n\n                if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n                {\n                    pcoms1[i] = pfirst; // Save current path command\n                    i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\n                }\n                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n                if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n                // which may produce multiple C:s\n                // so we have to make sure that C is also C in original path\n\n                fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n                if (p2) { // the same procedures is done to p2\n                    p2[i] && (pfirst = p2[i][0]);\n                    if (pfirst != \"C\")\n                    {\n                        pcoms2[i] = pfirst;\n                        i && (pcom = pcoms2[i-1]);\n                    }\n                    p2[i] = processPath(p2[i], attrs2, pcom);\n\n                    if (pcoms2[i]!=\"A\" && pfirst==\"C\") pcoms2[i]=\"C\";\n\n                    fixArc(p2, i);\n                }\n                fixM(p, p2, attrs, attrs2, i);\n                fixM(p2, p, attrs2, attrs, i);\n                var seg = p[i],\n                    seg2 = p2 && p2[i],\n                    seglen = seg.length,\n                    seg2len = p2 && seg2.length;\n                attrs.x = seg[seglen - 2];\n                attrs.y = seg[seglen - 1];\n                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n                attrs2.x = p2 && seg2[seg2len - 2];\n                attrs2.y = p2 && seg2[seg2len - 1];\n            }\n            if (!p2) {\n                pth.curve = pathClone(p);\n            }\n            return p2 ? [p, p2] : p;\n        }, null, pathClone),\n        parseDots = R._parseDots = cacher(function (gradient) {\n            var dots = [];\n            for (var i = 0, ii = gradient.length; i < ii; i++) {\n                var dot = {},\n                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\n                dot.color = R.getRGB(par[1]);\n                if (dot.color.error) {\n                    return null;\n                }\n                dot.opacity = dot.color.opacity;\n                dot.color = dot.color.hex;\n                par[2] && (dot.offset = par[2] + \"%\");\n                dots.push(dot);\n            }\n            for (i = 1, ii = dots.length - 1; i < ii; i++) {\n                if (!dots[i].offset) {\n                    var start = toFloat(dots[i - 1].offset || 0),\n                        end = 0;\n                    for (var j = i + 1; j < ii; j++) {\n                        if (dots[j].offset) {\n                            end = dots[j].offset;\n                            break;\n                        }\n                    }\n                    if (!end) {\n                        end = 100;\n                        j = ii;\n                    }\n                    end = toFloat(end);\n                    var d = (end - start) / (j - i + 1);\n                    for (; i < j; i++) {\n                        start += d;\n                        dots[i].offset = start + \"%\";\n                    }\n                }\n            }\n            return dots;\n        }),\n        tear = R._tear = function (el, paper) {\n            el == paper.top && (paper.top = el.prev);\n            el == paper.bottom && (paper.bottom = el.next);\n            el.next && (el.next.prev = el.prev);\n            el.prev && (el.prev.next = el.next);\n        },\n        tofront = R._tofront = function (el, paper) {\n            if (paper.top === el) {\n                return;\n            }\n            tear(el, paper);\n            el.next = null;\n            el.prev = paper.top;\n            paper.top.next = el;\n            paper.top = el;\n        },\n        toback = R._toback = function (el, paper) {\n            if (paper.bottom === el) {\n                return;\n            }\n            tear(el, paper);\n            el.next = paper.bottom;\n            el.prev = null;\n            paper.bottom.prev = el;\n            paper.bottom = el;\n        },\n        insertafter = R._insertafter = function (el, el2, paper) {\n            tear(el, paper);\n            el2 == paper.top && (paper.top = el);\n            el2.next && (el2.next.prev = el);\n            el.next = el2.next;\n            el.prev = el2;\n            el2.next = el;\n        },\n        insertbefore = R._insertbefore = function (el, el2, paper) {\n            tear(el, paper);\n            el2 == paper.bottom && (paper.bottom = el);\n            el2.prev && (el2.prev.next = el);\n            el.prev = el2.prev;\n            el2.prev = el;\n            el.next = el2;\n        },\n        /*\\\n         * Raphael.toMatrix\n         [ method ]\n         **\n         * Utility method\n         **\n         * Returns matrix of transformations applied to a given path\n         > Parameters\n         - path (string) path string\n         - transform (string|array) transformation string\n         = (object) @Matrix\n        \\*/\n        toMatrix = R.toMatrix = function (path, transform) {\n            var bb = pathDimensions(path),\n                el = {\n                    _: {\n                        transform: E\n                    },\n                    getBBox: function () {\n                        return bb;\n                    }\n                };\n            extractTransform(el, transform);\n            return el.matrix;\n        },\n        /*\\\n         * Raphael.transformPath\n         [ method ]\n         **\n         * Utility method\n         **\n         * Returns path transformed by a given transformation\n         > Parameters\n         - path (string) path string\n         - transform (string|array) transformation string\n         = (string) path\n        \\*/\n        transformPath = R.transformPath = function (path, transform) {\n            return mapPath(path, toMatrix(path, transform));\n        },\n        extractTransform = R._extractTransform = function (el, tstr) {\n            if (tstr == null) {\n                return el._.transform;\n            }\n            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n            var tdata = R.parseTransformString(tstr),\n                deg = 0,\n                dx = 0,\n                dy = 0,\n                sx = 1,\n                sy = 1,\n                _ = el._,\n                m = new Matrix;\n            _.transform = tdata || [];\n            if (tdata) {\n                for (var i = 0, ii = tdata.length; i < ii; i++) {\n                    var t = tdata[i],\n                        tlen = t.length,\n                        command = Str(t[0]).toLowerCase(),\n                        absolute = t[0] != command,\n                        inver = absolute ? m.invert() : 0,\n                        x1,\n                        y1,\n                        x2,\n                        y2,\n                        bb;\n                    if (command == \"t\" && tlen == 3) {\n                        if (absolute) {\n                            x1 = inver.x(0, 0);\n                            y1 = inver.y(0, 0);\n                            x2 = inver.x(t[1], t[2]);\n                            y2 = inver.y(t[1], t[2]);\n                            m.translate(x2 - x1, y2 - y1);\n                        } else {\n                            m.translate(t[1], t[2]);\n                        }\n                    } else if (command == \"r\") {\n                        if (tlen == 2) {\n                            bb = bb || el.getBBox(1);\n                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                            deg += t[1];\n                        } else if (tlen == 4) {\n                            if (absolute) {\n                                x2 = inver.x(t[2], t[3]);\n                                y2 = inver.y(t[2], t[3]);\n                                m.rotate(t[1], x2, y2);\n                            } else {\n                                m.rotate(t[1], t[2], t[3]);\n                            }\n                            deg += t[1];\n                        }\n                    } else if (command == \"s\") {\n                        if (tlen == 2 || tlen == 3) {\n                            bb = bb || el.getBBox(1);\n                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                            sx *= t[1];\n                            sy *= t[tlen - 1];\n                        } else if (tlen == 5) {\n                            if (absolute) {\n                                x2 = inver.x(t[3], t[4]);\n                                y2 = inver.y(t[3], t[4]);\n                                m.scale(t[1], t[2], x2, y2);\n                            } else {\n                                m.scale(t[1], t[2], t[3], t[4]);\n                            }\n                            sx *= t[1];\n                            sy *= t[2];\n                        }\n                    } else if (command == \"m\" && tlen == 7) {\n                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n                    }\n                    _.dirtyT = 1;\n                    el.matrix = m;\n                }\n            }\n\n            /*\\\n             * Element.matrix\n             [ property (object) ]\n             **\n             * Keeps @Matrix object, which represents element transformation\n            \\*/\n            el.matrix = m;\n\n            _.sx = sx;\n            _.sy = sy;\n            _.deg = deg;\n            _.dx = dx = m.e;\n            _.dy = dy = m.f;\n\n            if (sx == 1 && sy == 1 && !deg && _.bbox) {\n                _.bbox.x += +dx;\n                _.bbox.y += +dy;\n            } else {\n                _.dirtyT = 1;\n            }\n        },\n        getEmpty = function (item) {\n            var l = item[0];\n            switch (l.toLowerCase()) {\n                case \"t\": return [l, 0, 0];\n                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n                case \"r\": if (item.length == 4) {\n                    return [l, 0, item[2], item[3]];\n                } else {\n                    return [l, 0];\n                }\n                case \"s\": if (item.length == 5) {\n                    return [l, 1, 1, item[3], item[4]];\n                } else if (item.length == 3) {\n                    return [l, 1, 1];\n                } else {\n                    return [l, 1];\n                }\n            }\n        },\n        equaliseTransform = R._equaliseTransform = function (t1, t2) {\n            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n            t1 = R.parseTransformString(t1) || [];\n            t2 = R.parseTransformString(t2) || [];\n            var maxlength = mmax(t1.length, t2.length),\n                from = [],\n                to = [],\n                i = 0, j, jj,\n                tt1, tt2;\n            for (; i < maxlength; i++) {\n                tt1 = t1[i] || getEmpty(t2[i]);\n                tt2 = t2[i] || getEmpty(tt1);\n                if ((tt1[0] != tt2[0]) ||\n                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n                    ) {\n                    return;\n                }\n                from[i] = [];\n                to[i] = [];\n                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\n                    j in tt1 && (from[i][j] = tt1[j]);\n                    j in tt2 && (to[i][j] = tt2[j]);\n                }\n            }\n            return {\n                from: from,\n                to: to\n            };\n        };\n    R._getContainer = function (x, y, w, h) {\n        var container;\n        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\n        if (container == null) {\n            return;\n        }\n        if (container.tagName) {\n            if (y == null) {\n                return {\n                    container: container,\n                    width: container.style.pixelWidth || container.offsetWidth,\n                    height: container.style.pixelHeight || container.offsetHeight\n                };\n            } else {\n                return {\n                    container: container,\n                    width: y,\n                    height: w\n                };\n            }\n        }\n        return {\n            container: 1,\n            x: x,\n            y: y,\n            width: w,\n            height: h\n        };\n    };\n    /*\\\n     * Raphael.pathToRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to relative form\n     > Parameters\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments.\n    \\*/\n    R.pathToRelative = pathToRelative;\n    R._engine = {};\n    /*\\\n     * Raphael.path2curve\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic bezier curves.\n     > Parameters\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments.\n    \\*/\n    R.path2curve = path2curve;\n    /*\\\n     * Raphael.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns matrix based on given parameters.\n     > Parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     = (object) @Matrix\n    \\*/\n    R.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n    function Matrix(a, b, c, d, e, f) {\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds given matrix to existing one.\n         > Parameters\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            var out = [[], [], []],\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n                x, y, z, res;\n\n            if (a && a instanceof Matrix) {\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n            }\n\n            for (x = 0; x < 3; x++) {\n                for (y = 0; y < 3; y++) {\n                    res = 0;\n                    for (z = 0; z < 3; z++) {\n                        res += m[x][z] * matrix[z][y];\n                    }\n                    out[x][y] = res;\n                }\n            }\n            this.a = out[0][0];\n            this.b = out[1][0];\n            this.c = out[0][1];\n            this.d = out[1][1];\n            this.e = out[0][2];\n            this.f = out[1][2];\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         > Parameters\n         - x (number)\n         - y (number)\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.add(1, 0, 0, 1, x, y);\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         > Parameters\n         - x (number)\n         - y (number) #optional\n         - cx (number) #optional\n         - cy (number) #optional\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n            this.add(x, 0, 0, y, 0, 0);\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         > Parameters\n         - a (number)\n         - x (number)\n         - y (number)\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = R.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         > Parameters\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         > Parameters\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return R.svg ?\n                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\n                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\n        };\n        matrixproto.toFilter = function () {\n            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\n                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\n                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.c], [this.b, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            // rotation\n            var sin = -row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = R.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = R.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Return transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this[split]();\n            if (s.isSimple) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n\n    var preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    getEventPosition = function (e) {\n        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n\n        return {\n            x: e.clientX + scrollX,\n            y: e.clientY + scrollY\n        };\n    },\n    addEvent = (function () {\n        if (g.doc.addEventListener) {\n            return function (obj, type, fn, element) {\n                var f = function (e) {\n                    var pos = getEventPosition(e);\n                    return fn.call(element, e, pos.x, pos.y);\n                };\n                obj.addEventListener(type, f, false);\n\n                if (supportsTouch && touchMap[type]) {\n                    var _f = function (e) {\n                        var pos = getEventPosition(e),\n                            olde = e;\n\n                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                            if (e.targetTouches[i].target == obj) {\n                                e = e.targetTouches[i];\n                                e.originalEvent = olde;\n                                e.preventDefault = preventTouch;\n                                e.stopPropagation = stopTouch;\n                                break;\n                            }\n                        }\n\n                        return fn.call(element, e, pos.x, pos.y);\n                    };\n                    obj.addEventListener(touchMap[type], _f, false);\n                }\n\n                return function () {\n                    obj.removeEventListener(type, f, false);\n\n                    if (supportsTouch && touchMap[type])\n                        obj.removeEventListener(touchMap[type], _f, false);\n\n                    return true;\n                };\n            };\n        } else if (g.doc.attachEvent) {\n            return function (obj, type, fn, element) {\n                var f = function (e) {\n                    e = e || g.win.event;\n                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n                        x = e.clientX + scrollX,\n                        y = e.clientY + scrollY;\n                    e.preventDefault = e.preventDefault || preventDefault;\n                    e.stopPropagation = e.stopPropagation || stopPropagation;\n                    return fn.call(element, e, x, y);\n                };\n                obj.attachEvent(\"on\" + type, f);\n                var detacher = function () {\n                    obj.detachEvent(\"on\" + type, f);\n                    return true;\n                };\n                return detacher;\n            };\n        }\n    })(),\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch && e.touches) {\n                var i = e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            g.win.opera && parent.removeChild(node);\n            node.style.display = \"none\";\n            o = dragi.el.paper.getElementByPoint(x, y);\n            node.style.display = display;\n            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        R.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n        }\n        drag = [];\n    },\n    /*\\\n     * Raphael.el\n     [ property (object) ]\n     **\n     * You can add your own method to elements. This is useful when you want to hack default functionality or\n     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\n     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\n     > Usage\n     | Raphael.el.red = function () {\n     |     this.attr({fill: \"#f00\"});\n     | };\n     | // then use it\n     | paper.circle(100, 100, 20).red();\n    \\*/\n    elproto = R.el = {};\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds event handler for click for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes event handler for click for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds event handler for double click for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes event handler for double click for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds event handler for mousedown for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes event handler for mousedown for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds event handler for mousemove for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes event handler for mousemove for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds event handler for mouseout for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes event handler for mouseout for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds event handler for mouseover for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes event handler for mouseover for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds event handler for mouseup for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes event handler for mouseup for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds event handler for touchstart for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes event handler for touchstart for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds event handler for touchmove for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes event handler for touchmove for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds event handler for touchend for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes event handler for touchend for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds event handler for touchcancel for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes event handler for touchcancel for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            R[eventName] = elproto[eventName] = function (fn, scope) {\n                if (R.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\n                }\n                return this;\n            };\n            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--){\n                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\n                        events[l].unbind();\n                        events.splice(l, 1);\n                        !events.length && delete this.events;\n                    }\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key.\n     **\n     * See also @Element.removeData\n     > Parameters\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     * or, if key and value are not specified:\n     = (object) Key/value pairs for all the data associated with the element.\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0) {\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (R.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"raphael.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     > Parameters\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            delete eldata[this.id];\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n     /*\\\n     * Element.getData\n     [ method ]\n     **\n     * Retrieves the element data\n     = (object) data\n    \\*/\n    elproto.getData = function () {\n        return clone(eldata[this.id] || {});\n    };\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds event handlers for hover for the element.\n     > Parameters\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes event handlers for hover for the element.\n     > Parameters\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for drag of the element.\n     > Parameters\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionally following `drag` events will be triggered: `drag.start.<id>` on start,\n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\n     * `drag.over.<id>` will be fired as well.\n     *\n     * Start event and start handler will be called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler will be called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler will be called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        function start(e) {\n            (e.originalEvent || e).preventDefault();\n            var x = e.clientX,\n                y = e.clientY,\n                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n            this._drag.id = e.identifier;\n            if (supportsTouch && e.touches) {\n                var i = e.touches.length, touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    this._drag.id = touch.identifier;\n                    if (touch.identifier == this._drag.id) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        break;\n                    }\n                }\n            }\n            this._drag.x = x + scrollX;\n            this._drag.y = y + scrollY;\n            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\n            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\n            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\n            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, this._drag.x, this._drag.y, e);\n        }\n        this._drag = {};\n        draggable.push({el: this, start: start});\n        this.mousedown(start);\n        return this;\n    };\n    /*\\\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\n     > Parameters\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    elproto.onDragOver = function (f) {\n        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\n    };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from given element.\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].start);\n            draggable.splice(i, 1);\n            eve.unbind(\"raphael.drag.*.\" + this.id);\n        }\n        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\n        drag = [];\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) Raphaël element object with type “circle”\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    paperproto.circle = function (x, y, r) {\n        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - r (number) #optional radius for rounded corners, default is 0\n     = (object) Raphaël element object with type “rect”\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    paperproto.rect = function (x, y, w, h, r) {\n        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) Raphaël element object with type “ellipse”\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    paperproto.ellipse = function (x, y, rx, ry) {\n        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a path element by given path data string.\n     > Parameters\n     - pathString (string) #optional path string in SVG format.\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\n     | \"M10,20L30,40\"\n     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\n     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\n    \\*/\n    paperproto.path = function (pathString) {\n        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\n        var out = R._engine.path(R.format[apply](R, arguments), this);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Embeds an image into the surface.\n     **\n     > Parameters\n     **\n     - src (string) URI of the source image\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) Raphaël element object with type “image”\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    paperproto.image = function (src, x, y, w, h) {\n        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string. If you need line breaks, put “\\n” in the string.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string) The text string to draw\n     = (object) Raphaël element object with type “text”\n     **\n     > Usage\n     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\n    \\*/\n    paperproto.text = function (x, y, text) {\n        var out = R._engine.text(this, x || 0, y || 0, Str(text));\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.set\n     [ method ]\n     **\n     * Creates array-like object to keep and operate several elements at once.\n     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\n     * Sets act as pseudo elements — all methods available to an element can be used on a set.\n     = (object) array-like object that represents set of elements\n     **\n     > Usage\n     | var st = paper.set();\n     | st.push(\n     |     paper.circle(10, 10, 5),\n     |     paper.circle(30, 10, 5)\n     | );\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\n    \\*/\n    paperproto.set = function (itemsArray) {\n        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\n        var out = new Set(itemsArray);\n        this.__set__ && this.__set__.push(out);\n        out[\"paper\"] = this;\n        out[\"type\"] = \"set\";\n        return out;\n    };\n    /*\\\n     * Paper.setStart\n     [ method ]\n     **\n     * Creates @Paper.set. All elements that will be created after calling this method and before calling\n     * @Paper.setFinish will be added to the set.\n     **\n     > Usage\n     | paper.setStart();\n     | paper.circle(10, 10, 5),\n     | paper.circle(30, 10, 5)\n     | var st = paper.setFinish();\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\n    \\*/\n    paperproto.setStart = function (set) {\n        this.__set__ = set || this.set();\n    };\n    /*\\\n     * Paper.setFinish\n     [ method ]\n     **\n     * See @Paper.setStart. This method finishes catching and returns resulting set.\n     **\n     = (object) set\n    \\*/\n    paperproto.setFinish = function (set) {\n        var out = this.__set__;\n        delete this.__set__;\n        return out;\n    };\n    /*\\\n     * Paper.getSize\n     [ method ]\n     **\n     * Obtains current paper actual size.\n     **\n     = (object)\n     \\*/\n    paperproto.getSize = function () {\n        var container = this.canvas.parentNode;\n        return {\n            width: container.offsetWidth,\n            height: container.offsetHeight\n                };\n        };\n    /*\\\n     * Paper.setSize\n     [ method ]\n     **\n     * If you need to change dimensions of the canvas call this method\n     **\n     > Parameters\n     **\n     - width (number) new width of the canvas\n     - height (number) new height of the canvas\n    \\*/\n    paperproto.setSize = function (width, height) {\n        return R._engine.setSize.call(this, width, height);\n    };\n    /*\\\n     * Paper.setViewBox\n     [ method ]\n     **\n     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\n     * specifying new boundaries.\n     **\n     > Parameters\n     **\n     - x (number) new x position, default is `0`\n     - y (number) new y position, default is `0`\n     - w (number) new width of the canvas\n     - h (number) new height of the canvas\n     - fit (boolean) `true` if you want graphics to fit into new boundary box\n    \\*/\n    paperproto.setViewBox = function (x, y, w, h, fit) {\n        return R._engine.setViewBox.call(this, x, y, w, h, fit);\n    };\n    /*\\\n     * Paper.top\n     [ property ]\n     **\n     * Points to the topmost element on the paper\n    \\*/\n    /*\\\n     * Paper.bottom\n     [ property ]\n     **\n     * Points to the bottom element on the paper\n    \\*/\n    paperproto.top = paperproto.bottom = null;\n    /*\\\n     * Paper.raphael\n     [ property ]\n     **\n     * Points to the @Raphael object/function\n    \\*/\n    paperproto.raphael = R;\n    var getOffset = function (elem) {\n        var box = elem.getBoundingClientRect(),\n            doc = elem.ownerDocument,\n            body = doc.body,\n            docElem = doc.documentElement,\n            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n        return {\n            y: top,\n            x: left\n        };\n    };\n    /*\\\n     * Paper.getElementByPoint\n     [ method ]\n     **\n     * Returns you topmost element under given point.\n     **\n     = (object) Raphaël element object\n     > Parameters\n     **\n     - x (number) x coordinate from the top left corner of the window\n     - y (number) y coordinate from the top left corner of the window\n     > Usage\n     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n    \\*/\n    paperproto.getElementByPoint = function (x, y) {\n        var paper = this,\n            svg = paper.canvas,\n            target = g.doc.elementFromPoint(x, y);\n        if (g.win.opera && target.tagName == \"svg\") {\n            var so = getOffset(svg),\n                sr = svg.createSVGRect();\n            sr.x = x - so.x;\n            sr.y = y - so.y;\n            sr.width = sr.height = 1;\n            var hits = svg.getIntersectionList(sr, null);\n            if (hits.length) {\n                target = hits[hits.length - 1];\n            }\n        }\n        if (!target) {\n            return null;\n        }\n        while (target.parentNode && target != svg.parentNode && !target.raphael) {\n            target = target.parentNode;\n        }\n        target == paper.canvas.parentNode && (target = svg);\n        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\n        return target;\n    };\n\n    /*\\\n     * Paper.getElementsByBBox\n     [ method ]\n     **\n     * Returns set of elements that have an intersecting bounding box\n     **\n     > Parameters\n     **\n     - bbox (object) bbox to check with\n     = (object) @Set\n     \\*/\n    paperproto.getElementsByBBox = function (bbox) {\n        var set = this.set();\n        this.forEach(function (el) {\n            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\n                set.push(el);\n            }\n        });\n        return set;\n    };\n\n    /*\\\n     * Paper.getById\n     [ method ]\n     **\n     * Returns you element by its internal ID.\n     **\n     > Parameters\n     **\n     - id (number) id\n     = (object) Raphaël element object\n    \\*/\n    paperproto.getById = function (id) {\n        var bot = this.bottom;\n        while (bot) {\n            if (bot.id == id) {\n                return bot;\n            }\n            bot = bot.next;\n        }\n        return null;\n    };\n    /*\\\n     * Paper.forEach\n     [ method ]\n     **\n     * Executes given function for each element on the paper\n     *\n     * If callback function returns `false` it will stop loop running.\n     **\n     > Parameters\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Paper object\n     > Usage\n     | paper.forEach(function (el) {\n     |     el.attr({ stroke: \"blue\" });\n     | });\n    \\*/\n    paperproto.forEach = function (callback, thisArg) {\n        var bot = this.bottom;\n        while (bot) {\n            if (callback.call(thisArg, bot) === false) {\n                return this;\n            }\n            bot = bot.next;\n        }\n        return this;\n    };\n    /*\\\n     * Paper.getElementsByPoint\n     [ method ]\n     **\n     * Returns set of elements that have common point inside\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the point\n     - y (number) y coordinate of the point\n     = (object) @Set\n    \\*/\n    paperproto.getElementsByPoint = function (x, y) {\n        var set = this.set();\n        this.forEach(function (el) {\n            if (el.isPointInside(x, y)) {\n                set.push(el);\n            }\n        });\n        return set;\n    };\n    function x_y() {\n        return this.x + S + this.y;\n    }\n    function x_y_w_h() {\n        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n    }\n    /*\\\n     * Element.isPointInside\n     [ method ]\n     **\n     * Determine if given point is inside this element’s shape\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the point\n     - y (number) y coordinate of the point\n     = (boolean) `true` if point inside the shape\n    \\*/\n    elproto.isPointInside = function (x, y) {\n        var rp = this.realPath = getPath[this.type](this);\n        if (this.attr('transform') && this.attr('transform').length) {\n            rp = R.transformPath(rp, this.attr('transform'));\n        }\n        return R.isPointInsidePath(rp, x, y);\n    };\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Return bounding box for a given element\n     **\n     > Parameters\n     **\n     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\n     = (object) Bounding box object:\n     o {\n     o     x: (number) top left corner x\n     o     y: (number) top left corner y\n     o     x2: (number) bottom right corner x\n     o     y2: (number) bottom right corner y\n     o     width: (number) width\n     o     height: (number) height\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.removed) {\n            return {};\n        }\n        var _ = this._;\n        if (isWithoutTransform) {\n            if (_.dirty || !_.bboxwt) {\n                this.realPath = getPath[this.type](this);\n                _.bboxwt = pathDimensions(this.realPath);\n                _.bboxwt.toString = x_y_w_h;\n                _.dirty = 0;\n            }\n            return _.bboxwt;\n        }\n        if (_.dirty || _.dirtyT || !_.bbox) {\n            if (_.dirty || !this.realPath) {\n                _.bboxwt = 0;\n                this.realPath = getPath[this.type](this);\n            }\n            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\n            _.bbox.toString = x_y_w_h;\n            _.dirty = _.dirtyT = 0;\n        }\n        return _.bbox;\n    };\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     = (object) clone of a given element\n     **\n    \\*/\n    elproto.clone = function () {\n        if (this.removed) {\n            return null;\n        }\n        var out = this.paper[this.type]().attr(this.attr());\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Element.glow\n     [ method ]\n     **\n     * Return set of elements that create glow-like effect around given element. See @Paper.set.\n     *\n     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\n     **\n     > Parameters\n     **\n     - glow (object) #optional parameters object with all properties optional:\n     o {\n     o     width (number) size of the glow, default is `10`\n     o     fill (boolean) will it be filled, default is `false`\n     o     opacity (number) opacity, default is `0.5`\n     o     offsetx (number) horizontal offset, default is `0`\n     o     offsety (number) vertical offset, default is `0`\n     o     color (string) glow colour, default is `black`\n     o }\n     = (object) @Paper.set of elements that represents glow\n    \\*/\n    elproto.glow = function (glow) {\n        if (this.type == \"text\") {\n            return null;\n        }\n        glow = glow || {};\n        var s = {\n            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\n            fill: glow.fill || false,\n            opacity: glow.opacity == null ? .5 : glow.opacity,\n            offsetx: glow.offsetx || 0,\n            offsety: glow.offsety || 0,\n            color: glow.color || \"#000\"\n        },\n            c = s.width / 2,\n            r = this.paper,\n            out = r.set(),\n            path = this.realPath || getPath[this.type](this);\n        path = this.matrix ? mapPath(path, this.matrix) : path;\n        for (var i = 1; i < c + 1; i++) {\n            out.push(r.path(path).attr({\n                stroke: s.color,\n                fill: s.fill ? s.color : \"none\",\n                \"stroke-linejoin\": \"round\",\n                \"stroke-linecap\": \"round\",\n                \"stroke-width\": +(s.width / c * i).toFixed(3),\n                opacity: +(s.opacity / c).toFixed(3)\n            }));\n        }\n        return out.insertBefore(this).translate(s.offsetx, s.offsety);\n    };\n    var curveslengths = {},\n    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    },\n    getLengthFactory = function (istotal, subpath) {\n        return function (path, length, onlystart) {\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return {x: point.x, y: point.y, alpha: point.alpha};\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\n            return point;\n        };\n    };\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    /*\\\n     * Raphael.getTotalLength\n     [ method ]\n     **\n     * Returns length of the given path in pixels.\n     **\n     > Parameters\n     **\n     - path (string) SVG path string.\n     **\n     = (number) length.\n    \\*/\n    R.getTotalLength = getTotalLength;\n    /*\\\n     * Raphael.getPointAtLength\n     [ method ]\n     **\n     * Return coordinates of the point located at the given length on the given path.\n     **\n     > Parameters\n     **\n     - path (string) SVG path string\n     - length (number)\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate\n     o     y: (number) y coordinate\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    R.getPointAtLength = getPointAtLength;\n    /*\\\n     * Raphael.getSubpath\n     [ method ]\n     **\n     * Return subpath of a given path from given length to given length.\n     **\n     > Parameters\n     **\n     - path (string) SVG path string\n     - from (number) position of the start of the segment\n     - to (number) position of the end of the segment\n     **\n     = (string) pathstring for the segment\n    \\*/\n    R.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns length of the path in pixels. Only works for element of “path” type.\n     = (number) length.\n    \\*/\n    elproto.getTotalLength = function () {\n        var path = this.getPath();\n        if (!path) {\n            return;\n        }\n\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n\n        return getTotalLength(path);\n    };\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\n     **\n     > Parameters\n     **\n     - length (number)\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate\n     o     y: (number) y coordinate\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        var path = this.getPath();\n        if (!path) {\n            return;\n        }\n\n        return getPointAtLength(path, length);\n    };\n    /*\\\n     * Element.getPath\n     [ method ]\n     **\n     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\n     = (object) path\n     **\n    \\*/\n    elproto.getPath = function () {\n        var path,\n            getPath = R._getPath[this.type];\n\n        if (this.type == \"text\" || this.type == \"set\") {\n            return;\n        }\n\n        if (getPath) {\n            path = getPath(this);\n        }\n\n        return path;\n    };\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\n     **\n     > Parameters\n     **\n     - from (number) position of the start of the segment\n     - to (number) position of the end of the segment\n     **\n     = (string) pathstring for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        var path = this.getPath();\n        if (!path) {\n            return;\n        }\n\n        return R.getSubpath(path, from, to);\n    };\n    /*\\\n     * Raphael.easing_formulas\n     [ property ]\n     **\n     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\n     # <ul>\n     #     <li>“linear”</li>\n     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\n     #     <li>“>” or “easeOut” or “ease-out”</li>\n     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\n     #     <li>“backIn” or “back-in”</li>\n     #     <li>“backOut” or “back-out”</li>\n     #     <li>“elastic”</li>\n     #     <li>“bounce”</li>\n     # </ul>\n     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\n    \\*/\n    var ef = R.easing_formulas = {\n        linear: function (n) {\n            return n;\n        },\n        \"<\": function (n) {\n            return pow(n, 1.7);\n        },\n        \">\": function (n) {\n            return pow(n, .48);\n        },\n        \"<>\": function (n) {\n            var q = .48 - n / 1.04,\n                Q = math.sqrt(.1734 + q * q),\n                x = Q - q,\n                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n                y = -Q - q,\n                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n                t = X + Y + .5;\n            return (1 - t) * 3 * t * t + t * t * t;\n        },\n        backIn: function (n) {\n            var s = 1.70158;\n            return n * n * ((s + 1) * n - s);\n        },\n        backOut: function (n) {\n            n = n - 1;\n            var s = 1.70158;\n            return n * n * ((s + 1) * n + s) + 1;\n        },\n        elastic: function (n) {\n            if (n == !!n) {\n                return n;\n            }\n            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\n        },\n        bounce: function (n) {\n            var s = 7.5625,\n                p = 2.75,\n                l;\n            if (n < (1 / p)) {\n                l = s * n * n;\n            } else {\n                if (n < (2 / p)) {\n                    n -= (1.5 / p);\n                    l = s * n * n + .75;\n                } else {\n                    if (n < (2.5 / p)) {\n                        n -= (2.25 / p);\n                        l = s * n * n + .9375;\n                    } else {\n                        n -= (2.625 / p);\n                        l = s * n * n + .984375;\n                    }\n                }\n            }\n            return l;\n        }\n    };\n    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\n    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\n    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\n    ef[\"back-in\"] = ef.backIn;\n    ef[\"back-out\"] = ef.backOut;\n\n    var animationElements = [],\n        requestAnimFrame = window.requestAnimationFrame       ||\n                           window.webkitRequestAnimationFrame ||\n                           window.mozRequestAnimationFrame    ||\n                           window.oRequestAnimationFrame      ||\n                           window.msRequestAnimationFrame     ||\n                           function (callback) {\n                               setTimeout(callback, 16);\n                           },\n        animation = function () {\n            var Now = +new Date,\n                l = 0;\n            for (; l < animationElements.length; l++) {\n                var e = animationElements[l];\n                if (e.el.removed || e.paused) {\n                    continue;\n                }\n                var time = Now - e.start,\n                    ms = e.ms,\n                    easing = e.easing,\n                    from = e.from,\n                    diff = e.diff,\n                    to = e.to,\n                    t = e.t,\n                    that = e.el,\n                    set = {},\n                    now,\n                    init = {},\n                    key;\n                if (e.initstatus) {\n                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\n                    e.status = e.initstatus;\n                    delete e.initstatus;\n                    e.stop && animationElements.splice(l--, 1);\n                } else {\n                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\n                }\n                if (time < 0) {\n                    continue;\n                }\n                if (time < ms) {\n                    var pos = easing(time / ms);\n                    for (var attr in from) if (from[has](attr)) {\n                        switch (availableAnimAttrs[attr]) {\n                            case nu:\n                                now = +from[attr] + pos * ms * diff[attr];\n                                break;\n                            case \"colour\":\n                                now = \"rgb(\" + [\n                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\n                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\n                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\n                                ].join(\",\") + \")\";\n                                break;\n                            case \"path\":\n                                now = [];\n                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\n                                    now[i] = [from[attr][i][0]];\n                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\n                                    }\n                                    now[i] = now[i].join(S);\n                                }\n                                now = now.join(S);\n                                break;\n                            case \"transform\":\n                                if (diff[attr].real) {\n                                    now = [];\n                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\n                                        now[i] = [from[attr][i][0]];\n                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\n                                        }\n                                    }\n                                } else {\n                                    var get = function (i) {\n                                        return +from[attr][i] + pos * ms * diff[attr][i];\n                                    };\n                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\n                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\n                                }\n                                break;\n                            case \"csv\":\n                                if (attr == \"clip-rect\") {\n                                    now = [];\n                                    i = 4;\n                                    while (i--) {\n                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\n                                    }\n                                }\n                                break;\n                            default:\n                                var from2 = [][concat](from[attr]);\n                                now = [];\n                                i = that.paper.customAttributes[attr].length;\n                                while (i--) {\n                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\n                                }\n                                break;\n                        }\n                        set[attr] = now;\n                    }\n                    that.attr(set);\n                    (function (id, that, anim) {\n                        setTimeout(function () {\n                            eve(\"raphael.anim.frame.\" + id, that, anim);\n                        });\n                    })(that.id, that, e.anim);\n                } else {\n                    (function(f, el, a) {\n                        setTimeout(function() {\n                            eve(\"raphael.anim.frame.\" + el.id, el, a);\n                            eve(\"raphael.anim.finish.\" + el.id, el, a);\n                            R.is(f, \"function\") && f.call(el);\n                        });\n                    })(e.callback, that, e.anim);\n                    that.attr(to);\n                    animationElements.splice(l--, 1);\n                    if (e.repeat > 1 && !e.next) {\n                        for (key in to) if (to[has](key)) {\n                            init[key] = e.totalOrigin[key];\n                        }\n                        e.el.attr(init);\n                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\n                    }\n                    if (e.next && !e.stop) {\n                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\n                    }\n                }\n            }\n            animationElements.length && requestAnimFrame(animation);\n        },\n        upto255 = function (color) {\n            return color > 255 ? 255 : color < 0 ? 0 : color;\n        };\n    /*\\\n     * Element.animateWith\n     [ method ]\n     **\n     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\n     **\n     > Parameters\n     **\n     - el (object) element to sync with\n     - anim (object) animation to sync with\n     - params (object) #optional final attributes for the element, see also @Element.attr\n     - ms (number) #optional number of milliseconds for animation to run\n     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n     - callback (function) #optional callback function. Will be called at the end of animation.\n     * or\n     - element (object) element to sync with\n     - anim (object) animation to sync with\n     - animation (object) #optional animation object, see @Raphael.animation\n     **\n     = (object) original element\n    \\*/\n    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\n        var element = this;\n        if (element.removed) {\n            callback && callback.call(element);\n            return element;\n        }\n        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\n            x, y;\n        runAnimation(a, element, a.percents[0], null, element.attr());\n        for (var i = 0, ii = animationElements.length; i < ii; i++) {\n            if (animationElements[i].anim == anim && animationElements[i].el == el) {\n                animationElements[ii - 1].start = animationElements[i].start;\n                break;\n            }\n        }\n        return element;\n        //\n        //\n        // var a = params ? R.animation(params, ms, easing, callback) : anim,\n        //     status = element.status(anim);\n        // return this.animate(a).status(a, status * anim.ms / a.ms);\n    };\n    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\n        var cx = 3 * p1x,\n            bx = 3 * (p2x - p1x) - cx,\n            ax = 1 - cx - bx,\n            cy = 3 * p1y,\n            by = 3 * (p2y - p1y) - cy,\n            ay = 1 - cy - by;\n        function sampleCurveX(t) {\n            return ((ax * t + bx) * t + cx) * t;\n        }\n        function solve(x, epsilon) {\n            var t = solveCurveX(x, epsilon);\n            return ((ay * t + by) * t + cy) * t;\n        }\n        function solveCurveX(x, epsilon) {\n            var t0, t1, t2, x2, d2, i;\n            for(t2 = x, i = 0; i < 8; i++) {\n                x2 = sampleCurveX(t2) - x;\n                if (abs(x2) < epsilon) {\n                    return t2;\n                }\n                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\n                if (abs(d2) < 1e-6) {\n                    break;\n                }\n                t2 = t2 - x2 / d2;\n            }\n            t0 = 0;\n            t1 = 1;\n            t2 = x;\n            if (t2 < t0) {\n                return t0;\n            }\n            if (t2 > t1) {\n                return t1;\n            }\n            while (t0 < t1) {\n                x2 = sampleCurveX(t2);\n                if (abs(x2 - x) < epsilon) {\n                    return t2;\n                }\n                if (x > x2) {\n                    t0 = t2;\n                } else {\n                    t1 = t2;\n                }\n                t2 = (t1 - t0) / 2 + t0;\n            }\n            return t2;\n        }\n        return solve(t, 1 / (200 * duration));\n    }\n    elproto.onAnimation = function (f) {\n        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\n        return this;\n    };\n    function Animation(anim, ms) {\n        var percents = [],\n            newAnim = {};\n        this.ms = ms;\n        this.times = 1;\n        if (anim) {\n            for (var attr in anim) if (anim[has](attr)) {\n                newAnim[toFloat(attr)] = anim[attr];\n                percents.push(toFloat(attr));\n            }\n            percents.sort(sortByNumber);\n        }\n        this.anim = newAnim;\n        this.top = percents[percents.length - 1];\n        this.percents = percents;\n    }\n    /*\\\n     * Animation.delay\n     [ method ]\n     **\n     * Creates a copy of existing animation object with given delay.\n     **\n     > Parameters\n     **\n     - delay (number) number of ms to pass between animation start and actual animation\n     **\n     = (object) new altered Animation object\n     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\n     | circle1.animate(anim); // run the given animation immediately\n     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\n    \\*/\n    Animation.prototype.delay = function (delay) {\n        var a = new Animation(this.anim, this.ms);\n        a.times = this.times;\n        a.del = +delay || 0;\n        return a;\n    };\n    /*\\\n     * Animation.repeat\n     [ method ]\n     **\n     * Creates a copy of existing animation object with given repetition.\n     **\n     > Parameters\n     **\n     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\n     **\n     = (object) new altered Animation object\n    \\*/\n    Animation.prototype.repeat = function (times) {\n        var a = new Animation(this.anim, this.ms);\n        a.del = this.del;\n        a.times = math.floor(mmax(times, 0)) || 1;\n        return a;\n    };\n    function runAnimation(anim, element, percent, status, totalOrigin, times) {\n        percent = toFloat(percent);\n        var params,\n            isInAnim,\n            isInAnimSet,\n            percents = [],\n            next,\n            prev,\n            timestamp,\n            ms = anim.ms,\n            from = {},\n            to = {},\n            diff = {};\n        if (status) {\n            for (i = 0, ii = animationElements.length; i < ii; i++) {\n                var e = animationElements[i];\n                if (e.el.id == element.id && e.anim == anim) {\n                    if (e.percent != percent) {\n                        animationElements.splice(i, 1);\n                        isInAnimSet = 1;\n                    } else {\n                        isInAnim = e;\n                    }\n                    element.attr(e.totalOrigin);\n                    break;\n                }\n            }\n        } else {\n            status = +to; // NaN\n        }\n        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\n            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\n                percent = anim.percents[i];\n                prev = anim.percents[i - 1] || 0;\n                ms = ms / anim.top * (percent - prev);\n                next = anim.percents[i + 1];\n                params = anim.anim[percent];\n                break;\n            } else if (status) {\n                element.attr(anim.anim[anim.percents[i]]);\n            }\n        }\n        if (!params) {\n            return;\n        }\n        if (!isInAnim) {\n            for (var attr in params) if (params[has](attr)) {\n                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\n                    from[attr] = element.attr(attr);\n                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\n                    to[attr] = params[attr];\n                    switch (availableAnimAttrs[attr]) {\n                        case nu:\n                            diff[attr] = (to[attr] - from[attr]) / ms;\n                            break;\n                        case \"colour\":\n                            from[attr] = R.getRGB(from[attr]);\n                            var toColour = R.getRGB(to[attr]);\n                            diff[attr] = {\n                                r: (toColour.r - from[attr].r) / ms,\n                                g: (toColour.g - from[attr].g) / ms,\n                                b: (toColour.b - from[attr].b) / ms\n                            };\n                            break;\n                        case \"path\":\n                            var pathes = path2curve(from[attr], to[attr]),\n                                toPath = pathes[1];\n                            from[attr] = pathes[0];\n                            diff[attr] = [];\n                            for (i = 0, ii = from[attr].length; i < ii; i++) {\n                                diff[attr][i] = [0];\n                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\n                                }\n                            }\n                            break;\n                        case \"transform\":\n                            var _ = element._,\n                                eq = equaliseTransform(_[attr], to[attr]);\n                            if (eq) {\n                                from[attr] = eq.from;\n                                to[attr] = eq.to;\n                                diff[attr] = [];\n                                diff[attr].real = true;\n                                for (i = 0, ii = from[attr].length; i < ii; i++) {\n                                    diff[attr][i] = [from[attr][i][0]];\n                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\n                                    }\n                                }\n                            } else {\n                                var m = (element.matrix || new Matrix),\n                                    to2 = {\n                                        _: {transform: _.transform},\n                                        getBBox: function () {\n                                            return element.getBBox(1);\n                                        }\n                                    };\n                                from[attr] = [\n                                    m.a,\n                                    m.b,\n                                    m.c,\n                                    m.d,\n                                    m.e,\n                                    m.f\n                                ];\n                                extractTransform(to2, to[attr]);\n                                to[attr] = to2._.transform;\n                                diff[attr] = [\n                                    (to2.matrix.a - m.a) / ms,\n                                    (to2.matrix.b - m.b) / ms,\n                                    (to2.matrix.c - m.c) / ms,\n                                    (to2.matrix.d - m.d) / ms,\n                                    (to2.matrix.e - m.e) / ms,\n                                    (to2.matrix.f - m.f) / ms\n                                ];\n                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\n                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\n                                // extractTransform(to2, to[attr]);\n                                // diff[attr] = [\n                                //     (to2._.sx - _.sx) / ms,\n                                //     (to2._.sy - _.sy) / ms,\n                                //     (to2._.deg - _.deg) / ms,\n                                //     (to2._.dx - _.dx) / ms,\n                                //     (to2._.dy - _.dy) / ms\n                                // ];\n                            }\n                            break;\n                        case \"csv\":\n                            var values = Str(params[attr])[split](separator),\n                                from2 = Str(from[attr])[split](separator);\n                            if (attr == \"clip-rect\") {\n                                from[attr] = from2;\n                                diff[attr] = [];\n                                i = from2.length;\n                                while (i--) {\n                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\n                                }\n                            }\n                            to[attr] = values;\n                            break;\n                        default:\n                            values = [][concat](params[attr]);\n                            from2 = [][concat](from[attr]);\n                            diff[attr] = [];\n                            i = element.paper.customAttributes[attr].length;\n                            while (i--) {\n                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\n                            }\n                            break;\n                    }\n                }\n            }\n            var easing = params.easing,\n                easyeasy = R.easing_formulas[easing];\n            if (!easyeasy) {\n                easyeasy = Str(easing).match(bezierrg);\n                if (easyeasy && easyeasy.length == 5) {\n                    var curve = easyeasy;\n                    easyeasy = function (t) {\n                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\n                    };\n                } else {\n                    easyeasy = pipe;\n                }\n            }\n            timestamp = params.start || anim.start || +new Date;\n            e = {\n                anim: anim,\n                percent: percent,\n                timestamp: timestamp,\n                start: timestamp + (anim.del || 0),\n                status: 0,\n                initstatus: status || 0,\n                stop: false,\n                ms: ms,\n                easing: easyeasy,\n                from: from,\n                diff: diff,\n                to: to,\n                el: element,\n                callback: params.callback,\n                prev: prev,\n                next: next,\n                repeat: times || anim.times,\n                origin: element.attr(),\n                totalOrigin: totalOrigin\n            };\n            animationElements.push(e);\n            if (status && !isInAnim && !isInAnimSet) {\n                e.stop = true;\n                e.start = new Date - ms * status;\n                if (animationElements.length == 1) {\n                    return animation();\n                }\n            }\n            if (isInAnimSet) {\n                e.start = new Date - e.ms * status;\n            }\n            animationElements.length == 1 && requestAnimFrame(animation);\n        } else {\n            isInAnim.initstatus = status;\n            isInAnim.start = new Date - isInAnim.ms * status;\n        }\n        eve(\"raphael.anim.start.\" + element.id, element, anim);\n    }\n    /*\\\n     * Raphael.animation\n     [ method ]\n     **\n     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\n     * See also @Animation.delay and @Animation.repeat methods.\n     **\n     > Parameters\n     **\n     - params (object) final attributes for the element, see also @Element.attr\n     - ms (number) number of milliseconds for animation to run\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n     - callback (function) #optional callback function. Will be called at the end of animation.\n     **\n     = (object) @Animation\n    \\*/\n    R.animation = function (params, ms, easing, callback) {\n        if (params instanceof Animation) {\n            return params;\n        }\n        if (R.is(easing, \"function\") || !easing) {\n            callback = callback || easing || null;\n            easing = null;\n        }\n        params = Object(params);\n        ms = +ms || 0;\n        var p = {},\n            json,\n            attr;\n        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\n            json = true;\n            p[attr] = params[attr];\n        }\n        if (!json) {\n            // if percent-like syntax is used and end-of-all animation callback used\n            if(callback){\n                // find the last one\n                var lastKey = 0;\n                for(var i in params){\n                    var percent = toInt(i);\n                    if(params[has](i) && percent > lastKey){\n                        lastKey = percent;\n                    }\n                }\n                lastKey += '%';\n                // if already defined callback in the last keyframe, skip\n                !params[lastKey].callback && (params[lastKey].callback = callback);\n            }\n          return new Animation(params, ms);\n        } else {\n            easing && (p.easing = easing);\n            callback && (p.callback = callback);\n            return new Animation({100: p}, ms);\n        }\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Creates and starts animation for given element.\n     **\n     > Parameters\n     **\n     - params (object) final attributes for the element, see also @Element.attr\n     - ms (number) number of milliseconds for animation to run\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n     - callback (function) #optional callback function. Will be called at the end of animation.\n     * or\n     - animation (object) animation object, see @Raphael.animation\n     **\n     = (object) original element\n    \\*/\n    elproto.animate = function (params, ms, easing, callback) {\n        var element = this;\n        if (element.removed) {\n            callback && callback.call(element);\n            return element;\n        }\n        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\n        runAnimation(anim, element, anim.percents[0], null, element.attr());\n        return element;\n    };\n    /*\\\n     * Element.setTime\n     [ method ]\n     **\n     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\n     **\n     > Parameters\n     **\n     - anim (object) animation object\n     - value (number) number of milliseconds from the beginning of the animation\n     **\n     = (object) original element if `value` is specified\n     * Note, that during animation following events are triggered:\n     *\n     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\n    \\*/\n    elproto.setTime = function (anim, value) {\n        if (anim && value != null) {\n            this.status(anim, mmin(value, anim.ms) / anim.ms);\n        }\n        return this;\n    };\n    /*\\\n     * Element.status\n     [ method ]\n     **\n     * Gets or sets the status of animation of the element.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\n     **\n     = (number) status\n     * or\n     = (array) status if `anim` is not specified. Array of objects in format:\n     o {\n     o     anim: (object) animation object\n     o     status: (number) status\n     o }\n     * or\n     = (object) original element if `value` is specified\n    \\*/\n    elproto.status = function (anim, value) {\n        var out = [],\n            i = 0,\n            len,\n            e;\n        if (value != null) {\n            runAnimation(anim, this, -1, mmin(value, 1));\n            return this;\n        } else {\n            len = animationElements.length;\n            for (; i < len; i++) {\n                e = animationElements[i];\n                if (e.el.id == this.id && (!anim || e.anim == anim)) {\n                    if (anim) {\n                        return e.status;\n                    }\n                    out.push({\n                        anim: e.anim,\n                        status: e.status\n                    });\n                }\n            }\n            if (anim) {\n                return 0;\n            }\n            return out;\n        }\n    };\n    /*\\\n     * Element.pause\n     [ method ]\n     **\n     * Stops animation of the element with ability to resume it later on.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     **\n     = (object) original element\n    \\*/\n    elproto.pause = function (anim) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\n                animationElements[i].paused = true;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.resume\n     [ method ]\n     **\n     * Resumes animation if it was paused with @Element.pause method.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     **\n     = (object) original element\n    \\*/\n    elproto.resume = function (anim) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n            var e = animationElements[i];\n            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\n                delete e.paused;\n                this.status(e.anim, e.status);\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops animation of the element.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     **\n     = (object) original element\n    \\*/\n    elproto.stop = function (anim) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\n                animationElements.splice(i--, 1);\n            }\n        }\n        return this;\n    };\n    function stopAnimation(paper) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\n            animationElements.splice(i--, 1);\n        }\n    }\n    eve.on(\"raphael.remove\", stopAnimation);\n    eve.on(\"raphael.clear\", stopAnimation);\n    elproto.toString = function () {\n        return \"Rapha\\xebl\\u2019s object\";\n    };\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set.\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it.\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set.\n     *\n     * If function returns `false` it will stop loop running.\n     **\n     > Parameters\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    for (var method in elproto) if (elproto[has](method)) {\n        setproto[method] = (function (methodname) {\n            return function () {\n                var arg = arguments;\n                return this.forEach(function (el) {\n                    el[methodname][apply](el, arg);\n                });\n            };\n        })(method);\n    }\n    setproto.attr = function (name, value) {\n        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\n            for (var j = 0, jj = name.length; j < jj; j++) {\n                this.items[j].attr(name[j]);\n            }\n        } else {\n            for (var i = 0, ii = this.items.length; i < ii; i++) {\n                this.items[i].attr(name, value);\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     > Parameters\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     > Parameters\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found & removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n    };\n    setproto.animate = function (params, ms, easing, callback) {\n        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\n        var len = this.items.length,\n            i = len,\n            item,\n            set = this,\n            collector;\n        if (!len) {\n            return this;\n        }\n        callback && (collector = function () {\n            !--len && callback.call(set);\n        });\n        easing = R.is(easing, string) ? easing : collector;\n        var anim = R.animation(params, ms, easing, collector);\n        item = this.items[--i].animate(anim);\n        while (i--) {\n            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\n            (this.items[i] && !this.items[i].removed) || len--;\n        }\n        return this;\n    };\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin[apply](0, x);\n        y = mmin[apply](0, y);\n        x2 = mmax[apply](0, x2);\n        y2 = mmax[apply](0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y\n        };\n    };\n    setproto.clone = function (s) {\n        s = this.paper.set();\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Rapha\\xebl\\u2018s set\";\n    };\n\n    setproto.glow = function(glowConfig) {\n        var ret = this.paper.set();\n        this.forEach(function(shape, index){\n            var g = shape.glow(glowConfig);\n            if(g != null){\n                g.forEach(function(shape2, index2){\n                    ret.push(shape2);\n                });\n            }\n        });\n        return ret;\n    };\n\n\n    /*\\\n     * Set.isPointInside\n     [ method ]\n     **\n     * Determine if given point is inside this set’s elements\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the point\n     - y (number) y coordinate of the point\n     = (boolean) `true` if point is inside any of the set's elements\n     \\*/\n    setproto.isPointInside = function (x, y) {\n        var isPointInside = false;\n        this.forEach(function (el) {\n            if (el.isPointInside(x, y)) {\n                isPointInside = true;\n                return false; // stop loop\n            }\n        });\n        return isPointInside;\n    };\n\n    /*\\\n     * Raphael.registerFont\n     [ method ]\n     **\n     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\n     * Returns original parameter, so it could be used with chaining.\n     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\n     **\n     > Parameters\n     **\n     - font (object) the font to register\n     = (object) the font you passed in\n     > Usage\n     | Cufon.registerFont(Raphael.registerFont({…}));\n    \\*/\n    R.registerFont = function (font) {\n        if (!font.face) {\n            return font;\n        }\n        this.fonts = this.fonts || {};\n        var fontcopy = {\n                w: font.w,\n                face: {},\n                glyphs: {}\n            },\n            family = font.face[\"font-family\"];\n        for (var prop in font.face) if (font.face[has](prop)) {\n            fontcopy.face[prop] = font.face[prop];\n        }\n        if (this.fonts[family]) {\n            this.fonts[family].push(fontcopy);\n        } else {\n            this.fonts[family] = [fontcopy];\n        }\n        if (!font.svg) {\n            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\n            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\n                var path = font.glyphs[glyph];\n                fontcopy.glyphs[glyph] = {\n                    w: path.w,\n                    k: {},\n                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\n                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\n                        }) + \"z\"\n                };\n                if (path.k) {\n                    for (var k in path.k) if (path[has](k)) {\n                        fontcopy.glyphs[glyph].k[k] = path.k[k];\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    /*\\\n     * Paper.getFont\n     [ method ]\n     **\n     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\n     **\n     > Parameters\n     **\n     - family (string) font family name or any word from it\n     - weight (string) #optional font weight\n     - style (string) #optional font style\n     - stretch (string) #optional font stretch\n     = (object) the font object\n     > Usage\n     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\n    \\*/\n    paperproto.getFont = function (family, weight, style, stretch) {\n        stretch = stretch || \"normal\";\n        style = style || \"normal\";\n        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\n        if (!R.fonts) {\n            return;\n        }\n        var font = R.fonts[family];\n        if (!font) {\n            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\n            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\n                if (name.test(fontName)) {\n                    font = R.fonts[fontName];\n                    break;\n                }\n            }\n        }\n        var thefont;\n        if (font) {\n            for (var i = 0, ii = font.length; i < ii; i++) {\n                thefont = font[i];\n                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\n                    break;\n                }\n            }\n        }\n        return thefont;\n    };\n    /*\\\n     * Paper.print\n     [ method ]\n     **\n     * Creates path that represent given text written using given font at given position with given size.\n     * Result of the method is path element that contains whole text as a separate path.\n     **\n     > Parameters\n     **\n     - x (number) x position of the text\n     - y (number) y position of the text\n     - string (string) text to print\n     - font (object) font object, see @Paper.getFont\n     - size (number) #optional size of the font, default is `16`\n     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\n     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\n     - line_spacing (number) #optional number in range `1..3`, default is `1`\n     = (object) resulting path element, which consist of all letters\n     > Usage\n     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\n    \\*/\n    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\n        origin = origin || \"middle\"; // baseline|middle\n        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\n        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\n        var letters = Str(string)[split](E),\n            shift = 0,\n            notfirst = 0,\n            path = E,\n            scale;\n        R.is(font, \"string\") && (font = this.getFont(font));\n        if (font) {\n            scale = (size || 16) / font.face[\"units-per-em\"];\n            var bb = font.face.bbox[split](separator),\n                top = +bb[0],\n                lineHeight = bb[3] - bb[1],\n                shifty = 0,\n                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\n            for (var i = 0, ii = letters.length; i < ii; i++) {\n                if (letters[i] == \"\\n\") {\n                    shift = 0;\n                    curr = 0;\n                    notfirst = 0;\n                    shifty += lineHeight * line_spacing;\n                } else {\n                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\n                        curr = font.glyphs[letters[i]];\n                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\n                    notfirst = 1;\n                }\n                if (curr && curr.d) {\n                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\n                }\n            }\n        }\n        return this.path(path).attr({\n            fill: \"#000\",\n            stroke: \"none\"\n        });\n    };\n\n    /*\\\n     * Paper.add\n     [ method ]\n     **\n     * Imports elements in JSON array in format `{type: type, <attributes>}`\n     **\n     > Parameters\n     **\n     - json (array)\n     = (object) resulting set of imported elements\n     > Usage\n     | paper.add([\n     |     {\n     |         type: \"circle\",\n     |         cx: 10,\n     |         cy: 10,\n     |         r: 5\n     |     },\n     |     {\n     |         type: \"rect\",\n     |         x: 10,\n     |         y: 10,\n     |         width: 10,\n     |         height: 10,\n     |         fill: \"#fc0\"\n     |     }\n     | ]);\n    \\*/\n    paperproto.add = function (json) {\n        if (R.is(json, \"array\")) {\n            var res = this.set(),\n                i = 0,\n                ii = json.length,\n                j;\n            for (; i < ii; i++) {\n                j = json[i] || {};\n                elements[has](j.type) && res.push(this[j.type]().attr(j));\n            }\n        }\n        return res;\n    };\n\n    /*\\\n     * Raphael.format\n     [ method ]\n     **\n     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\n     **\n     > Parameters\n     **\n     - token (string) string to format\n     - … (string) rest of arguments will be treated as parameters for replacement\n     = (string) formated string\n     > Usage\n     | var x = 10,\n     |     y = 20,\n     |     width = 40,\n     |     height = 50;\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\n    \\*/\n    R.format = function (token, params) {\n        var args = R.is(params, array) ? [0][concat](params) : arguments;\n        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\n            return args[++i] == null ? E : args[i];\n        }));\n        return token || E;\n    };\n    /*\\\n     * Raphael.fullfill\n     [ method ]\n     **\n     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\n     **\n     > Parameters\n     **\n     - token (string) string to format\n     - json (object) object which properties will be used as a replacement\n     = (string) formated string\n     > Usage\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n     |     x: 10,\n     |     y: 20,\n     |     dim: {\n     |         width: 40,\n     |         height: 50,\n     |         \"negative width\": -40\n     |     }\n     | }));\n    \\*/\n    R.fullfill = (function () {\n        var tokenRegex = /\\{([^\\}]+)\\}/g,\n            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n            replacer = function (all, key, obj) {\n                var res = obj;\n                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                    name = name || quotedName;\n                    if (res) {\n                        if (name in res) {\n                            res = res[name];\n                        }\n                        typeof res == \"function\" && isFunc && (res = res());\n                    }\n                });\n                res = (res == null || res == obj ? all : res) + \"\";\n                return res;\n            };\n        return function (str, obj) {\n            return String(str).replace(tokenRegex, function (all, key) {\n                return replacer(all, key, obj);\n            });\n        };\n    })();\n    /*\\\n     * Raphael.ninja\n     [ method ]\n     **\n     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\n     * Beware, that in this case plugins could stop working, because they are depending on global variable existence.\n     **\n     = (object) Raphael object\n     > Usage\n     | (function (local_raphael) {\n     |     var paper = local_raphael(10, 10, 320, 200);\n     |     …\n     | })(Raphael.ninja());\n    \\*/\n    R.ninja = function () {\n        if (oldRaphael.was) {\n            g.win.Raphael = oldRaphael.is;\n        } else {\n            // IE8 raises an error when deleting window property\n            window.Raphael = undefined;\n            try {\n                delete window.Raphael;\n            } catch(e) {}\n        }\n        return R;\n    };\n    /*\\\n     * Raphael.st\n     [ property (object) ]\n     **\n     * You can add your own method to elements and sets. It is wise to add a set method for each element method\n     * you added, so you will be able to call the same method on sets too.\n     **\n     * See also @Raphael.el.\n     > Usage\n     | Raphael.el.red = function () {\n     |     this.attr({fill: \"#f00\"});\n     | };\n     | Raphael.st.red = function () {\n     |     this.forEach(function (el) {\n     |         el.red();\n     |     });\n     | };\n     | // then use it\n     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\n    \\*/\n    R.st = setproto;\n\n    eve.on(\"raphael.DOMload\", function () {\n        loaded = true;\n    });\n\n    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\n    (function (doc, loaded, f) {\n        if (doc.readyState == null && doc.addEventListener){\n            doc.addEventListener(loaded, f = function () {\n                doc.removeEventListener(loaded, f, false);\n                doc.readyState = \"complete\";\n            }, false);\n            doc.readyState = \"loading\";\n        }\n        function isLoaded() {\n            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\n        }\n        isLoaded();\n    })(document, \"DOMContentLoaded\");\n\n    return R;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ \"./dev/raphael.svg.js\":\n/*!****************************!*\\\n  !*** ./dev/raphael.svg.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./raphael.core */ \"./dev/raphael.core.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(R) {\n    if (R && !R.svg) {\n        return;\n    }\n\n    var has = \"hasOwnProperty\",\n        Str = String,\n        toFloat = parseFloat,\n        toInt = parseInt,\n        math = Math,\n        mmax = math.max,\n        abs = math.abs,\n        pow = math.pow,\n        separator = /[, ]+/,\n        eve = R.eve,\n        E = \"\",\n        S = \" \";\n    var xlink = \"http://www.w3.org/1999/xlink\",\n        markers = {\n            block: \"M5,0 0,2.5 5,5z\",\n            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\n            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\n            open: \"M6,1 1,3.5 6,6\",\n            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\n        },\n        markerCounter = {};\n    R.toString = function () {\n        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\n    };\n    var $ = function (el, attr) {\n        if (attr) {\n            if (typeof el == \"string\") {\n                el = $(el);\n            }\n            for (var key in attr) if (attr[has](key)) {\n                if (key.substring(0, 6) == \"xlink:\") {\n                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\n                } else {\n                    el.setAttribute(key, Str(attr[key]));\n                }\n            }\n        } else {\n            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\n            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\n        }\n        return el;\n    },\n    addGradientFill = function (element, gradient) {\n        var type = \"linear\",\n            id = element.id + gradient,\n            fx = .5, fy = .5,\n            o = element.node,\n            SVG = element.paper,\n            s = o.style,\n            el = R._g.doc.getElementById(id);\n        if (!el) {\n            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\n                type = \"radial\";\n                if (_fx && _fy) {\n                    fx = toFloat(_fx);\n                    fy = toFloat(_fy);\n                    var dir = ((fy > .5) * 2 - 1);\n                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\n                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\n                        fy != .5 &&\n                        (fy = fy.toFixed(5) - 1e-5 * dir);\n                }\n                return E;\n            });\n            gradient = gradient.split(/\\s*\\-\\s*/);\n            if (type == \"linear\") {\n                var angle = gradient.shift();\n                angle = -toFloat(angle);\n                if (isNaN(angle)) {\n                    return null;\n                }\n                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\n                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\n                vector[2] *= max;\n                vector[3] *= max;\n                if (vector[2] < 0) {\n                    vector[0] = -vector[2];\n                    vector[2] = 0;\n                }\n                if (vector[3] < 0) {\n                    vector[1] = -vector[3];\n                    vector[3] = 0;\n                }\n            }\n            var dots = R._parseDots(gradient);\n            if (!dots) {\n                return null;\n            }\n            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\n\n            if (element.gradient && id != element.gradient.id) {\n                SVG.defs.removeChild(element.gradient);\n                delete element.gradient;\n            }\n\n            if (!element.gradient) {\n                el = $(type + \"Gradient\", {id: id});\n                element.gradient = el;\n                $(el, type == \"radial\" ? {\n                    fx: fx,\n                    fy: fy\n                } : {\n                    x1: vector[0],\n                    y1: vector[1],\n                    x2: vector[2],\n                    y2: vector[3],\n                    gradientTransform: element.matrix.invert()\n                });\n                SVG.defs.appendChild(el);\n                for (var i = 0, ii = dots.length; i < ii; i++) {\n                    el.appendChild($(\"stop\", {\n                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\n                        \"stop-color\": dots[i].color || \"#fff\",\n                        \"stop-opacity\": isFinite(dots[i].opacity) ? dots[i].opacity : 1\n                    }));\n                }\n            }\n        }\n        $(o, {\n            fill: fillurl(id),\n            opacity: 1,\n            \"fill-opacity\": 1\n        });\n        s.fill = E;\n        s.opacity = 1;\n        s.fillOpacity = 1;\n        return 1;\n    },\n    isIE9or10 = function () {\n      var mode = document.documentMode;\n      return mode && (mode === 9 || mode === 10);\n    },\n    fillurl = function (id) {\n      if (isIE9or10()) {\n          return \"url('#\" + id + \"')\";\n      }\n      var location = document.location;\n      var locationString = (\n          location.protocol + '//' +\n          location.host +\n          location.pathname +\n          location.search\n      );\n      return \"url('\" + locationString + \"#\" + id + \"')\";\n    },\n    updatePosition = function (o) {\n        var bbox = o.getBBox(1);\n        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\n    },\n    addArrow = function (o, value, isEnd) {\n        if (o.type == \"path\") {\n            var values = Str(value).toLowerCase().split(\"-\"),\n                p = o.paper,\n                se = isEnd ? \"end\" : \"start\",\n                node = o.node,\n                attrs = o.attrs,\n                stroke = attrs[\"stroke-width\"],\n                i = values.length,\n                type = \"classic\",\n                from,\n                to,\n                dx,\n                refX,\n                attr,\n                w = 3,\n                h = 3,\n                t = 5;\n            while (i--) {\n                switch (values[i]) {\n                    case \"block\":\n                    case \"classic\":\n                    case \"oval\":\n                    case \"diamond\":\n                    case \"open\":\n                    case \"none\":\n                        type = values[i];\n                        break;\n                    case \"wide\": h = 5; break;\n                    case \"narrow\": h = 2; break;\n                    case \"long\": w = 5; break;\n                    case \"short\": w = 2; break;\n                }\n            }\n            if (type == \"open\") {\n                w += 2;\n                h += 2;\n                t += 2;\n                dx = 1;\n                refX = isEnd ? 4 : 1;\n                attr = {\n                    fill: \"none\",\n                    stroke: attrs.stroke\n                };\n            } else {\n                refX = dx = w / 2;\n                attr = {\n                    fill: attrs.stroke,\n                    stroke: \"none\"\n                };\n            }\n            if (o._.arrows) {\n                if (isEnd) {\n                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\n                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\n                } else {\n                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\n                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\n                }\n            } else {\n                o._.arrows = {};\n            }\n            if (type != \"none\") {\n                var pathId = \"raphael-marker-\" + type,\n                    markerId = \"raphael-marker-\" + se + type + w + h + \"-obj\" + o.id;\n                if (!R._g.doc.getElementById(pathId)) {\n                    p.defs.appendChild($($(\"path\"), {\n                        \"stroke-linecap\": \"round\",\n                        d: markers[type],\n                        id: pathId\n                    }));\n                    markerCounter[pathId] = 1;\n                } else {\n                    markerCounter[pathId]++;\n                }\n                var marker = R._g.doc.getElementById(markerId),\n                    use;\n                if (!marker) {\n                    marker = $($(\"marker\"), {\n                        id: markerId,\n                        markerHeight: h,\n                        markerWidth: w,\n                        orient: \"auto\",\n                        refX: refX,\n                        refY: h / 2\n                    });\n                    use = $($(\"use\"), {\n                        \"xlink:href\": \"#\" + pathId,\n                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\n                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\n                    });\n                    marker.appendChild(use);\n                    p.defs.appendChild(marker);\n                    markerCounter[markerId] = 1;\n                } else {\n                    markerCounter[markerId]++;\n                    use = marker.getElementsByTagName(\"use\")[0];\n                }\n                $(use, attr);\n                var delta = dx * (type != \"diamond\" && type != \"oval\");\n                if (isEnd) {\n                    from = o._.arrows.startdx * stroke || 0;\n                    to = R.getTotalLength(attrs.path) - delta * stroke;\n                } else {\n                    from = delta * stroke;\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n                }\n                attr = {};\n                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\n                if (to || from) {\n                    attr.d = R.getSubpath(attrs.path, from, to);\n                }\n                $(node, attr);\n                o._.arrows[se + \"Path\"] = pathId;\n                o._.arrows[se + \"Marker\"] = markerId;\n                o._.arrows[se + \"dx\"] = delta;\n                o._.arrows[se + \"Type\"] = type;\n                o._.arrows[se + \"String\"] = value;\n            } else {\n                if (isEnd) {\n                    from = o._.arrows.startdx * stroke || 0;\n                    to = R.getTotalLength(attrs.path) - from;\n                } else {\n                    from = 0;\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n                }\n                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\n                delete o._.arrows[se + \"Path\"];\n                delete o._.arrows[se + \"Marker\"];\n                delete o._.arrows[se + \"dx\"];\n                delete o._.arrows[se + \"Type\"];\n                delete o._.arrows[se + \"String\"];\n            }\n            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\n                var item = R._g.doc.getElementById(attr);\n                item && item.parentNode.removeChild(item);\n            }\n        }\n    },\n    dasharray = {\n        \"-\": [3, 1],\n        \".\": [1, 1],\n        \"-.\": [3, 1, 1, 1],\n        \"-..\": [3, 1, 1, 1, 1, 1],\n        \". \": [1, 3],\n        \"- \": [4, 3],\n        \"--\": [8, 3],\n        \"- .\": [4, 3, 1, 3],\n        \"--.\": [8, 3, 1, 3],\n        \"--..\": [8, 3, 1, 3, 1, 3]\n    },\n    addDashes = function (o, value, params) {\n        value = dasharray[Str(value).toLowerCase()];\n        if (value) {\n            var width = o.attrs[\"stroke-width\"] || \"1\",\n                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\n                dashes = [],\n                i = value.length;\n            while (i--) {\n                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\n            }\n            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\n        }\n        else {\n          $(o.node, {\"stroke-dasharray\": \"none\"});\n        }\n    },\n    setFillAndStroke = function (o, params) {\n        var node = o.node,\n            attrs = o.attrs,\n            vis = node.style.visibility;\n        node.style.visibility = \"hidden\";\n        for (var att in params) {\n            if (params[has](att)) {\n                if (!R._availableAttrs[has](att)) {\n                    continue;\n                }\n                var value = params[att];\n                attrs[att] = value;\n                switch (att) {\n                    case \"blur\":\n                        o.blur(value);\n                        break;\n                    case \"title\":\n                        var title = node.getElementsByTagName(\"title\");\n\n                        // Use the existing <title>.\n                        if (title.length && (title = title[0])) {\n                          title.firstChild.nodeValue = value;\n                        } else {\n                          title = $(\"title\");\n                          var val = R._g.doc.createTextNode(value);\n                          title.appendChild(val);\n                          node.appendChild(title);\n                        }\n                        break;\n                    case \"href\":\n                    case \"target\":\n                        var pn = node.parentNode;\n                        if (pn.tagName.toLowerCase() != \"a\") {\n                            var hl = $(\"a\");\n                            pn.insertBefore(hl, node);\n                            hl.appendChild(node);\n                            pn = hl;\n                        }\n                        if (att == \"target\") {\n                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\n                        } else {\n                            pn.setAttributeNS(xlink, att, value);\n                        }\n                        break;\n                    case \"cursor\":\n                        node.style.cursor = value;\n                        break;\n                    case \"transform\":\n                        o.transform(value);\n                        break;\n                    case \"arrow-start\":\n                        addArrow(o, value);\n                        break;\n                    case \"arrow-end\":\n                        addArrow(o, value, 1);\n                        break;\n                    case \"clip-rect\":\n                        var rect = Str(value).split(separator);\n                        if (rect.length == 4) {\n                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\n                            var el = $(\"clipPath\"),\n                                rc = $(\"rect\");\n                            el.id = R.createUUID();\n                            $(rc, {\n                                x: rect[0],\n                                y: rect[1],\n                                width: rect[2],\n                                height: rect[3]\n                            });\n                            el.appendChild(rc);\n                            o.paper.defs.appendChild(el);\n                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\n                            o.clip = rc;\n                        }\n                        if (!value) {\n                            var path = node.getAttribute(\"clip-path\");\n                            if (path) {\n                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\n                                clip && clip.parentNode.removeChild(clip);\n                                $(node, {\"clip-path\": E});\n                                delete o.clip;\n                            }\n                        }\n                    break;\n                    case \"path\":\n                        if (o.type == \"path\") {\n                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\n                            o._.dirty = 1;\n                            if (o._.arrows) {\n                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n                            }\n                        }\n                        break;\n                    case \"width\":\n                        node.setAttribute(att, value);\n                        o._.dirty = 1;\n                        if (attrs.fx) {\n                            att = \"x\";\n                            value = attrs.x;\n                        } else {\n                            break;\n                        }\n                    case \"x\":\n                        if (attrs.fx) {\n                            value = -attrs.x - (attrs.width || 0);\n                        }\n                    case \"rx\":\n                        if (att == \"rx\" && o.type == \"rect\") {\n                            break;\n                        }\n                    case \"cx\":\n                        node.setAttribute(att, value);\n                        o.pattern && updatePosition(o);\n                        o._.dirty = 1;\n                        break;\n                    case \"height\":\n                        node.setAttribute(att, value);\n                        o._.dirty = 1;\n                        if (attrs.fy) {\n                            att = \"y\";\n                            value = attrs.y;\n                        } else {\n                            break;\n                        }\n                    case \"y\":\n                        if (attrs.fy) {\n                            value = -attrs.y - (attrs.height || 0);\n                        }\n                    case \"ry\":\n                        if (att == \"ry\" && o.type == \"rect\") {\n                            break;\n                        }\n                    case \"cy\":\n                        node.setAttribute(att, value);\n                        o.pattern && updatePosition(o);\n                        o._.dirty = 1;\n                        break;\n                    case \"r\":\n                        if (o.type == \"rect\") {\n                            $(node, {rx: value, ry: value});\n                        } else {\n                            node.setAttribute(att, value);\n                        }\n                        o._.dirty = 1;\n                        break;\n                    case \"src\":\n                        if (o.type == \"image\") {\n                            node.setAttributeNS(xlink, \"href\", value);\n                        }\n                        break;\n                    case \"stroke-width\":\n                        if (o._.sx != 1 || o._.sy != 1) {\n                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\n                        }\n                        node.setAttribute(att, value);\n                        if (attrs[\"stroke-dasharray\"]) {\n                            addDashes(o, attrs[\"stroke-dasharray\"], params);\n                        }\n                        if (o._.arrows) {\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n                        }\n                        break;\n                    case \"stroke-dasharray\":\n                        addDashes(o, value, params);\n                        break;\n                    case \"fill\":\n                        var isURL = Str(value).match(R._ISURL);\n                        if (isURL) {\n                            el = $(\"pattern\");\n                            var ig = $(\"image\");\n                            el.id = R.createUUID();\n                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\n                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\n                            el.appendChild(ig);\n\n                            (function (el) {\n                                R._preload(isURL[1], function () {\n                                    var w = this.offsetWidth,\n                                        h = this.offsetHeight;\n                                    $(el, {width: w, height: h});\n                                    $(ig, {width: w, height: h});\n                                });\n                            })(el);\n                            o.paper.defs.appendChild(el);\n                            $(node, {fill: \"url(#\" + el.id + \")\"});\n                            o.pattern = el;\n                            o.pattern && updatePosition(o);\n                            break;\n                        }\n                        var clr = R.getRGB(value);\n                        if (!clr.error) {\n                            delete params.gradient;\n                            delete attrs.gradient;\n                            !R.is(attrs.opacity, \"undefined\") &&\n                                R.is(params.opacity, \"undefined\") &&\n                                $(node, {opacity: attrs.opacity});\n                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\n                                R.is(params[\"fill-opacity\"], \"undefined\") &&\n                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\n                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\n                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\n                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n                                if (gradient) {\n                                    var stops = gradient.getElementsByTagName(\"stop\");\n                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\n                                }\n                            }\n                            attrs.gradient = value;\n                            attrs.fill = \"none\";\n                            break;\n                        }\n                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n                    case \"stroke\":\n                        clr = R.getRGB(value);\n                        node.setAttribute(att, clr.hex);\n                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n                        if (att == \"stroke\" && o._.arrows) {\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n                        }\n                        break;\n                    case \"gradient\":\n                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\n                        break;\n                    case \"opacity\":\n                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\n                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\n                        }\n                        // fall\n                    case \"fill-opacity\":\n                        if (attrs.gradient) {\n                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n                            if (gradient) {\n                                stops = gradient.getElementsByTagName(\"stop\");\n                                $(stops[stops.length - 1], {\"stop-opacity\": value});\n                            }\n                            break;\n                        }\n                    default:\n                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\n                        var cssrule = att.replace(/(\\-.)/g, function (w) {\n                            return w.substring(1).toUpperCase();\n                        });\n                        node.style[cssrule] = value;\n                        o._.dirty = 1;\n                        node.setAttribute(att, value);\n                        break;\n                }\n            }\n        }\n\n        tuneText(o, params);\n        node.style.visibility = vis;\n    },\n    leading = 1.2,\n    tuneText = function (el, params) {\n        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\n            return;\n        }\n        var a = el.attrs,\n            node = el.node,\n            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\"font-size\"), 10) : 10;\n\n        if (params[has](\"text\")) {\n            a.text = params.text;\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var texts = Str(params.text).split(\"\\n\"),\n                tspans = [],\n                tspan;\n            for (var i = 0, ii = texts.length; i < ii; i++) {\n                tspan = $(\"tspan\");\n                i && $(tspan, {dy: fontSize * leading, x: a.x});\n                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\n                node.appendChild(tspan);\n                tspans[i] = tspan;\n            }\n        } else {\n            tspans = node.getElementsByTagName(\"tspan\");\n            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\n                $(tspans[i], {dy: fontSize * leading, x: a.x});\n            } else {\n                $(tspans[0], {dy: 0});\n            }\n        }\n        $(node, {x: a.x, y: a.y});\n        el._.dirty = 1;\n        var bb = el._getBBox(),\n            dif = a.y - (bb.y + bb.height / 2);\n        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\n    },\n    getRealNode = function (node) {\n        if (node.parentNode && node.parentNode.tagName.toLowerCase() === \"a\") {\n            return node.parentNode;\n        } else {\n            return node;\n        }\n    },\n    Element = function (node, svg) {\n        var X = 0,\n            Y = 0;\n        /*\\\n         * Element.node\n         [ property (object) ]\n         **\n         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n         **\n         * Note: Don’t mess with it.\n         > Usage\n         | // draw a circle at coordinate 10,10 with radius of 10\n         | var c = paper.circle(10, 10, 10);\n         | c.node.onclick = function () {\n         |     c.attr(\"fill\", \"red\");\n         | };\n        \\*/\n        this[0] = this.node = node;\n        /*\\\n         * Element.raphael\n         [ property (object) ]\n         **\n         * Internal reference to @Raphael object. In case it is not available.\n         > Usage\n         | Raphael.el.red = function () {\n         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\n         |     hsb.h = 1;\n         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\n         | }\n        \\*/\n        node.raphael = true;\n        /*\\\n         * Element.id\n         [ property (number) ]\n         **\n         * Unique id of the element. Especially useful when you want to listen to events of the element,\n         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\n        \\*/\n        this.id = guid();\n        node.raphaelid = this.id;\n\n        /**\n        * Method that returns a 5 letter/digit id, enough for 36^5 = 60466176 elements\n        * @returns {string} id\n        */\n        function guid() {\n            return (\"0000\" + (Math.random()*Math.pow(36,5) << 0).toString(36)).slice(-5);\n        }\n\n        this.matrix = R.matrix();\n        this.realPath = null;\n        /*\\\n         * Element.paper\n         [ property (object) ]\n         **\n         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\n         > Usage\n         | Raphael.el.cross = function () {\n         |     this.attr({fill: \"red\"});\n         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\n         |         .attr({stroke: \"red\"});\n         | }\n        \\*/\n        this.paper = svg;\n        this.attrs = this.attrs || {};\n        this._ = {\n            transform: [],\n            sx: 1,\n            sy: 1,\n            deg: 0,\n            dx: 0,\n            dy: 0,\n            dirty: 1\n        };\n        !svg.bottom && (svg.bottom = this);\n        /*\\\n         * Element.prev\n         [ property (object) ]\n         **\n         * Reference to the previous element in the hierarchy.\n        \\*/\n        this.prev = svg.top;\n        svg.top && (svg.top.next = this);\n        svg.top = this;\n        /*\\\n         * Element.next\n         [ property (object) ]\n         **\n         * Reference to the next element in the hierarchy.\n        \\*/\n        this.next = null;\n    },\n    elproto = R.el;\n\n    Element.prototype = elproto;\n    elproto.constructor = Element;\n\n    R._engine.path = function (pathString, SVG) {\n        var el = $(\"path\");\n        SVG.canvas && SVG.canvas.appendChild(el);\n        var p = new Element(el, SVG);\n        p.type = \"path\";\n        setFillAndStroke(p, {\n            fill: \"none\",\n            stroke: \"#000\",\n            path: pathString\n        });\n        return p;\n    };\n    /*\\\n     * Element.rotate\n     [ method ]\n     **\n     * Deprecated! Use @Element.transform instead.\n     * Adds rotation by given angle around given point to the list of\n     * transformations of the element.\n     > Parameters\n     - deg (number) angle in degrees\n     - cx (number) #optional x coordinate of the centre of rotation\n     - cy (number) #optional y coordinate of the centre of rotation\n     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\n     = (object) @Element\n    \\*/\n    elproto.rotate = function (deg, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        deg = Str(deg).split(separator);\n        if (deg.length - 1) {\n            cx = toFloat(deg[1]);\n            cy = toFloat(deg[2]);\n        }\n        deg = toFloat(deg[0]);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n            cx = bbox.x + bbox.width / 2;\n            cy = bbox.y + bbox.height / 2;\n        }\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n        return this;\n    };\n    /*\\\n     * Element.scale\n     [ method ]\n     **\n     * Deprecated! Use @Element.transform instead.\n     * Adds scale by given amount relative to given point to the list of\n     * transformations of the element.\n     > Parameters\n     - sx (number) horisontal scale amount\n     - sy (number) vertical scale amount\n     - cx (number) #optional x coordinate of the centre of scale\n     - cy (number) #optional y coordinate of the centre of scale\n     * If cx & cy aren’t specified centre of the shape is used instead.\n     = (object) @Element\n    \\*/\n    elproto.scale = function (sx, sy, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        sx = Str(sx).split(separator);\n        if (sx.length - 1) {\n            sy = toFloat(sx[1]);\n            cx = toFloat(sx[2]);\n            cy = toFloat(sx[3]);\n        }\n        sx = toFloat(sx[0]);\n        (sy == null) && (sy = sx);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n        }\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n        return this;\n    };\n    /*\\\n     * Element.translate\n     [ method ]\n     **\n     * Deprecated! Use @Element.transform instead.\n     * Adds translation by given amount to the list of transformations of the element.\n     > Parameters\n     - dx (number) horisontal shift\n     - dy (number) vertical shift\n     = (object) @Element\n    \\*/\n    elproto.translate = function (dx, dy) {\n        if (this.removed) {\n            return this;\n        }\n        dx = Str(dx).split(separator);\n        if (dx.length - 1) {\n            dy = toFloat(dx[1]);\n        }\n        dx = toFloat(dx[0]) || 0;\n        dy = +dy || 0;\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n        return this;\n    };\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Adds transformation to the element which is separate to other attributes,\n     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\n     * of transformation string is similar to the path string syntax:\n     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\n     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\n     * scale and `m` is for matrix.\n     *\n     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\n     *\n     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\n     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\n     * coordinates as optional parameters, the default is the centre point of the element.\n     * Matrix accepts six parameters.\n     > Usage\n     | var el = paper.rect(10, 20, 300, 200);\n     | // translate 100, 100, rotate 45°, translate -100, 0\n     | el.transform(\"t100,100r45t-100,0\");\n     | // if you want you can append or prepend transformations\n     | el.transform(\"...t50,50\");\n     | el.transform(\"s2...\");\n     | // or even wrap\n     | el.transform(\"t50,50...t-50-50\");\n     | // to reset transformation call method with empty string\n     | el.transform(\"\");\n     | // to get current value call it without parameters\n     | console.log(el.transform());\n     > Parameters\n     - tstr (string) #optional transformation string\n     * If tstr isn’t specified\n     = (string) current transformation string\n     * else\n     = (object) @Element\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            return _.transform;\n        }\n        R._extractTransform(this, tstr);\n\n        this.clip && $(this.clip, {transform: this.matrix.invert()});\n        this.pattern && updatePosition(this);\n        this.node && $(this.node, {transform: this.matrix});\n\n        if (_.sx != 1 || _.sy != 1) {\n            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\n            this.attr({\"stroke-width\": sw});\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.hide\n     [ method ]\n     **\n     * Makes element invisible. See @Element.show.\n     = (object) @Element\n    \\*/\n    elproto.hide = function () {\n        if(!this.removed) this.node.style.display = \"none\";\n        return this;\n    };\n    /*\\\n     * Element.show\n     [ method ]\n     **\n     * Makes element visible. See @Element.hide.\n     = (object) @Element\n    \\*/\n    elproto.show = function () {\n        if(!this.removed) this.node.style.display = \"\";\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the paper.\n    \\*/\n    elproto.remove = function () {\n        var node = getRealNode(this.node);\n        if (this.removed || !node.parentNode) {\n            return;\n        }\n        var paper = this.paper;\n        paper.__set__ && paper.__set__.exclude(this);\n        eve.unbind(\"raphael.*.*.\" + this.id);\n        if (this.gradient) {\n            paper.defs.removeChild(this.gradient);\n        }\n        R._tear(this, paper);\n\n        node.parentNode.removeChild(node);\n\n        // Remove custom data for element\n        this.removeData();\n\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n        this.removed = true;\n    };\n    elproto._getBBox = function () {\n        if (this.node.style.display == \"none\") {\n            this.show();\n            var hide = true;\n        }\n        var canvasHidden = false,\n            containerStyle;\n        if (this.paper.canvas.parentElement) {\n          containerStyle = this.paper.canvas.parentElement.style;\n        } //IE10+ can't find parentElement\n        else if (this.paper.canvas.parentNode) {\n          containerStyle = this.paper.canvas.parentNode.style;\n        }\n\n        if(containerStyle && containerStyle.display == \"none\") {\n          canvasHidden = true;\n          containerStyle.display = \"\";\n        }\n        var bbox = {};\n        try {\n            bbox = this.node.getBBox();\n        } catch(e) {\n            // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\n            bbox = {\n                x: this.node.clientLeft,\n                y: this.node.clientTop,\n                width: this.node.clientWidth,\n                height: this.node.clientHeight\n            }\n        } finally {\n            bbox = bbox || {};\n            if(canvasHidden){\n              containerStyle.display = \"none\";\n            }\n        }\n        hide && this.hide();\n        return bbox;\n    };\n    /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Sets the attributes of the element.\n     > Parameters\n     - attrName (string) attribute’s name\n     - value (string) value\n     * or\n     - params (object) object of name/value pairs\n     * or\n     - attrName (string) attribute’s name\n     * or\n     - attrNames (array) in this case method returns array of current values for given attribute names\n     = (object) @Element if attrsName & value or params are passed in.\n     = (...) value of the attribute if only attrsName is passed in.\n     = (array) array of values of the attribute if attrsNames is passed in.\n     = (object) object of attributes if nothing is passed in.\n     > Possible parameters\n     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\n     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\n     o clip-rect (string) comma or space separated values: x, y, width and height\n     o cursor (string) CSS type of the cursor\n     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\n     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\n     o fill (string) colour, gradient or image\n     o fill-opacity (number)\n     o font (string)\n     o font-family (string)\n     o font-size (number) font size in pixels\n     o font-weight (string)\n     o height (number)\n     o href (string) URL, if specified element behaves as hyperlink\n     o opacity (number)\n     o path (string) SVG path string format\n     o r (number) radius of the circle, ellipse or rounded corner on the rect\n     o rx (number) horisontal radius of the ellipse\n     o ry (number) vertical radius of the ellipse\n     o src (string) image URL, only works for @Element.image element\n     o stroke (string) stroke colour\n     o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\n     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\n     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\n     o stroke-miterlimit (number)\n     o stroke-opacity (number)\n     o stroke-width (number) stroke width in pixels, default is '1'\n     o target (string) used with href\n     o text (string) contents of the text element. Use `\\n` for multiline text\n     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\n     o title (string) will create tooltip with a given text\n     o transform (string) see @Element.transform\n     o width (number)\n     o x (number)\n     o y (number)\n     > Gradients\n     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\n     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\n     *\n     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\n     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\n     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\n     > Path String\n     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\n     > Colour Parsing\n     # <ul>\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\n     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\n     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\n     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\n     # </ul>\n    \\*/\n    elproto.attr = function (name, value) {\n        if (this.removed) {\n            return this;\n        }\n        if (name == null) {\n            var res = {};\n            for (var a in this.attrs) if (this.attrs[has](a)) {\n                res[a] = this.attrs[a];\n            }\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n            res.transform = this._.transform;\n            return res;\n        }\n        if (value == null && R.is(name, \"string\")) {\n            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\n                return this.attrs.gradient;\n            }\n            if (name == \"transform\") {\n                return this._.transform;\n            }\n            var names = name.split(separator),\n                out = {};\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                name = names[i];\n                if (name in this.attrs) {\n                    out[name] = this.attrs[name];\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n                    out[name] = this.paper.customAttributes[name].def;\n                } else {\n                    out[name] = R._availableAttrs[name];\n                }\n            }\n            return ii - 1 ? out : out[names[0]];\n        }\n        if (value == null && R.is(name, \"array\")) {\n            out = {};\n            for (i = 0, ii = name.length; i < ii; i++) {\n                out[name[i]] = this.attr(name[i]);\n            }\n            return out;\n        }\n        if (value != null) {\n            var params = {};\n            params[name] = value;\n        } else if (name != null && R.is(name, \"object\")) {\n            params = name;\n        }\n        for (var key in params) {\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n        }\n        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n            this.attrs[key] = params[key];\n            for (var subkey in par) if (par[has](subkey)) {\n                params[subkey] = par[subkey];\n            }\n        }\n        setFillAndStroke(this, params);\n        return this;\n    };\n    /*\\\n     * Element.toFront\n     [ method ]\n     **\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\n     = (object) @Element\n    \\*/\n    elproto.toFront = function () {\n        if (this.removed) {\n            return this;\n        }\n        var node = getRealNode(this.node);\n        node.parentNode.appendChild(node);\n        var svg = this.paper;\n        svg.top != this && R._tofront(this, svg);\n        return this;\n    };\n    /*\\\n     * Element.toBack\n     [ method ]\n     **\n     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\n     = (object) @Element\n    \\*/\n    elproto.toBack = function () {\n        if (this.removed) {\n            return this;\n        }\n        var node = getRealNode(this.node);\n        var parentNode = node.parentNode;\n        parentNode.insertBefore(node, parentNode.firstChild);\n        R._toback(this, this.paper);\n        var svg = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts current object after the given one.\n     = (object) @Element\n    \\*/\n    elproto.insertAfter = function (element) {\n        if (this.removed || !element) {\n            return this;\n        }\n\n        var node = getRealNode(this.node);\n        var afterNode = getRealNode(element.node || element[element.length - 1].node);\n        if (afterNode.nextSibling) {\n            afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\n        } else {\n            afterNode.parentNode.appendChild(node);\n        }\n        R._insertafter(this, element, this.paper);\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts current object before the given one.\n     = (object) @Element\n    \\*/\n    elproto.insertBefore = function (element) {\n        if (this.removed || !element) {\n            return this;\n        }\n\n        var node = getRealNode(this.node);\n        var beforeNode = getRealNode(element.node || element[0].node);\n        beforeNode.parentNode.insertBefore(node, beforeNode);\n        R._insertbefore(this, element, this.paper);\n        return this;\n    };\n    elproto.blur = function (size) {\n        // Experimental. No Safari support. Use it on your own risk.\n        var t = this;\n        if (+size !== 0) {\n            var fltr = $(\"filter\"),\n                blur = $(\"feGaussianBlur\");\n            t.attrs.blur = size;\n            fltr.id = R.createUUID();\n            $(blur, {stdDeviation: +size || 1.5});\n            fltr.appendChild(blur);\n            t.paper.defs.appendChild(fltr);\n            t._blur = fltr;\n            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\n        } else {\n            if (t._blur) {\n                t._blur.parentNode.removeChild(t._blur);\n                delete t._blur;\n                delete t.attrs.blur;\n            }\n            t.node.removeAttribute(\"filter\");\n        }\n        return t;\n    };\n    R._engine.circle = function (svg, x, y, r) {\n        var el = $(\"circle\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\n        res.type = \"circle\";\n        $(el, res.attrs);\n        return res;\n    };\n    R._engine.rect = function (svg, x, y, w, h, r) {\n        var el = $(\"rect\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\n        res.type = \"rect\";\n        $(el, res.attrs);\n        return res;\n    };\n    R._engine.ellipse = function (svg, x, y, rx, ry) {\n        var el = $(\"ellipse\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\n        res.type = \"ellipse\";\n        $(el, res.attrs);\n        return res;\n    };\n    R._engine.image = function (svg, src, x, y, w, h) {\n        var el = $(\"image\");\n        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\n        el.setAttributeNS(xlink, \"href\", src);\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {x: x, y: y, width: w, height: h, src: src};\n        res.type = \"image\";\n        return res;\n    };\n    R._engine.text = function (svg, x, y, text) {\n        var el = $(\"text\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {\n            x: x,\n            y: y,\n            \"text-anchor\": \"middle\",\n            text: text,\n            \"font-family\": R._availableAttrs[\"font-family\"],\n            \"font-size\": R._availableAttrs[\"font-size\"],\n            stroke: \"none\",\n            fill: \"#000\"\n        };\n        res.type = \"text\";\n        setFillAndStroke(res, res.attrs);\n        return res;\n    };\n    R._engine.setSize = function (width, height) {\n        this.width = width || this.width;\n        this.height = height || this.height;\n        this.canvas.setAttribute(\"width\", this.width);\n        this.canvas.setAttribute(\"height\", this.height);\n        if (this._viewBox) {\n            this.setViewBox.apply(this, this._viewBox);\n        }\n        return this;\n    };\n    R._engine.create = function () {\n        var con = R._getContainer.apply(0, arguments),\n            container = con && con.container;\n        if (!container) {\n            throw new Error(\"SVG container not found.\");\n        }\n        var x = con.x,\n            y = con.y,\n            width = con.width,\n            height = con.height,\n            cnvs = $(\"svg\"),\n            css = \"overflow:hidden;\",\n            isFloating;\n        x = x || 0;\n        y = y || 0;\n        width = width || 512;\n        height = height || 342;\n        $(cnvs, {\n            height: height,\n            version: 1.1,\n            width: width,\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\"\n        });\n        if (container == 1) {\n            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\n            R._g.doc.body.appendChild(cnvs);\n            isFloating = 1;\n        } else {\n            cnvs.style.cssText = css + \"position:relative\";\n            if (container.firstChild) {\n                container.insertBefore(cnvs, container.firstChild);\n            } else {\n                container.appendChild(cnvs);\n            }\n        }\n        container = new R._Paper;\n        container.width = width;\n        container.height = height;\n        container.canvas = cnvs;\n        container.clear();\n        container._left = container._top = 0;\n        isFloating && (container.renderfix = function () {});\n        container.renderfix();\n        return container;\n    };\n    R._engine.setViewBox = function (x, y, w, h, fit) {\n        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n        var paperSize = this.getSize(),\n            size = mmax(w / paperSize.width, h / paperSize.height),\n            top = this.top,\n            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\n            vb,\n            sw;\n        if (x == null) {\n            if (this._vbSize) {\n                size = 1;\n            }\n            delete this._vbSize;\n            vb = \"0 0 \" + this.width + S + this.height;\n        } else {\n            this._vbSize = size;\n            vb = x + S + y + S + w + S + h;\n        }\n        $(this.canvas, {\n            viewBox: vb,\n            preserveAspectRatio: aspectRatio\n        });\n        while (size && top) {\n            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\n            top.attr({\"stroke-width\": sw});\n            top._.dirty = 1;\n            top._.dirtyT = 1;\n            top = top.prev;\n        }\n        this._viewBox = [x, y, w, h, !!fit];\n        return this;\n    };\n    /*\\\n     * Paper.renderfix\n     [ method ]\n     **\n     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependent\n     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\n     * This method fixes the issue.\n     **\n       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\n    \\*/\n    R.prototype.renderfix = function () {\n        var cnvs = this.canvas,\n            s = cnvs.style,\n            pos;\n        try {\n            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\n        } catch (e) {\n            pos = cnvs.createSVGMatrix();\n        }\n        var left = -pos.e % 1,\n            top = -pos.f % 1;\n        if (left || top) {\n            if (left) {\n                this._left = (this._left + left) % 1;\n                s.left = this._left + \"px\";\n            }\n            if (top) {\n                this._top = (this._top + top) % 1;\n                s.top = this._top + \"px\";\n            }\n        }\n    };\n    /*\\\n     * Paper.clear\n     [ method ]\n     **\n     * Clears the paper, i.e. removes all the elements.\n    \\*/\n    R.prototype.clear = function () {\n        R.eve(\"raphael.clear\", this);\n        var c = this.canvas;\n        while (c.firstChild) {\n            c.removeChild(c.firstChild);\n        }\n        this.bottom = this.top = null;\n        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\n        c.appendChild(this.desc);\n        c.appendChild(this.defs = $(\"defs\"));\n    };\n    /*\\\n     * Paper.remove\n     [ method ]\n     **\n     * Removes the paper from the DOM.\n    \\*/\n    R.prototype.remove = function () {\n        eve(\"raphael.remove\", this);\n        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n    };\n    var setproto = R.st;\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n        setproto[method] = (function (methodname) {\n            return function () {\n                var arg = arguments;\n                return this.forEach(function (el) {\n                    el[methodname].apply(el, arg);\n                });\n            };\n        })(method);\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ \"./dev/raphael.vml.js\":\n/*!****************************!*\\\n  !*** ./dev/raphael.vml.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./raphael.core */ \"./dev/raphael.core.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(R) {\n    if (R && !R.vml) {\n        return;\n    }\n\n    var has = \"hasOwnProperty\",\n        Str = String,\n        toFloat = parseFloat,\n        math = Math,\n        round = math.round,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        fillString = \"fill\",\n        separator = /[, ]+/,\n        eve = R.eve,\n        ms = \" progid:DXImageTransform.Microsoft\",\n        S = \" \",\n        E = \"\",\n        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\n        bites = /([clmz]),?([^clmz]*)/gi,\n        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\n        val = /-?[^,\\s-]+/g,\n        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",\n        zoom = 21600,\n        pathTypes = {path: 1, rect: 1, image: 1},\n        ovalTypes = {circle: 1, ellipse: 1},\n        path2vml = function (path) {\n            var total =  /[ahqstv]/ig,\n                command = R._pathToAbsolute;\n            Str(path).match(total) && (command = R._path2curve);\n            total = /[clmz]/g;\n            if (command == R._pathToAbsolute && !Str(path).match(total)) {\n                var res = Str(path).replace(bites, function (all, command, args) {\n                    var vals = [],\n                        isMove = command.toLowerCase() == \"m\",\n                        res = map[command];\n                    args.replace(val, function (value) {\n                        if (isMove && vals.length == 2) {\n                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\n                            vals = [];\n                        }\n                        vals.push(round(value * zoom));\n                    });\n                    return res + vals;\n                });\n                return res;\n            }\n            var pa = command(path), p, r;\n            res = [];\n            for (var i = 0, ii = pa.length; i < ii; i++) {\n                p = pa[i];\n                r = pa[i][0].toLowerCase();\n                r == \"z\" && (r = \"x\");\n                for (var j = 1, jj = p.length; j < jj; j++) {\n                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\n                }\n                res.push(r);\n            }\n            return res.join(S);\n        },\n        compensation = function (deg, dx, dy) {\n            var m = R.matrix();\n            m.rotate(-deg, .5, .5);\n            return {\n                dx: m.x(dx, dy),\n                dy: m.y(dx, dy)\n            };\n        },\n        setCoords = function (p, sx, sy, dx, dy, deg) {\n            var _ = p._,\n                m = p.matrix,\n                fillpos = _.fillpos,\n                o = p.node,\n                s = o.style,\n                y = 1,\n                flip = \"\",\n                dxdy,\n                kx = zoom / sx,\n                ky = zoom / sy;\n            s.visibility = \"hidden\";\n            if (!sx || !sy) {\n                return;\n            }\n            o.coordsize = abs(kx) + S + abs(ky);\n            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\n            if (deg) {\n                var c = compensation(deg, dx, dy);\n                dx = c.dx;\n                dy = c.dy;\n            }\n            sx < 0 && (flip += \"x\");\n            sy < 0 && (flip += \" y\") && (y = -1);\n            s.flip = flip;\n            o.coordorigin = (dx * -kx) + S + (dy * -ky);\n            if (fillpos || _.fillsize) {\n                var fill = o.getElementsByTagName(fillString);\n                fill = fill && fill[0];\n                o.removeChild(fill);\n                if (fillpos) {\n                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\n                    fill.position = c.dx * y + S + c.dy * y;\n                }\n                if (_.fillsize) {\n                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\n                }\n                o.appendChild(fill);\n            }\n            s.visibility = \"visible\";\n        };\n    R.toString = function () {\n        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\n    };\n    var addArrow = function (o, value, isEnd) {\n        var values = Str(value).toLowerCase().split(\"-\"),\n            se = isEnd ? \"end\" : \"start\",\n            i = values.length,\n            type = \"classic\",\n            w = \"medium\",\n            h = \"medium\";\n        while (i--) {\n            switch (values[i]) {\n                case \"block\":\n                case \"classic\":\n                case \"oval\":\n                case \"diamond\":\n                case \"open\":\n                case \"none\":\n                    type = values[i];\n                    break;\n                case \"wide\":\n                case \"narrow\": h = values[i]; break;\n                case \"long\":\n                case \"short\": w = values[i]; break;\n            }\n        }\n        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\n        stroke[se + \"arrow\"] = type;\n        stroke[se + \"arrowlength\"] = w;\n        stroke[se + \"arrowwidth\"] = h;\n    },\n    setFillAndStroke = function (o, params) {\n        // o.paper.canvas.style.display = \"none\";\n        o.attrs = o.attrs || {};\n        var node = o.node,\n            a = o.attrs,\n            s = node.style,\n            xy,\n            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\n            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\n            res = o;\n\n\n        for (var par in params) if (params[has](par)) {\n            a[par] = params[par];\n        }\n        if (newpath) {\n            a.path = R._getPath[o.type](o);\n            o._.dirty = 1;\n        }\n        params.href && (node.href = params.href);\n        params.title && (node.title = params.title);\n        params.target && (node.target = params.target);\n        params.cursor && (s.cursor = params.cursor);\n        \"blur\" in params && o.blur(params.blur);\n        if (params.path && o.type == \"path\" || newpath) {\n            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\n            o._.dirty = 1;\n            if (o.type == \"image\") {\n                o._.fillpos = [a.x, a.y];\n                o._.fillsize = [a.width, a.height];\n                setCoords(o, 1, 1, 0, 0, 0);\n            }\n        }\n        \"transform\" in params && o.transform(params.transform);\n        if (isOval) {\n            var cx = +a.cx,\n                cy = +a.cy,\n                rx = +a.rx || +a.r || 0,\n                ry = +a.ry || +a.r || 0;\n            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\n            o._.dirty = 1;\n        }\n        if (\"clip-rect\" in params) {\n            var rect = Str(params[\"clip-rect\"]).split(separator);\n            if (rect.length == 4) {\n                rect[2] = +rect[2] + (+rect[0]);\n                rect[3] = +rect[3] + (+rect[1]);\n                var div = node.clipRect || R._g.doc.createElement(\"div\"),\n                    dstyle = div.style;\n                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\n                if (!node.clipRect) {\n                    dstyle.position = \"absolute\";\n                    dstyle.top = 0;\n                    dstyle.left = 0;\n                    dstyle.width = o.paper.width + \"px\";\n                    dstyle.height = o.paper.height + \"px\";\n                    node.parentNode.insertBefore(div, node);\n                    div.appendChild(node);\n                    node.clipRect = div;\n                }\n            }\n            if (!params[\"clip-rect\"]) {\n                node.clipRect && (node.clipRect.style.clip = \"auto\");\n            }\n        }\n        if (o.textpath) {\n            var textpathStyle = o.textpath.style;\n            params.font && (textpathStyle.font = params.font);\n            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\n            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\n            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\n            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\n        }\n        if (\"arrow-start\" in params) {\n            addArrow(res, params[\"arrow-start\"]);\n        }\n        if (\"arrow-end\" in params) {\n            addArrow(res, params[\"arrow-end\"], 1);\n        }\n        if (params.opacity != null ||\n            params.fill != null ||\n            params.src != null ||\n            params.stroke != null ||\n            params[\"stroke-width\"] != null ||\n            params[\"stroke-opacity\"] != null ||\n            params[\"fill-opacity\"] != null ||\n            params[\"stroke-dasharray\"] != null ||\n            params[\"stroke-miterlimit\"] != null ||\n            params[\"stroke-linejoin\"] != null ||\n            params[\"stroke-linecap\"] != null) {\n            var fill = node.getElementsByTagName(fillString),\n                newfill = false;\n            fill = fill && fill[0];\n            !fill && (newfill = fill = createNode(fillString));\n            if (o.type == \"image\" && params.src) {\n                fill.src = params.src;\n            }\n            params.fill && (fill.on = true);\n            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\n                fill.on = false;\n            }\n            if (fill.on && params.fill) {\n                var isURL = Str(params.fill).match(R._ISURL);\n                if (isURL) {\n                    fill.parentNode == node && node.removeChild(fill);\n                    fill.rotate = true;\n                    fill.src = isURL[1];\n                    fill.type = \"tile\";\n                    var bbox = o.getBBox(1);\n                    fill.position = bbox.x + S + bbox.y;\n                    o._.fillpos = [bbox.x, bbox.y];\n\n                    R._preload(isURL[1], function () {\n                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\n                    });\n                } else {\n                    fill.color = R.getRGB(params.fill).hex;\n                    fill.src = E;\n                    fill.type = \"solid\";\n                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\n                        a.fill = \"none\";\n                        a.gradient = params.fill;\n                        fill.rotate = false;\n                    }\n                }\n            }\n            if (\"fill-opacity\" in params || \"opacity\" in params) {\n                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\n                opacity = mmin(mmax(opacity, 0), 1);\n                fill.opacity = opacity;\n                if (fill.src) {\n                    fill.color = \"none\";\n                }\n            }\n            node.appendChild(fill);\n            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\n            newstroke = false;\n            !stroke && (newstroke = stroke = createNode(\"stroke\"));\n            if ((params.stroke && params.stroke != \"none\") ||\n                params[\"stroke-width\"] ||\n                params[\"stroke-opacity\"] != null ||\n                params[\"stroke-dasharray\"] ||\n                params[\"stroke-miterlimit\"] ||\n                params[\"stroke-linejoin\"] ||\n                params[\"stroke-linecap\"]) {\n                stroke.on = true;\n            }\n            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\n            var strokeColor = R.getRGB(params.stroke);\n            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\n            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\n            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\n            opacity = mmin(mmax(opacity, 0), 1);\n            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\n            params[\"stroke-width\"] && (stroke.weight = width);\n            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\n            stroke.opacity = opacity;\n\n            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\n            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\n            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\n            if (\"stroke-dasharray\" in params) {\n                var dasharray = {\n                    \"-\": \"shortdash\",\n                    \".\": \"shortdot\",\n                    \"-.\": \"shortdashdot\",\n                    \"-..\": \"shortdashdotdot\",\n                    \". \": \"dot\",\n                    \"- \": \"dash\",\n                    \"--\": \"longdash\",\n                    \"- .\": \"dashdot\",\n                    \"--.\": \"longdashdot\",\n                    \"--..\": \"longdashdotdot\"\n                };\n                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\n            }\n            newstroke && node.appendChild(stroke);\n        }\n        if (res.type == \"text\") {\n            res.paper.canvas.style.display = E;\n            var span = res.paper.span,\n                m = 100,\n                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\n            s = span.style;\n            a.font && (s.font = a.font);\n            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\n            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\n            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\n            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\n            s.fontSize = fontSize * m + \"px\";\n            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\n            var brect = span.getBoundingClientRect();\n            res.W = a.w = (brect.right - brect.left) / m;\n            res.H = a.h = (brect.bottom - brect.top) / m;\n            // res.paper.canvas.style.display = \"none\";\n            res.X = a.x;\n            res.Y = a.y + res.H / 2;\n\n            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\n            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\n            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\n                res._.dirty = 1;\n                break;\n            }\n\n            // text-anchor emulation\n            switch (a[\"text-anchor\"]) {\n                case \"start\":\n                    res.textpath.style[\"v-text-align\"] = \"left\";\n                    res.bbx = res.W / 2;\n                break;\n                case \"end\":\n                    res.textpath.style[\"v-text-align\"] = \"right\";\n                    res.bbx = -res.W / 2;\n                break;\n                default:\n                    res.textpath.style[\"v-text-align\"] = \"center\";\n                    res.bbx = 0;\n                break;\n            }\n            res.textpath.style[\"v-text-kern\"] = true;\n        }\n        // res.paper.canvas.style.display = E;\n    },\n    addGradientFill = function (o, gradient, fill) {\n        o.attrs = o.attrs || {};\n        var attrs = o.attrs,\n            pow = Math.pow,\n            opacity,\n            oindex,\n            type = \"linear\",\n            fxfy = \".5 .5\";\n        o.attrs.gradient = gradient;\n        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\n            type = \"radial\";\n            if (fx && fy) {\n                fx = toFloat(fx);\n                fy = toFloat(fy);\n                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\n                fxfy = fx + S + fy;\n            }\n            return E;\n        });\n        gradient = gradient.split(/\\s*\\-\\s*/);\n        if (type == \"linear\") {\n            var angle = gradient.shift();\n            angle = -toFloat(angle);\n            if (isNaN(angle)) {\n                return null;\n            }\n        }\n        var dots = R._parseDots(gradient);\n        if (!dots) {\n            return null;\n        }\n        o = o.shape || o.node;\n        if (dots.length) {\n            o.removeChild(fill);\n            fill.on = true;\n            fill.method = \"none\";\n            fill.color = dots[0].color;\n            fill.color2 = dots[dots.length - 1].color;\n            var clrs = [];\n            for (var i = 0, ii = dots.length; i < ii; i++) {\n                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\n            }\n            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\n            if (type == \"radial\") {\n                fill.type = \"gradientTitle\";\n                fill.focus = \"100%\";\n                fill.focussize = \"0 0\";\n                fill.focusposition = fxfy;\n                fill.angle = 0;\n            } else {\n                // fill.rotate= true;\n                fill.type = \"gradient\";\n                fill.angle = (270 - angle) % 360;\n            }\n            o.appendChild(fill);\n        }\n        return 1;\n    },\n    Element = function (node, vml) {\n        this[0] = this.node = node;\n        node.raphael = true;\n        this.id = R._oid++;\n        node.raphaelid = this.id;\n        this.X = 0;\n        this.Y = 0;\n        this.attrs = {};\n        this.paper = vml;\n        this.matrix = R.matrix();\n        this._ = {\n            transform: [],\n            sx: 1,\n            sy: 1,\n            dx: 0,\n            dy: 0,\n            deg: 0,\n            dirty: 1,\n            dirtyT: 1\n        };\n        !vml.bottom && (vml.bottom = this);\n        this.prev = vml.top;\n        vml.top && (vml.top.next = this);\n        vml.top = this;\n        this.next = null;\n    };\n    var elproto = R.el;\n\n    Element.prototype = elproto;\n    elproto.constructor = Element;\n    elproto.transform = function (tstr) {\n        if (tstr == null) {\n            return this._.transform;\n        }\n        var vbs = this.paper._viewBoxShift,\n            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\n            oldt;\n        if (vbs) {\n            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\n        }\n        R._extractTransform(this, vbt + tstr);\n        var matrix = this.matrix.clone(),\n            skew = this.skew,\n            o = this.node,\n            split,\n            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\n            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\n        matrix.translate(1, 1);\n        if (isPatt || isGrad || this.type == \"image\") {\n            skew.matrix = \"1 0 0 1\";\n            skew.offset = \"0 0\";\n            split = matrix.split();\n            if ((isGrad && split.noRotation) || !split.isSimple) {\n                o.style.filter = matrix.toFilter();\n                var bb = this.getBBox(),\n                    bbt = this.getBBox(1),\n                    dx = bb.x - bbt.x,\n                    dy = bb.y - bbt.y;\n                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\n                setCoords(this, 1, 1, dx, dy, 0);\n            } else {\n                o.style.filter = E;\n                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\n            }\n        } else {\n            o.style.filter = E;\n            skew.matrix = Str(matrix);\n            skew.offset = matrix.offset();\n        }\n        if (oldt !== null) { // empty string value is true as well\n            this._.transform = oldt;\n            R._extractTransform(this, oldt);\n        }\n        return this;\n    };\n    elproto.rotate = function (deg, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        if (deg == null) {\n            return;\n        }\n        deg = Str(deg).split(separator);\n        if (deg.length - 1) {\n            cx = toFloat(deg[1]);\n            cy = toFloat(deg[2]);\n        }\n        deg = toFloat(deg[0]);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n            cx = bbox.x + bbox.width / 2;\n            cy = bbox.y + bbox.height / 2;\n        }\n        this._.dirtyT = 1;\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n        return this;\n    };\n    elproto.translate = function (dx, dy) {\n        if (this.removed) {\n            return this;\n        }\n        dx = Str(dx).split(separator);\n        if (dx.length - 1) {\n            dy = toFloat(dx[1]);\n        }\n        dx = toFloat(dx[0]) || 0;\n        dy = +dy || 0;\n        if (this._.bbox) {\n            this._.bbox.x += dx;\n            this._.bbox.y += dy;\n        }\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n        return this;\n    };\n    elproto.scale = function (sx, sy, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        sx = Str(sx).split(separator);\n        if (sx.length - 1) {\n            sy = toFloat(sx[1]);\n            cx = toFloat(sx[2]);\n            cy = toFloat(sx[3]);\n            isNaN(cx) && (cx = null);\n            isNaN(cy) && (cy = null);\n        }\n        sx = toFloat(sx[0]);\n        (sy == null) && (sy = sx);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n        }\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n        this._.dirtyT = 1;\n        return this;\n    };\n    elproto.hide = function () {\n        !this.removed && (this.node.style.display = \"none\");\n        return this;\n    };\n    elproto.show = function () {\n        !this.removed && (this.node.style.display = E);\n        return this;\n    };\n    // Needed to fix the vml setViewBox issues\n    elproto.auxGetBBox = R.el.getBBox;\n    elproto.getBBox = function(){\n      var b = this.auxGetBBox();\n      if (this.paper && this.paper._viewBoxShift)\n      {\n        var c = {};\n        var z = 1/this.paper._viewBoxShift.scale;\n        c.x = b.x - this.paper._viewBoxShift.dx;\n        c.x *= z;\n        c.y = b.y - this.paper._viewBoxShift.dy;\n        c.y *= z;\n        c.width  = b.width  * z;\n        c.height = b.height * z;\n        c.x2 = c.x + c.width;\n        c.y2 = c.y + c.height;\n        return c;\n      }\n      return b;\n    };\n    elproto._getBBox = function () {\n        if (this.removed) {\n            return {};\n        }\n        return {\n            x: this.X + (this.bbx || 0) - this.W / 2,\n            y: this.Y - this.H,\n            width: this.W,\n            height: this.H\n        };\n    };\n    elproto.remove = function () {\n        if (this.removed || !this.node.parentNode) {\n            return;\n        }\n        this.paper.__set__ && this.paper.__set__.exclude(this);\n        R.eve.unbind(\"raphael.*.*.\" + this.id);\n        R._tear(this, this.paper);\n        this.node.parentNode.removeChild(this.node);\n        this.shape && this.shape.parentNode.removeChild(this.shape);\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n        this.removed = true;\n    };\n    elproto.attr = function (name, value) {\n        if (this.removed) {\n            return this;\n        }\n        if (name == null) {\n            var res = {};\n            for (var a in this.attrs) if (this.attrs[has](a)) {\n                res[a] = this.attrs[a];\n            }\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n            res.transform = this._.transform;\n            return res;\n        }\n        if (value == null && R.is(name, \"string\")) {\n            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\n                return this.attrs.gradient;\n            }\n            var names = name.split(separator),\n                out = {};\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                name = names[i];\n                if (name in this.attrs) {\n                    out[name] = this.attrs[name];\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n                    out[name] = this.paper.customAttributes[name].def;\n                } else {\n                    out[name] = R._availableAttrs[name];\n                }\n            }\n            return ii - 1 ? out : out[names[0]];\n        }\n        if (this.attrs && value == null && R.is(name, \"array\")) {\n            out = {};\n            for (i = 0, ii = name.length; i < ii; i++) {\n                out[name[i]] = this.attr(name[i]);\n            }\n            return out;\n        }\n        var params;\n        if (value != null) {\n            params = {};\n            params[name] = value;\n        }\n        value == null && R.is(name, \"object\") && (params = name);\n        for (var key in params) {\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n        }\n        if (params) {\n            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n                this.attrs[key] = params[key];\n                for (var subkey in par) if (par[has](subkey)) {\n                    params[subkey] = par[subkey];\n                }\n            }\n            // this.paper.canvas.style.display = \"none\";\n            if (params.text && this.type == \"text\") {\n                this.textpath.string = params.text;\n            }\n            setFillAndStroke(this, params);\n            // this.paper.canvas.style.display = E;\n        }\n        return this;\n    };\n    elproto.toFront = function () {\n        !this.removed && this.node.parentNode.appendChild(this.node);\n        this.paper && this.paper.top != this && R._tofront(this, this.paper);\n        return this;\n    };\n    elproto.toBack = function () {\n        if (this.removed) {\n            return this;\n        }\n        if (this.node.parentNode.firstChild != this.node) {\n            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\n            R._toback(this, this.paper);\n        }\n        return this;\n    };\n    elproto.insertAfter = function (element) {\n        if (this.removed) {\n            return this;\n        }\n        if (element.constructor == R.st.constructor) {\n            element = element[element.length - 1];\n        }\n        if (element.node.nextSibling) {\n            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\n        } else {\n            element.node.parentNode.appendChild(this.node);\n        }\n        R._insertafter(this, element, this.paper);\n        return this;\n    };\n    elproto.insertBefore = function (element) {\n        if (this.removed) {\n            return this;\n        }\n        if (element.constructor == R.st.constructor) {\n            element = element[0];\n        }\n        element.node.parentNode.insertBefore(this.node, element.node);\n        R._insertbefore(this, element, this.paper);\n        return this;\n    };\n    elproto.blur = function (size) {\n        var s = this.node.runtimeStyle,\n            f = s.filter;\n        f = f.replace(blurregexp, E);\n        if (+size !== 0) {\n            this.attrs.blur = size;\n            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\n            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\n        } else {\n            s.filter = f;\n            s.margin = 0;\n            delete this.attrs.blur;\n        }\n        return this;\n    };\n\n    R._engine.path = function (pathString, vml) {\n        var el = createNode(\"shape\");\n        el.style.cssText = cssDot;\n        el.coordsize = zoom + S + zoom;\n        el.coordorigin = vml.coordorigin;\n        var p = new Element(el, vml),\n            attr = {fill: \"none\", stroke: \"#000\"};\n        pathString && (attr.path = pathString);\n        p.type = \"path\";\n        p.path = [];\n        p.Path = E;\n        setFillAndStroke(p, attr);\n        vml.canvas && vml.canvas.appendChild(el);\n        var skew = createNode(\"skew\");\n        skew.on = true;\n        el.appendChild(skew);\n        p.skew = skew;\n        p.transform(E);\n        return p;\n    };\n    R._engine.rect = function (vml, x, y, w, h, r) {\n        var path = R._rectPath(x, y, w, h, r),\n            res = vml.path(path),\n            a = res.attrs;\n        res.X = a.x = x;\n        res.Y = a.y = y;\n        res.W = a.width = w;\n        res.H = a.height = h;\n        a.r = r;\n        a.path = path;\n        res.type = \"rect\";\n        return res;\n    };\n    R._engine.ellipse = function (vml, x, y, rx, ry) {\n        var res = vml.path(),\n            a = res.attrs;\n        res.X = x - rx;\n        res.Y = y - ry;\n        res.W = rx * 2;\n        res.H = ry * 2;\n        res.type = \"ellipse\";\n        setFillAndStroke(res, {\n            cx: x,\n            cy: y,\n            rx: rx,\n            ry: ry\n        });\n        return res;\n    };\n    R._engine.circle = function (vml, x, y, r) {\n        var res = vml.path(),\n            a = res.attrs;\n        res.X = x - r;\n        res.Y = y - r;\n        res.W = res.H = r * 2;\n        res.type = \"circle\";\n        setFillAndStroke(res, {\n            cx: x,\n            cy: y,\n            r: r\n        });\n        return res;\n    };\n    R._engine.image = function (vml, src, x, y, w, h) {\n        var path = R._rectPath(x, y, w, h),\n            res = vml.path(path).attr({stroke: \"none\"}),\n            a = res.attrs,\n            node = res.node,\n            fill = node.getElementsByTagName(fillString)[0];\n        a.src = src;\n        res.X = a.x = x;\n        res.Y = a.y = y;\n        res.W = a.width = w;\n        res.H = a.height = h;\n        a.path = path;\n        res.type = \"image\";\n        fill.parentNode == node && node.removeChild(fill);\n        fill.rotate = true;\n        fill.src = src;\n        fill.type = \"tile\";\n        res._.fillpos = [x, y];\n        res._.fillsize = [w, h];\n        node.appendChild(fill);\n        setCoords(res, 1, 1, 0, 0, 0);\n        return res;\n    };\n    R._engine.text = function (vml, x, y, text) {\n        var el = createNode(\"shape\"),\n            path = createNode(\"path\"),\n            o = createNode(\"textpath\");\n        x = x || 0;\n        y = y || 0;\n        text = text || \"\";\n        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\n        path.textpathok = true;\n        o.string = Str(text);\n        o.on = true;\n        el.style.cssText = cssDot;\n        el.coordsize = zoom + S + zoom;\n        el.coordorigin = \"0 0\";\n        var p = new Element(el, vml),\n            attr = {\n                fill: \"#000\",\n                stroke: \"none\",\n                font: R._availableAttrs.font,\n                text: text\n            };\n        p.shape = el;\n        p.path = path;\n        p.textpath = o;\n        p.type = \"text\";\n        p.attrs.text = Str(text);\n        p.attrs.x = x;\n        p.attrs.y = y;\n        p.attrs.w = 1;\n        p.attrs.h = 1;\n        setFillAndStroke(p, attr);\n        el.appendChild(o);\n        el.appendChild(path);\n        vml.canvas.appendChild(el);\n        var skew = createNode(\"skew\");\n        skew.on = true;\n        el.appendChild(skew);\n        p.skew = skew;\n        p.transform(E);\n        return p;\n    };\n    R._engine.setSize = function (width, height) {\n        var cs = this.canvas.style;\n        this.width = width;\n        this.height = height;\n        width == +width && (width += \"px\");\n        height == +height && (height += \"px\");\n        cs.width = width;\n        cs.height = height;\n        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\n        if (this._viewBox) {\n            R._engine.setViewBox.apply(this, this._viewBox);\n        }\n        return this;\n    };\n    R._engine.setViewBox = function (x, y, w, h, fit) {\n        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n        var paperSize = this.getSize(),\n            width = paperSize.width,\n            height = paperSize.height,\n            H, W;\n        if (fit) {\n            H = height / h;\n            W = width / w;\n            if (w * H < width) {\n                x -= (width - w * H) / 2 / H;\n            }\n            if (h * W < height) {\n                y -= (height - h * W) / 2 / W;\n            }\n        }\n        this._viewBox = [x, y, w, h, !!fit];\n        this._viewBoxShift = {\n            dx: -x,\n            dy: -y,\n            scale: paperSize\n        };\n        this.forEach(function (el) {\n            el.transform(\"...\");\n        });\n        return this;\n    };\n    var createNode;\n    R._engine.initWin = function (win) {\n            var doc = win.document;\n            if (doc.styleSheets.length < 31) {\n                doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\n            } else {\n                // no more room, add to the existing one\n                // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n                doc.styleSheets[0].addRule(\".rvml\", \"behavior:url(#default#VML)\");\n            }\n            try {\n                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\n                createNode = function (tagName) {\n                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\n                };\n            } catch (e) {\n                createNode = function (tagName) {\n                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n                };\n            }\n        };\n    R._engine.initWin(R._g.win);\n    R._engine.create = function () {\n        var con = R._getContainer.apply(0, arguments),\n            container = con.container,\n            height = con.height,\n            s,\n            width = con.width,\n            x = con.x,\n            y = con.y;\n        if (!container) {\n            throw new Error(\"VML container not found.\");\n        }\n        var res = new R._Paper,\n            c = res.canvas = R._g.doc.createElement(\"div\"),\n            cs = c.style;\n        x = x || 0;\n        y = y || 0;\n        width = width || 512;\n        height = height || 342;\n        res.width = width;\n        res.height = height;\n        width == +width && (width += \"px\");\n        height == +height && (height += \"px\");\n        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\n        res.coordorigin = \"0 0\";\n        res.span = R._g.doc.createElement(\"span\");\n        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\n        c.appendChild(res.span);\n        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\n        if (container == 1) {\n            R._g.doc.body.appendChild(c);\n            cs.left = x + \"px\";\n            cs.top = y + \"px\";\n            cs.position = \"absolute\";\n        } else {\n            if (container.firstChild) {\n                container.insertBefore(c, container.firstChild);\n            } else {\n                container.appendChild(c);\n            }\n        }\n        res.renderfix = function () {};\n        return res;\n    };\n    R.prototype.clear = function () {\n        R.eve(\"raphael.clear\", this);\n        this.canvas.innerHTML = E;\n        this.span = R._g.doc.createElement(\"span\");\n        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\n        this.canvas.appendChild(this.span);\n        this.bottom = this.top = null;\n    };\n    R.prototype.remove = function () {\n        R.eve(\"raphael.remove\", this);\n        this.canvas.parentNode.removeChild(this.canvas);\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n        return true;\n    };\n\n    var setproto = R.st;\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n        setproto[method] = (function (methodname) {\n            return function () {\n                var arg = arguments;\n                return this.forEach(function (el) {\n                    el[methodname].apply(el, arg);\n                });\n            };\n        })(method);\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ \"./node_modules/eve-raphael/eve.js\":\n/*!*****************************************!*\\\n  !*** ./node_modules/eve-raphael/eve.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.0\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        };\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        var eve = function (name, scope) {\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    ( true && module.exports) ? (module.exports = eve) : ( true ? (!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() { return eve; }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))) : (undefined));\n})(this);\n\n\n/***/ })\n\n/******/ });\n});\n\n/***/ }),\n\n/***/ 561:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(jQuery) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return function(t){function i(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,i),r.l=!0,r.exports}var e={};return i.m=t,i.c=e,i.i=function(t){return t},i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:o})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p=\"/dist/\",i(i.s=13)}([function(t,i,e){\"use strict\";var o={toObject:function(t){return\"string\"==typeof t?JSON.parse(t):t},toBoolean:function(t){return\"string\"==typeof t?\"true\"===t:t},toInt:function(t){return\"string\"==typeof t?parseInt(t):t}};t.exports=o},function(t,i,e){\"use strict\";Object.defineProperty(i,\"__esModule\",{value:!0});var o=e(0),r=function(t){return t&&t.__esModule?t:{default:t}}(o),n={id:{type:String,required:!0},data:{type:[String,Array],required:!0},barColors:{type:[String,Array,Function],required:!1},xkey:{type:String,required:!1,default:\"key\"},ykeys:{type:[String,Array],required:!1,default:function(){return[\"value\"]}},labels:{type:[String,Array],required:!1,default:function(){return[\"Value\"]}},hoverCallback:{type:Function,required:!1},axes:{type:[Boolean,String],required:!1,default:!0},hideHover:{type:String,required:!1},stacked:{type:[Boolean,String],required:!1},resize:{type:[Boolean,String],required:!1},horizontal:{type:[Boolean,String],required:!1,default:!1},grid:{type:[Boolean,String],required:!1,default:!0},gridTextColor:{type:String,required:!1,default:\"#888\"},gridTextSize:{type:[Number,String],required:!1,default:12},gridTextFamily:{type:String,required:!1,default:\"sans-serif\"},gridTextWeight:{type:String,required:!1,default:\"normal\"},colors:{type:[String,Array],required:!1},formatter:{type:Function,required:!1},lineColors:{type:[String,Array,Function],required:!1},xLabels:{type:String,required:!1},lineWidth:{type:[Number,String],required:!1},pointSize:{type:[Number,String],required:!1},pointFillColors:{type:[String,Array],required:!1},pointStrokeColors:{type:[String,Array],required:!1},ymax:{type:String,required:!1},ymin:{type:String,required:!1},smooth:{type:[Boolean,String],required:!1,default:!0},parseTime:{type:[Boolean,String],required:!1,default:!0},postUnits:{type:String,required:!1},preUnits:{type:String,required:!1},dateFormat:{type:Function,required:!1},xLabelFormat:{type:Function,required:!1},yLabelFormat:{type:Function,required:!1},xLabelAngle:{type:String,required:!1},goals:{type:[String,Array],required:!1},goalStrokeWidth:{type:[Number,String],required:!1},goalLineColors:{type:[String,Array],required:!1},events:{type:[String,Array],required:!1},eventStrokeWidth:{type:String,required:!1},eventLineColors:{type:[String,Array],required:!1},fillOpacity:{type:String,required:!1},behaveLikeLine:{type:[Boolean,String],required:!1,default:!1}},s={id:n.id,data:n.data,barColors:n.barColors,xkey:n.xkey,ykeys:n.ykeys,labels:n.labels,xLabelFormat:n.xLabelFormat,yLabelFormat:n.yLabelFormat,xLabelAngle:n.xLabelAngle,hoverCallback:n.hoverCallback,grid:n.grid,horizontal:n.horizontal,axes:n.axes,hideHover:n.hideHover,stacked:n.stacked,resize:n.resize,ymax:n.ymax,ymin:n.ymin,gridTextColor:n.gridTextColor,gridTextSize:n.gridTextSize,gridTextFamily:n.gridTextFamily,gridTextWeight:n.gridTextWeight},a={id:n.id,data:n.data,colors:n.colors,formatter:n.formatter,resize:n.resize},h={id:n.id,data:n.data,resize:n.resize,lineColors:n.lineColors,xkey:n.xkey,ykeys:n.ykeys,labels:n.labels,xLabels:n.xLabels,grid:n.grid,gridTextColor:n.gridTextColor,gridTextSize:n.gridTextSize,gridTextFamily:n.gridTextFamily,gridTextWeight:n.gridTextWeight,lineWidth:n.lineWidth,pointSize:n.pointSize,pointFillColors:n.pointFillColors,pointStrokeColors:n.pointStrokeColors,ymax:n.ymax,ymin:n.ymin,smooth:n.smooth,hideHover:n.hideHover,parseTime:n.parseTime,postUnits:n.postUnits,preUnits:n.preUnits,dateFormat:n.dateFormat,xLabelFormat:n.xLabelFormat,yLabelFormat:n.yLabelFormat,xLabelAngle:n.xLabelAngle,goals:n.goals,goalStrokeWidth:n.goalStrokeWidth,goalLineColors:n.goalLineColors,events:n.events,eventStrokeWidth:n.eventStrokeWidth,eventLineColors:n.eventLineColors,fillOpacity:n.fillOpacity,hoverCallback:n.hoverCallback},l={behaveLikeLine:n.behaveLikeLine};for(var p in h)h.hasOwnProperty(p)&&(l[p]=h[p]);var u={addOption:function(t,i){this[t]&&(i[t]=this[t])},addOptionAsObject:function(t,i){this[t]&&(i[t]=r.default.toObject(this[t]))}};i.default={bar:{props:s,methods:u},donut:{props:a,methods:u},line:{props:h,methods:u},area:{props:l,methods:u}}},function(t,i){/* @license\nmorris.js v0.5.1\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n(function(){var t,i,e,o,r=[].slice,n=function(t,i){return function(){return t.apply(i,arguments)}},s={}.hasOwnProperty,a=function(t,i){function e(){this.constructor=t}for(var o in i)s.call(i,o)&&(t[o]=i[o]);return e.prototype=i.prototype,t.prototype=new e,t.__super__=i.prototype,t},h=[].indexOf||function(t){for(var i=0,e=this.length;i<e;i++)if(i in this&&this[i]===t)return i;return-1};i=window.Morris={},t=jQuery,i.EventEmitter=function(){function t(){}return t.prototype.on=function(t,i){return null==this.handlers&&(this.handlers={}),null==this.handlers[t]&&(this.handlers[t]=[]),this.handlers[t].push(i),this},t.prototype.fire=function(){var t,i,e,o,n,s,a;if(e=arguments[0],t=2<=arguments.length?r.call(arguments,1):[],null!=this.handlers&&null!=this.handlers[e]){for(s=this.handlers[e],a=[],o=0,n=s.length;o<n;o++)i=s[o],a.push(i.apply(null,t));return a}},t}(),i.commas=function(t){var i,e,o,r;return null!=t?(o=t<0?\"-\":\"\",i=Math.abs(t),e=Math.floor(i).toFixed(0),o+=e.replace(/(?=(?:\\d{3})+$)(?!^)/g,\",\"),r=i.toString(),r.length>e.length&&(o+=r.slice(e.length)),o):\"-\"},i.pad2=function(t){return(t<10?\"0\":\"\")+t},i.Grid=function(e){function o(i){this.hasToShow=n(this.hasToShow,this),this.resizeHandler=n(this.resizeHandler,this);var e=this;if(\"string\"==typeof i.element?this.el=t(document.getElementById(i.element)):this.el=t(i.element),null==this.el||0===this.el.length)throw new Error(\"Graph container element not found\");\"static\"===this.el.css(\"position\")&&this.el.css(\"position\",\"relative\"),this.options=t.extend({},this.gridDefaults,this.defaults||{},i),\"string\"==typeof this.options.units&&(this.options.postUnits=i.units),this.raphael=new Raphael(this.el[0]),this.elementWidth=null,this.elementHeight=null,this.dirty=!1,this.selectFrom=null,this.init&&this.init(),this.setData(this.options.data),this.el.bind(\"mousemove\",function(t){var i,o,r,n,s;return o=e.el.offset(),s=t.pageX-o.left,e.selectFrom?(i=e.data[e.hitTest(Math.min(s,e.selectFrom))]._x,r=e.data[e.hitTest(Math.max(s,e.selectFrom))]._x,n=r-i,e.selectionRect.attr({x:i,width:n})):e.fire(\"hovermove\",s,t.pageY-o.top)}),this.el.bind(\"mouseleave\",function(t){return e.selectFrom&&(e.selectionRect.hide(),e.selectFrom=null),e.fire(\"hoverout\")}),this.el.bind(\"touchstart touchmove touchend\",function(t){var i,o;return o=t.originalEvent.touches[0]||t.originalEvent.changedTouches[0],i=e.el.offset(),e.fire(\"hovermove\",o.pageX-i.left,o.pageY-i.top)}),this.el.bind(\"click\",function(t){var i;return i=e.el.offset(),e.fire(\"gridclick\",t.pageX-i.left,t.pageY-i.top)}),this.options.rangeSelect&&(this.selectionRect=this.raphael.rect(0,0,0,this.el.innerHeight()).attr({fill:this.options.rangeSelectColor,stroke:!1}).toBack().hide(),this.el.bind(\"mousedown\",function(t){var i;return i=e.el.offset(),e.startRange(t.pageX-i.left)}),this.el.bind(\"mouseup\",function(t){var i;return i=e.el.offset(),e.endRange(t.pageX-i.left),e.fire(\"hovermove\",t.pageX-i.left,t.pageY-i.top)})),this.options.resize&&t(window).bind(\"resize\",function(t){return null!=e.timeoutId&&window.clearTimeout(e.timeoutId),e.timeoutId=window.setTimeout(e.resizeHandler,100)}),this.el.css(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\"),this.postInit&&this.postInit()}return a(o,e),o.prototype.gridDefaults={dateFormat:null,axes:!0,grid:!0,gridLineColor:\"#aaa\",gridStrokeWidth:.5,gridTextColor:\"#888\",gridTextSize:12,gridTextFamily:\"sans-serif\",gridTextWeight:\"normal\",hideHover:!1,yLabelFormat:null,xLabelAngle:0,numLines:5,padding:25,parseTime:!0,postUnits:\"\",preUnits:\"\",ymax:\"auto\",ymin:\"auto 0\",goals:[],goalStrokeWidth:1,goalLineColors:[\"#666633\",\"#999966\",\"#cc6666\",\"#663333\"],events:[],eventStrokeWidth:1,eventLineColors:[\"#005a04\",\"#ccffbb\",\"#3a5f0b\",\"#005502\"],rangeSelect:null,rangeSelectColor:\"#eef\",resize:!1},o.prototype.setData=function(e,o){var r,n,s,a,h,l,p,u,d,c,f,y,g,m,x,v,b,S,w,L,k;if(null==o&&(o=!0),this.options.data=e,null==e||0===e.length)return this.data=[],this.raphael.clear(),void(null!=this.hover&&this.hover.hide());if(x=this.cumulative?0:null,v=this.cumulative?0:null,this.options.goals.length>0&&(p=Math.min.apply(Math,this.options.goals),l=Math.max.apply(Math,this.options.goals),v=null!=v?Math.min(v,p):p,x=null!=x?Math.max(x,l):l),this.data=function(){var t,o,r;for(r=[],h=t=0,o=e.length;t<o;h=++t)d=e[h],u={src:d},u.label=d[this.options.xkey],this.options.parseTime?(u.x=i.parseDate(u.label),this.options.dateFormat?u.label=this.options.dateFormat(u.x):\"number\"==typeof u.label&&(u.label=new Date(u.label).toString())):(u.x=h,this.options.xLabelFormat&&(u.label=this.options.xLabelFormat(u))),y=0,u.y=function(){var t,i,e,o;for(e=this.options.ykeys,o=[],a=t=0,i=e.length;t<i;a=++t)m=e[a],b=d[m],\"string\"==typeof b&&(b=parseFloat(b)),null!=b&&\"number\"!=typeof b&&(b=null),null!=b&&this.hasToShow(a)&&(this.cumulative?y+=b:null!=x?(x=Math.max(b,x),v=Math.min(b,v)):x=v=b),this.cumulative&&null!=y&&(x=Math.max(y,x),v=Math.min(y,v)),o.push(b);return o}.call(this),r.push(u);return r}.call(this),this.options.parseTime&&(this.data=this.data.sort(function(t,i){return(t.x>i.x)-(i.x>t.x)})),this.xmin=this.data[0].x,this.xmax=this.data[this.data.length-1].x,this.events=[],this.options.events.length>0){if(this.options.parseTime)for(L=this.options.events,S=0,w=L.length;S<w;S++)r=L[S],r instanceof Array?(s=r[0],f=r[1],this.events.push([i.parseDate(s),i.parseDate(f)])):this.events.push(i.parseDate(r));else this.events=this.options.events;n=t.map(this.events,function(t){return t}),this.xmax=Math.max(this.xmax,Math.max.apply(Math,n)),this.xmin=Math.min(this.xmin,Math.min.apply(Math,n))}return this.xmin===this.xmax&&(this.xmin-=1,this.xmax+=1),this.ymin=this.yboundary(\"min\",v),this.ymax=this.yboundary(\"max\",x),this.ymin===this.ymax&&(v&&(this.ymin-=1),this.ymax+=1),!0!==(k=this.options.axes)&&\"both\"!==k&&\"y\"!==k&&!0!==this.options.grid||(this.options.ymax===this.gridDefaults.ymax&&this.options.ymin===this.gridDefaults.ymin?(this.grid=this.autoGridLines(this.ymin,this.ymax,this.options.numLines),this.ymin=Math.min(this.ymin,this.grid[0]),this.ymax=Math.max(this.ymax,this.grid[this.grid.length-1])):(c=(this.ymax-this.ymin)/(this.options.numLines-1),this.grid=function(){var t,i,e;for(e=[],g=t=this.ymin,i=this.ymax;c>0?t<=i:t>=i;g=t+=c)e.push(g);return e}.call(this))),this.dirty=!0,o?this.redraw():void 0},o.prototype.yboundary=function(t,i){var e,o;return e=this.options[\"y\"+t],\"string\"==typeof e?\"auto\"===e.slice(0,4)?e.length>5?(o=parseInt(e.slice(5),10),null==i?o:Math[t](i,o)):null!=i?i:0:parseInt(e,10):e},o.prototype.autoGridLines=function(t,i,e){var o,r,n,s,a,h,l,p,u;return a=i-t,u=Math.floor(Math.log(a)/Math.log(10)),l=Math.pow(10,u),r=Math.floor(t/l)*l,o=Math.ceil(i/l)*l,h=(o-r)/(e-1),1===l&&h>1&&Math.ceil(h)!==h&&(h=Math.ceil(h),o=r+h*(e-1)),r<0&&o>0&&(r=Math.floor(t/h)*h,o=Math.ceil(i/h)*h),h<1?(s=Math.floor(Math.log(h)/Math.log(10)),n=function(){var t,i;for(i=[],p=t=r;h>0?t<=o:t>=o;p=t+=h)i.push(parseFloat(p.toFixed(1-s)));return i}()):n=function(){var t,i;for(i=[],p=t=r;h>0?t<=o:t>=o;p=t+=h)i.push(p);return i}(),n},o.prototype._calc=function(){var t,i,e,o,r,n,s,a,h;if(n=this.el.width(),o=this.el.height(),(this.elementWidth!==n||this.elementHeight!==o||this.dirty)&&(this.elementWidth=n,this.elementHeight=o,this.dirty=!1,this.left=this.options.padding,this.right=this.elementWidth-this.options.padding,this.top=this.options.padding,this.bottom=this.elementHeight-this.options.padding,!0!==(a=this.options.axes)&&\"both\"!==a&&\"y\"!==a||(s=function(){var t,i,o,r;for(o=this.grid,r=[],t=0,i=o.length;t<i;t++)e=o[t],r.push(this.measureText(this.yAxisFormat(e)).width);return r}.call(this),this.options.horizontal?this.bottom-=Math.max.apply(Math,s):this.left+=Math.max.apply(Math,s)),!0!==(h=this.options.axes)&&\"both\"!==h&&\"x\"!==h||(t=this.options.horizontal?-90:-this.options.xLabelAngle,i=function(){var i,e,o;for(o=[],r=i=0,e=this.data.length;0<=e?i<e:i>e;r=0<=e?++i:--i)o.push(this.measureText(this.data[r].label,t).height);return o}.call(this),this.options.horizontal?this.left+=Math.max.apply(Math,i):this.bottom-=Math.max.apply(Math,i)),this.width=Math.max(1,this.right-this.left),this.height=Math.max(1,this.bottom-this.top),this.options.horizontal?(this.dx=this.height/(this.xmax-this.xmin),this.dy=this.width/(this.ymax-this.ymin),this.yStart=this.left,this.yEnd=this.right,this.xStart=this.top,this.xEnd=this.bottom,this.xSize=this.height,this.ySize=this.width):(this.dx=this.width/(this.xmax-this.xmin),this.dy=this.height/(this.ymax-this.ymin),this.yStart=this.bottom,this.yEnd=this.top,this.xStart=this.left,this.xEnd=this.right,this.xSize=this.width,this.ySize=this.height),this.calc))return this.calc()},o.prototype.transY=function(t){return this.options.horizontal?this.left+(t-this.ymin)*this.dy:this.bottom-(t-this.ymin)*this.dy},o.prototype.transX=function(t){return 1===this.data.length?(this.xStart+this.xEnd)/2:this.xStart+(t-this.xmin)*this.dx},o.prototype.redraw=function(){if(this.raphael.clear(),this._calc(),this.drawGrid(),this.drawGoals(),this.drawEvents(),this.draw)return this.draw()},o.prototype.measureText=function(t,i){var e,o;return null==i&&(i=0),o=this.raphael.text(100,100,t).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).rotate(i),e=o.getBBox(),o.remove(),e},o.prototype.yAxisFormat=function(t){return this.yLabelFormat(t,0)},o.prototype.yLabelFormat=function(t,e){return\"function\"==typeof this.options.yLabelFormat?this.options.yLabelFormat(t,e):\"\"+this.options.preUnits+i.commas(t)+this.options.postUnits},o.prototype.getYAxisLabelX=function(){return this.left-this.options.padding/2},o.prototype.drawGrid=function(){var t,i,e,o,r,n,s,a,h;if(!1!==this.options.grid||!0===(n=this.options.axes)||\"both\"===n||\"y\"===n){for(t=this.options.horizontal?this.getXAxisLabelY():this.getYAxisLabelX(),s=this.grid,h=[],o=0,r=s.length;o<r;o++)i=s[o],e=this.transY(i),!0!==(a=this.options.axes)&&\"both\"!==a&&\"y\"!==a||(this.options.horizontal?this.drawXAxisLabel(e,t,this.yAxisFormat(i)):this.drawYAxisLabel(t,e,this.yAxisFormat(i))),this.options.grid?(e=Math.floor(e)+.5,this.options.horizontal?h.push(this.drawGridLine(\"M\"+e+\",\"+this.xStart+\"V\"+this.xEnd)):h.push(this.drawGridLine(\"M\"+this.xStart+\",\"+e+\"H\"+this.xEnd))):h.push(void 0);return h}},o.prototype.drawGoals=function(){var t,i,e,o,r,n,s;for(n=this.options.goals,s=[],e=o=0,r=n.length;o<r;e=++o)i=n[e],t=this.options.goalLineColors[e%this.options.goalLineColors.length],s.push(this.drawGoal(i,t));return s},o.prototype.drawEvents=function(){var t,i,e,o,r,n,s;for(n=this.events,s=[],e=o=0,r=n.length;o<r;e=++o)i=n[e],t=this.options.eventLineColors[e%this.options.eventLineColors.length],s.push(this.drawEvent(i,t));return s},o.prototype.drawGoal=function(t,i){var e,o;return o=Math.floor(this.transY(t))+.5,e=this.options.horizontal?\"M\"+o+\",\"+this.xStart+\"V\"+this.xEnd:\"M\"+this.xStart+\",\"+o+\"H\"+this.xEnd,this.raphael.path(e).attr(\"stroke\",i).attr(\"stroke-width\",this.options.goalStrokeWidth)},o.prototype.drawEvent=function(t,i){var e,o,r,n;return t instanceof Array?(e=t[0],r=t[1],e=Math.floor(this.transX(e))+.5,r=Math.floor(this.transX(r))+.5,this.options.horizontal?this.raphael.rect(this.yStart,e,this.yEnd-this.yStart,r-e).attr({fill:i,stroke:!1}).toBack():this.raphael.rect(e,this.yEnd,r-e,this.yStart-this.yEnd).attr({fill:i,stroke:!1}).toBack()):(n=Math.floor(this.transX(t))+.5,o=this.options.horizontal?\"M\"+this.yStart+\",\"+n+\"H\"+this.yEnd:\"M\"+n+\",\"+this.yStart+\"V\"+this.yEnd,this.raphael.path(o).attr(\"stroke\",i).attr(\"stroke-width\",this.options.eventStrokeWidth))},o.prototype.drawYAxisLabel=function(t,i,e){return this.raphael.text(t,i,e).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor).attr(\"text-anchor\",\"end\")},o.prototype.drawGridLine=function(t){return this.raphael.path(t).attr(\"stroke\",this.options.gridLineColor).attr(\"stroke-width\",this.options.gridStrokeWidth)},o.prototype.startRange=function(t){return this.hover.hide(),this.selectFrom=t,this.selectionRect.attr({x:t,width:0}).show()},o.prototype.endRange=function(t){var i,e;if(this.selectFrom)return e=Math.min(this.selectFrom,t),i=Math.max(this.selectFrom,t),this.options.rangeSelect.call(this.el,{start:this.data[this.hitTest(e)].x,end:this.data[this.hitTest(i)].x}),this.selectFrom=null},o.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},o.prototype.hasToShow=function(t){return!0===this.options.shown||!0===this.options.shown[t]},o}(i.EventEmitter),i.parseDate=function(t){var i,e,o,r,n,s,a,h,l,p,u;return\"number\"==typeof t?t:(e=t.match(/^(\\d+) Q(\\d)$/),r=t.match(/^(\\d+)-(\\d+)$/),n=t.match(/^(\\d+)-(\\d+)-(\\d+)$/),a=t.match(/^(\\d+) W(\\d+)$/),h=t.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),l=t.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),e?new Date(parseInt(e[1],10),3*parseInt(e[2],10)-1,1).getTime():r?new Date(parseInt(r[1],10),parseInt(r[2],10)-1,1).getTime():n?new Date(parseInt(n[1],10),parseInt(n[2],10)-1,parseInt(n[3],10)).getTime():a?(p=new Date(parseInt(a[1],10),0,1),4!==p.getDay()&&p.setMonth(0,1+(4-p.getDay()+7)%7),p.getTime()+6048e5*parseInt(a[2],10)):h?h[6]?(s=0,\"Z\"!==h[6]&&(s=60*parseInt(h[8],10)+parseInt(h[9],10),\"+\"===h[7]&&(s=0-s)),Date.UTC(parseInt(h[1],10),parseInt(h[2],10)-1,parseInt(h[3],10),parseInt(h[4],10),parseInt(h[5],10)+s)):new Date(parseInt(h[1],10),parseInt(h[2],10)-1,parseInt(h[3],10),parseInt(h[4],10),parseInt(h[5],10)).getTime():l?(u=parseFloat(l[6]),i=Math.floor(u),o=Math.round(1e3*(u-i)),l[8]?(s=0,\"Z\"!==l[8]&&(s=60*parseInt(l[10],10)+parseInt(l[11],10),\"+\"===l[9]&&(s=0-s)),Date.UTC(parseInt(l[1],10),parseInt(l[2],10)-1,parseInt(l[3],10),parseInt(l[4],10),parseInt(l[5],10)+s,i,o)):new Date(parseInt(l[1],10),parseInt(l[2],10)-1,parseInt(l[3],10),parseInt(l[4],10),parseInt(l[5],10),i,o).getTime()):new Date(parseInt(t,10),0,1).getTime())},i.Hover=function(){function e(e){null==e&&(e={}),this.options=t.extend({},i.Hover.defaults,e),this.el=t(\"<div class='\"+this.options.class+\"'></div>\"),this.el.hide(),this.options.parent.append(this.el)}return e.defaults={class:\"morris-hover morris-default-style\"},e.prototype.update=function(t,i,e,o){return t?(this.html(t),this.show(),this.moveTo(i,e,o)):this.hide()},e.prototype.html=function(t){return this.el.html(t)},e.prototype.moveTo=function(t,i,e){var o,r,n,s,a,h;return a=this.options.parent.innerWidth(),s=this.options.parent.innerHeight(),r=this.el.outerWidth(),o=this.el.outerHeight(),n=Math.min(Math.max(0,t-r/2),a-r),null!=i?!0===e?(h=i-o/2)<0&&(h=0):(h=i-o-10)<0&&(h=i+10)+o>s&&(h=s/2-o/2):h=s/2-o/2,this.el.css({left:n+\"px\",top:parseInt(h)+\"px\"})},e.prototype.show=function(){return this.el.show()},e.prototype.hide=function(){return this.el.hide()},e}(),i.Line=function(e){function o(t){if(this.hilight=n(this.hilight,this),this.onHoverOut=n(this.onHoverOut,this),this.onHoverMove=n(this.onHoverMove,this),this.onGridClick=n(this.onGridClick,this),!(this instanceof i.Line))return new i.Line(t);o.__super__.constructor.call(this,t)}return a(o,e),o.prototype.init=function(){if(\"always\"!==this.options.hideHover)return this.hover=new i.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)},o.prototype.defaults={lineWidth:3,pointSize:4,lineColors:[\"#0b62a4\",\"#7A92A3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],pointStrokeWidths:[1],pointStrokeColors:[\"#ffffff\"],pointFillColors:[],smooth:!0,shown:!0,xLabels:\"auto\",xLabelFormat:null,xLabelMargin:24,hideHover:!1,trendLine:!1,trendLineWidth:2,trendLineColors:[\"#689bc3\",\"#a2b3bf\",\"#64b764\"]},o.prototype.calc=function(){return this.calcPoints(),this.generatePaths()},o.prototype.calcPoints=function(){var t,i,e,o,r,n;for(r=this.data,n=[],e=0,o=r.length;e<o;e++)t=r[e],t._x=this.transX(t.x),t._y=function(){var e,o,r,n;for(r=t.y,n=[],e=0,o=r.length;e<o;e++)i=r[e],null!=i?n.push(this.transY(i)):n.push(i);return n}.call(this),n.push(t._ymax=Math.min.apply(Math,[this.bottom].concat(function(){var e,o,r,n;for(r=t._y,n=[],e=0,o=r.length;e<o;e++)null!=(i=r[e])&&n.push(i);return n}())));return n},o.prototype.hitTest=function(t){var i,e,o,r,n;if(0===this.data.length)return null;for(n=this.data.slice(1),i=o=0,r=n.length;o<r&&(e=n[i],!(t<(e._x+this.data[i]._x)/2));i=++o);return i},o.prototype.onGridClick=function(t,i){var e;return e=this.hitTest(t),this.fire(\"click\",e,this.data[e].src,t,i)},o.prototype.onHoverMove=function(t,i){var e;return e=this.hitTest(t),this.displayHoverForRow(e)},o.prototype.onHoverOut=function(){if(!1!==this.options.hideHover)return this.displayHoverForRow(null)},o.prototype.displayHoverForRow=function(t){var i;return null!=t?((i=this.hover).update.apply(i,this.hoverContentForRow(t)),this.hilight(t)):(this.hover.hide(),this.hilight())},o.prototype.hoverContentForRow=function(i){var e,o,r,n,s,a,h;for(r=this.data[i],e=t(\"<div class='morris-hover-row-label'>\").text(r.label),e=e.prop(\"outerHTML\"),h=r.y,o=s=0,a=h.length;s<a;o=++s)n=h[o],!1!==this.options.labels[o]&&(e+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(r,o,\"label\")+\"'>\\n  \"+this.options.labels[o]+\":\\n  \"+this.yLabelFormat(n,o)+\"\\n</div>\");return\"function\"==typeof this.options.hoverCallback&&(e=this.options.hoverCallback(i,this.options,e,r.src)),[e,r._x,r._ymax]},o.prototype.generatePaths=function(){var t,e,o,r;return this.paths=function(){var n,s,a,l;for(l=[],e=n=0,s=this.options.ykeys.length;0<=s?n<s:n>s;e=0<=s?++n:--n)r=\"boolean\"==typeof this.options.smooth?this.options.smooth:(a=this.options.ykeys[e],h.call(this.options.smooth,a)>=0),t=function(){var t,i,r,n;for(r=this.data,n=[],t=0,i=r.length;t<i;t++)o=r[t],void 0!==o._y[e]&&n.push({x:o._x,y:o._y[e]});return n}.call(this),t.length>1?l.push(i.Line.createPath(t,r,this.bottom)):l.push(null);return l}.call(this)},o.prototype.draw=function(){var t;if(!0!==(t=this.options.axes)&&\"both\"!==t&&\"x\"!==t||this.drawXAxis(),this.drawSeries(),!1===this.options.hideHover)return this.displayHoverForRow(this.data.length-1)},o.prototype.drawXAxis=function(){var t,e,o,r,n,s,a,h,l,p,u=this;for(a=this.bottom+this.options.padding/2,n=null,r=null,t=function(t,i){var e,o,s,h,l;return e=u.drawXAxisLabel(u.transX(i),a,t),l=e.getBBox(),e.transform(\"r\"+-u.options.xLabelAngle),o=e.getBBox(),e.transform(\"t0,\"+o.height/2+\"...\"),0!==u.options.xLabelAngle&&(h=-.5*l.width*Math.cos(u.options.xLabelAngle*Math.PI/180),e.transform(\"t\"+h+\",0...\")),o=e.getBBox(),(null==n||n>=o.x+o.width||null!=r&&r>=o.x)&&o.x>=0&&o.x+o.width<u.el.width()?(0!==u.options.xLabelAngle&&(s=1.25*u.options.gridTextSize/Math.sin(u.options.xLabelAngle*Math.PI/180),r=o.x-s),n=o.x-u.options.xLabelMargin):e.remove()},o=this.options.parseTime?1===this.data.length&&\"auto\"===this.options.xLabels?[[this.data[0].label,this.data[0].x]]:i.labelSeries(this.xmin,this.xmax,this.width,this.options.xLabels,this.options.xLabelFormat):function(){var t,i,e,o;for(e=this.data,o=[],t=0,i=e.length;t<i;t++)s=e[t],o.push([s.label,s.x]);return o}.call(this),o.reverse(),p=[],h=0,l=o.length;h<l;h++)e=o[h],p.push(t(e[0],e[1]));return p},o.prototype.drawSeries=function(){var t,i,e,o,r,n;for(this.seriesPoints=[],t=i=o=this.options.ykeys.length-1;o<=0?i<=0:i>=0;t=o<=0?++i:--i)this.hasToShow(t)&&((!1!==this.options.trendLine&&!0===this.options.trendLine||!0===this.options.trendLine[t])&&this._drawTrendLine(t),this._drawLineFor(t));for(n=[],t=e=r=this.options.ykeys.length-1;r<=0?e<=0:e>=0;t=r<=0?++e:--e)this.hasToShow(t)?n.push(this._drawPointFor(t)):n.push(void 0);return n},o.prototype._drawPointFor=function(t){var i,e,o,r,n,s;for(this.seriesPoints[t]=[],n=this.data,s=[],o=0,r=n.length;o<r;o++)e=n[o],i=null,null!=e._y[t]&&(i=this.drawLinePoint(e._x,e._y[t],this.colorFor(e,t,\"point\"),t)),s.push(this.seriesPoints[t].push(i));return s},o.prototype._drawLineFor=function(t){var i;if(null!==(i=this.paths[t]))return this.drawLinePath(i,this.colorFor(null,t,\"line\"),t)},o.prototype._drawTrendLine=function(t){var e,o,r,n,s,a,h,l,p,u,d,c,f,y,g;for(a=0,p=0,h=0,l=0,n=0,g=this.data,f=0,y=g.length;f<y;f++)u=g[f],d=u.x,void 0!==(c=u.y[t])&&(n+=1,a+=d,p+=c,h+=d*d,l+=d*c);return e=(n*l-a*p)/(n*h-a*a),o=p/n-e*a/n,r=[{},{}],r[0].x=this.transX(this.data[0].x),r[0].y=this.transY(this.data[0].x*e+o),r[1].x=this.transX(this.data[this.data.length-1].x),r[1].y=this.transY(this.data[this.data.length-1].x*e+o),s=i.Line.createPath(r,!1,this.bottom),s=this.raphael.path(s).attr(\"stroke\",this.colorFor(null,t,\"trendLine\")).attr(\"stroke-width\",this.options.trendLineWidth)},o.createPath=function(t,e,o){var r,n,s,a,h,l,p,u,d,c,f,y,g,m;for(p=\"\",e&&(s=i.Line.gradients(t)),u={y:null},a=g=0,m=t.length;g<m;a=++g)r=t[a],null!=r.y&&(null!=u.y?e?(n=s[a],l=s[a-1],h=(r.x-u.x)/4,d=u.x+h,f=Math.min(o,u.y+h*l),c=r.x-h,y=Math.min(o,r.y-h*n),p+=\"C\"+d+\",\"+f+\",\"+c+\",\"+y+\",\"+r.x+\",\"+r.y):p+=\"L\"+r.x+\",\"+r.y:e&&null==s[a]||(p+=\"M\"+r.x+\",\"+r.y)),u=r;return p},o.gradients=function(t){var i,e,o,r,n,s,a,h;for(e=function(t,i){return(t.y-i.y)/(t.x-i.x)},h=[],o=s=0,a=t.length;s<a;o=++s)i=t[o],null!=i.y?(r=t[o+1]||{y:null},n=t[o-1]||{y:null},null!=n.y&&null!=r.y?h.push(e(n,r)):null!=n.y?h.push(e(n,i)):null!=r.y?h.push(e(i,r)):h.push(null)):h.push(null);return h},o.prototype.hilight=function(t){var i,e,o,r,n;if(null!==this.prevHilight&&this.prevHilight!==t)for(i=e=0,r=this.seriesPoints.length-1;0<=r?e<=r:e>=r;i=0<=r?++e:--e)this.seriesPoints[i][this.prevHilight]&&this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));if(null!==t&&this.prevHilight!==t)for(i=o=0,n=this.seriesPoints.length-1;0<=n?o<=n:o>=n;i=0<=n?++o:--o)this.seriesPoints[i][t]&&this.seriesPoints[i][t].animate(this.pointGrowSeries(i));return this.prevHilight=t},o.prototype.colorFor=function(t,i,e){return\"function\"==typeof this.options.lineColors?this.options.lineColors.call(this,t,i,e):\"point\"===e?this.options.pointFillColors[i%this.options.pointFillColors.length]||this.options.lineColors[i%this.options.lineColors.length]:\"line\"===e?this.options.lineColors[i%this.options.lineColors.length]:this.options.trendLineColors[i%this.options.trendLineColors.length]},o.prototype.drawXAxisLabel=function(t,i,e){return this.raphael.text(t,i,e).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},o.prototype.drawLinePath=function(t,i,e){return this.raphael.path(t).attr(\"stroke\",i).attr(\"stroke-width\",this.lineWidthForSeries(e))},o.prototype.drawLinePoint=function(t,i,e,o){return this.raphael.circle(t,i,this.pointSizeForSeries(o)).attr(\"fill\",e).attr(\"stroke-width\",this.pointStrokeWidthForSeries(o)).attr(\"stroke\",this.pointStrokeColorForSeries(o))},o.prototype.pointStrokeWidthForSeries=function(t){return this.options.pointStrokeWidths[t%this.options.pointStrokeWidths.length]},o.prototype.pointStrokeColorForSeries=function(t){return this.options.pointStrokeColors[t%this.options.pointStrokeColors.length]},o.prototype.lineWidthForSeries=function(t){return this.options.lineWidth instanceof Array?this.options.lineWidth[t%this.options.lineWidth.length]:this.options.lineWidth},o.prototype.pointSizeForSeries=function(t){return this.options.pointSize instanceof Array?this.options.pointSize[t%this.options.pointSize.length]:this.options.pointSize},o.prototype.pointGrowSeries=function(t){if(0!==this.pointSizeForSeries(t))return Raphael.animation({r:this.pointSizeForSeries(t)+3},25,\"linear\")},o.prototype.pointShrinkSeries=function(t){return Raphael.animation({r:this.pointSizeForSeries(t)},25,\"linear\")},o}(i.Grid),i.labelSeries=function(e,o,r,n,s){var a,h,l,p,u,d,c,f,y,g,m;if(l=200*(o-e)/r,h=new Date(e),void 0===(c=i.LABEL_SPECS[n]))for(m=i.AUTO_LABEL_ORDER,y=0,g=m.length;y<g;y++)if(p=m[y],d=i.LABEL_SPECS[p],l>=d.span){c=d;break}for(void 0===c&&(c=i.LABEL_SPECS.second),s&&(c=t.extend({},c,{fmt:s})),a=c.start(h),u=[];(f=a.getTime())<=o;)f>=e&&u.push([c.fmt(a),f]),c.incr(a);return u},e=function(t){return{span:60*t*1e3,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours())},fmt:function(t){return i.pad2(t.getHours())+\":\"+i.pad2(t.getMinutes())},incr:function(i){return i.setUTCMinutes(i.getUTCMinutes()+t)}}},o=function(t){return{span:1e3*t,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes())},fmt:function(t){return i.pad2(t.getHours())+\":\"+i.pad2(t.getMinutes())+\":\"+i.pad2(t.getSeconds())},incr:function(i){return i.setUTCSeconds(i.getUTCSeconds()+t)}}},i.LABEL_SPECS={decade:{span:1728e8,start:function(t){return new Date(t.getFullYear()-t.getFullYear()%10,0,1)},fmt:function(t){return\"\"+t.getFullYear()},incr:function(t){return t.setFullYear(t.getFullYear()+10)}},year:{span:1728e7,start:function(t){return new Date(t.getFullYear(),0,1)},fmt:function(t){return\"\"+t.getFullYear()},incr:function(t){return t.setFullYear(t.getFullYear()+1)}},month:{span:24192e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),1)},fmt:function(t){return t.getFullYear()+\"-\"+i.pad2(t.getMonth()+1)},incr:function(t){return t.setMonth(t.getMonth()+1)}},week:{span:6048e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())},fmt:function(t){return t.getFullYear()+\"-\"+i.pad2(t.getMonth()+1)+\"-\"+i.pad2(t.getDate())},incr:function(t){return t.setDate(t.getDate()+7)}},day:{span:864e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())},fmt:function(t){return t.getFullYear()+\"-\"+i.pad2(t.getMonth()+1)+\"-\"+i.pad2(t.getDate())},incr:function(t){return t.setDate(t.getDate()+1)}},hour:e(60),\"30min\":e(30),\"15min\":e(15),\"10min\":e(10),\"5min\":e(5),minute:e(1),\"30sec\":o(30),\"15sec\":o(15),\"10sec\":o(10),\"5sec\":o(5),second:o(1)},i.AUTO_LABEL_ORDER=[\"decade\",\"year\",\"month\",\"week\",\"day\",\"hour\",\"30min\",\"15min\",\"10min\",\"5min\",\"minute\",\"30sec\",\"15sec\",\"10sec\",\"5sec\",\"second\"],i.Area=function(e){function o(e){var n;if(!(this instanceof i.Area))return new i.Area(e);n=t.extend({},r,e),this.cumulative=!n.behaveLikeLine,\"auto\"===n.fillOpacity&&(n.fillOpacity=n.behaveLikeLine?.8:1),o.__super__.constructor.call(this,n)}var r;return a(o,e),r={fillOpacity:\"auto\",behaveLikeLine:!1},o.prototype.calcPoints=function(){var t,i,e,o,r,n,s;for(n=this.data,s=[],o=0,r=n.length;o<r;o++)t=n[o],t._x=this.transX(t.x),i=0,t._y=function(){var o,r,n,s;for(n=t.y,s=[],o=0,r=n.length;o<r;o++)e=n[o],this.options.behaveLikeLine?s.push(this.transY(e)):(i+=e||0,s.push(this.transY(i)));return s}.call(this),s.push(t._ymax=Math.max.apply(Math,t._y));return s},o.prototype.drawSeries=function(){var t,i,e,o,r,n,s,a;for(this.seriesPoints=[],i=this.options.behaveLikeLine?function(){n=[];for(var t=0,i=this.options.ykeys.length-1;0<=i?t<=i:t>=i;0<=i?t++:t--)n.push(t);return n}.apply(this):function(){s=[];for(var t=r=this.options.ykeys.length-1;r<=0?t<=0:t>=0;r<=0?t++:t--)s.push(t);return s}.apply(this),a=[],e=0,o=i.length;e<o;e++)t=i[e],this._drawFillFor(t),this._drawLineFor(t),a.push(this._drawPointFor(t));return a},o.prototype._drawFillFor=function(t){var i;if(null!==(i=this.paths[t]))return i=i+\"L\"+this.transX(this.xmax)+\",\"+this.bottom+\"L\"+this.transX(this.xmin)+\",\"+this.bottom+\"Z\",this.drawFilledPath(i,this.fillForSeries(t))},o.prototype.fillForSeries=function(t){var i;return i=Raphael.rgb2hsl(this.colorFor(this.data[t],t,\"line\")),Raphael.hsl(i.h,this.options.behaveLikeLine?.9*i.s:.75*i.s,Math.min(.98,this.options.behaveLikeLine?1.2*i.l:1.25*i.l))},o.prototype.drawFilledPath=function(t,i){return this.raphael.path(t).attr(\"fill\",i).attr(\"fill-opacity\",this.options.fillOpacity).attr(\"stroke\",\"none\")},o}(i.Line),i.Bar=function(e){function o(e){if(this.onHoverOut=n(this.onHoverOut,this),this.onHoverMove=n(this.onHoverMove,this),this.onGridClick=n(this.onGridClick,this),!(this instanceof i.Bar))return new i.Bar(e);o.__super__.constructor.call(this,t.extend({},e,{parseTime:!1}))}return a(o,e),o.prototype.init=function(){if(this.cumulative=this.options.stacked,\"always\"!==this.options.hideHover)return this.hover=new i.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)},o.prototype.defaults={barSizeRatio:.75,barGap:3,barColors:[\"#0b62a4\",\"#7a92a3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],barOpacity:1,barRadius:[0,0,0,0],xLabelMargin:50,horizontal:!1,shown:!0},o.prototype.calc=function(){var t;if(this.calcBars(),!1===this.options.hideHover)return(t=this.hover).update.apply(t,this.hoverContentForRow(this.data.length-1))},o.prototype.calcBars=function(){var t,i,e,o,r,n,s;for(n=this.data,s=[],t=o=0,r=n.length;o<r;t=++o)i=n[t],i._x=this.xStart+this.xSize*(t+.5)/this.data.length,s.push(i._y=function(){var t,o,r,n;for(r=i.y,n=[],t=0,o=r.length;t<o;t++)e=r[t],null!=e?n.push(this.transY(e)):n.push(null);return n}.call(this));return s},o.prototype.draw=function(){var t;return!0!==(t=this.options.axes)&&\"both\"!==t&&\"x\"!==t||this.drawXAxis(),this.drawSeries()},o.prototype.drawXAxis=function(){var t,i,e,o,r,n,s,a,h,l,p,u,d,c,f,y,g;for(i=this.options.horizontal?this.getYAxisLabelX():this.getXAxisLabelY(),l=null,h=null,g=[],e=f=0,y=this.data.length;0<=y?f<y:f>y;e=0<=y?++f:--f)p=this.data[this.data.length-1-e],o=this.options.horizontal?this.drawYAxisLabel(i,p._x-.5*this.options.gridTextSize,p.label):this.drawXAxisLabel(p._x,i,p.label),t=this.options.horizontal?0:this.options.xLabelAngle,c=o.getBBox(),o.transform(\"r\"+-t),r=o.getBBox(),o.transform(\"t0,\"+r.height/2+\"...\"),0!==t&&(a=-.5*c.width*Math.cos(t*Math.PI/180),o.transform(\"t\"+a+\",0...\")),this.options.horizontal?(d=r.y,u=r.height,s=this.el.height()):(d=r.x,u=r.width,s=this.el.width()),(null==l||l>=d+u||null!=h&&h>=d)&&d>=0&&d+u<s?(0!==t&&(n=1.25*this.options.gridTextSize/Math.sin(t*Math.PI/180),h=d-n),this.options.horizontal?g.push(l=d):g.push(l=d-this.options.xLabelMargin)):g.push(o.remove());return g},o.prototype.getXAxisLabelY=function(){return this.bottom+(this.options.xAxisLabelTopPadding||this.options.padding/2)},o.prototype.drawSeries=function(){var t,i,e,o,r,n,s,a,h,l,p,u,d,c,f,y,g,m;if(e=this.xSize/this.options.data.length,this.options.stacked)h=1;else for(h=0,o=g=0,m=this.options.ykeys.length-1;0<=m?g<=m:g>=m;o=0<=m?++g:--g)this.hasToShow(o)&&(h+=1);return t=(e*this.options.barSizeRatio-this.options.barGap*(h-1))/h,this.options.barSize&&(t=Math.min(t,this.options.barSize)),d=e-t*h-this.options.barGap*(h-1),a=d/2,y=this.ymin<=0&&this.ymax>=0?this.transY(0):null,this.bars=function(){var o,h,d,g;for(d=this.data,g=[],r=o=0,h=d.length;o<h;r=++o)l=d[r],n=0,g.push(function(){var o,h,d,g;for(d=l._y,g=[],p=o=0,h=d.length;o<h;p=++o)f=d[p],this.hasToShow(p)&&(null!==f?(y?(c=Math.min(f,y),i=Math.max(f,y)):(c=f,i=this.bottom),s=this.xStart+r*e+a,this.options.stacked||(s+=p*(t+this.options.barGap)),u=i-c,this.options.verticalGridCondition&&this.options.verticalGridCondition(l.x)&&(this.options.horizontal?this.drawBar(this.yStart,this.xStart+r*e,this.ySize,e,this.options.verticalGridColor,this.options.verticalGridOpacity,this.options.barRadius):this.drawBar(this.xStart+r*e,this.yEnd,e,this.ySize,this.options.verticalGridColor,this.options.verticalGridOpacity,this.options.barRadius)),this.options.stacked&&(c-=n),this.options.horizontal?(this.drawBar(c,s,u,t,this.colorFor(l,p,\"bar\"),this.options.barOpacity,this.options.barRadius),g.push(n-=u)):(this.drawBar(s,c,t,u,this.colorFor(l,p,\"bar\"),this.options.barOpacity,this.options.barRadius),g.push(n+=u))):g.push(null));return g}.call(this));return g}.call(this)},o.prototype.colorFor=function(t,i,e){var o,r;return\"function\"==typeof this.options.barColors?(o={x:t.x,y:t.y[i],label:t.label},r={index:i,key:this.options.ykeys[i],label:this.options.labels[i]},this.options.barColors.call(this,o,r,e)):this.options.barColors[i%this.options.barColors.length]},o.prototype.hitTest=function(t,i){var e;return 0===this.data.length?null:(e=this.options.horizontal?i:t,e=Math.max(Math.min(e,this.xEnd),this.xStart),Math.min(this.data.length-1,Math.floor((e-this.xStart)/(this.xSize/this.data.length))))},o.prototype.onGridClick=function(t,i){var e;return e=this.hitTest(t,i),this.fire(\"click\",e,this.data[e].src,t,i)},o.prototype.onHoverMove=function(t,i){var e,o;return e=this.hitTest(t,i),(o=this.hover).update.apply(o,this.hoverContentForRow(e))},o.prototype.onHoverOut=function(){if(!1!==this.options.hideHover)return this.hover.hide()},o.prototype.hoverContentForRow=function(i){var e,o,r,n,s,a,h,l;for(r=this.data[i],e=t(\"<div class='morris-hover-row-label'>\").text(r.label),e=e.prop(\"outerHTML\"),l=r.y,o=a=0,h=l.length;a<h;o=++a)s=l[o],!1!==this.options.labels[o]&&(e+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(r,o,\"label\")+\"'>\\n  \"+this.options.labels[o]+\":\\n  \"+this.yLabelFormat(s,o)+\"\\n</div>\");return\"function\"==typeof this.options.hoverCallback&&(e=this.options.hoverCallback(i,this.options,e,r.src)),this.options.horizontal?(n=this.left+.5*this.width,s=this.top+(i+.5)*this.height/this.data.length,[e,n,s,!0]):(n=this.left+(i+.5)*this.width/this.data.length,[e,n])},o.prototype.drawXAxisLabel=function(t,i,e){return this.raphael.text(t,i,e).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},o.prototype.drawBar=function(t,i,e,o,r,n,s){var a,h;return a=Math.max.apply(Math,s),h=0===a||a>o?this.raphael.rect(t,i,e,o):this.raphael.path(this.roundedRect(t,i,e,o,s)),h.attr(\"fill\",r).attr(\"fill-opacity\",n).attr(\"stroke\",\"none\")},o.prototype.roundedRect=function(t,i,e,o,r){return null==r&&(r=[0,0,0,0]),[\"M\",t,r[0]+i,\"Q\",t,i,t+r[0],i,\"L\",t+e-r[1],i,\"Q\",t+e,i,t+e,i+r[1],\"L\",t+e,i+o-r[2],\"Q\",t+e,i+o,t+e-r[2],i+o,\"L\",t+r[3],i+o,\"Q\",t,i+o,t,i+o-r[3],\"Z\"]},o}(i.Grid),i.Donut=function(e){function o(e){this.resizeHandler=n(this.resizeHandler,this),this.select=n(this.select,this),this.click=n(this.click,this);var o=this;if(!(this instanceof i.Donut))return new i.Donut(e);if(this.options=t.extend({},this.defaults,e),\"string\"==typeof e.element?this.el=t(document.getElementById(e.element)):this.el=t(e.element),null===this.el||0===this.el.length)throw new Error(\"Graph placeholder not found.\");void 0!==e.data&&0!==e.data.length&&(this.raphael=new Raphael(this.el[0]),this.options.resize&&t(window).bind(\"resize\",function(t){return null!=o.timeoutId&&window.clearTimeout(o.timeoutId),o.timeoutId=window.setTimeout(o.resizeHandler,100)}),this.setData(e.data))}return a(o,e),o.prototype.defaults={colors:[\"#0B62A4\",\"#3980B5\",\"#679DC6\",\"#95BBD7\",\"#B0CCE1\",\"#095791\",\"#095085\",\"#083E67\",\"#052C48\",\"#042135\"],backgroundColor:\"#FFFFFF\",labelColor:\"#000000\",formatter:i.commas,resize:!1},o.prototype.redraw=function(){var t,e,o,r,n,s,a,h,l,p,u,d,c,f,y,g,m,x,v,b,S,w,L;for(this.raphael.clear(),e=this.el.width()/2,o=this.el.height()/2,c=(Math.min(e,o)-10)/3,u=0,b=this.values,f=0,m=b.length;f<m;f++)d=b[f],u+=d;for(h=5/(2*c),t=1.9999*Math.PI-h*this.data.length,s=0,n=0,this.segments=[],S=this.values,r=y=0,x=S.length;y<x;r=++y)d=S[r],l=s+h+t*(d/u),p=new i.DonutSegment(e,o,2*c,c,s,l,this.data[r].color||this.options.colors[n%this.options.colors.length],this.options.backgroundColor,n,this.raphael),p.render(),this.segments.push(p),p.on(\"hover\",this.select),p.on(\"click\",this.click),s=l,n+=1;for(this.text1=this.drawEmptyDonutLabel(e,o-10,this.options.labelColor,15,800),this.text2=this.drawEmptyDonutLabel(e,o+10,this.options.labelColor,14),a=Math.max.apply(Math,this.values),n=0,w=this.values,L=[],g=0,v=w.length;g<v;g++){if((d=w[g])===a){this.select(n);break}L.push(n+=1)}return L},o.prototype.setData=function(t){var i;return this.data=t,this.values=function(){var t,e,o,r;for(o=this.data,r=[],t=0,e=o.length;t<e;t++)i=o[t],r.push(parseFloat(i.value));return r}.call(this),this.redraw()},o.prototype.click=function(t){return this.fire(\"click\",t,this.data[t])},o.prototype.select=function(t){var i,e,o,r,n,s;for(s=this.segments,r=0,n=s.length;r<n;r++)e=s[r],e.deselect();return o=this.segments[t],o.select(),i=this.data[t],this.setLabels(i.label,this.options.formatter(i.value,i))},o.prototype.setLabels=function(t,i){var e,o,r,n,s,a,h,l;return e=2*(Math.min(this.el.width()/2,this.el.height()/2)-10)/3,n=1.8*e,r=e/2,o=e/3,this.text1.attr({text:t,transform:\"\"}),s=this.text1.getBBox(),a=Math.min(n/s.width,r/s.height),this.text1.attr({transform:\"S\"+a+\",\"+a+\",\"+(s.x+s.width/2)+\",\"+(s.y+s.height)}),this.text2.attr({text:i,transform:\"\"}),h=this.text2.getBBox(),l=Math.min(n/h.width,o/h.height),this.text2.attr({transform:\"S\"+l+\",\"+l+\",\"+(h.x+h.width/2)+\",\"+h.y})},o.prototype.drawEmptyDonutLabel=function(t,i,e,o,r){var n;return n=this.raphael.text(t,i,\"\").attr(\"font-size\",o).attr(\"fill\",e),null!=r&&n.attr(\"font-weight\",r),n},o.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},o}(i.EventEmitter),i.DonutSegment=function(t){function i(t,i,e,o,r,s,a,h,l,p){this.cx=t,this.cy=i,this.inner=e,this.outer=o,this.color=a,this.backgroundColor=h,this.index=l,this.raphael=p,this.deselect=n(this.deselect,this),this.select=n(this.select,this),this.sin_p0=Math.sin(r),this.cos_p0=Math.cos(r),this.sin_p1=Math.sin(s),this.cos_p1=Math.cos(s),this.is_long=s-r>Math.PI?1:0,this.path=this.calcSegment(this.inner+3,this.inner+this.outer-5),this.selectedPath=this.calcSegment(this.inner+3,this.inner+this.outer),this.hilight=this.calcArc(this.inner)}return a(i,t),i.prototype.calcArcPoints=function(t){return[this.cx+t*this.sin_p0,this.cy+t*this.cos_p0,this.cx+t*this.sin_p1,this.cy+t*this.cos_p1]},i.prototype.calcSegment=function(t,i){var e,o,r,n,s,a,h,l,p,u;return p=this.calcArcPoints(t),e=p[0],r=p[1],o=p[2],n=p[3],u=this.calcArcPoints(i),s=u[0],h=u[1],a=u[2],l=u[3],\"M\"+e+\",\"+r+\"A\"+t+\",\"+t+\",0,\"+this.is_long+\",0,\"+o+\",\"+n+\"L\"+a+\",\"+l+\"A\"+i+\",\"+i+\",0,\"+this.is_long+\",1,\"+s+\",\"+h+\"Z\"},i.prototype.calcArc=function(t){var i,e,o,r,n;return n=this.calcArcPoints(t),i=n[0],o=n[1],e=n[2],r=n[3],\"M\"+i+\",\"+o+\"A\"+t+\",\"+t+\",0,\"+this.is_long+\",0,\"+e+\",\"+r},i.prototype.render=function(){var t=this;return this.arc=this.drawDonutArc(this.hilight,this.color),this.seg=this.drawDonutSegment(this.path,this.color,this.backgroundColor,function(){return t.fire(\"hover\",t.index)},function(){return t.fire(\"click\",t.index)})},i.prototype.drawDonutArc=function(t,i){return this.raphael.path(t).attr({stroke:i,\"stroke-width\":2,opacity:0})},i.prototype.drawDonutSegment=function(t,i,e,o,r){return this.raphael.path(t).attr({fill:i,stroke:e,\"stroke-width\":3}).hover(o).click(r)},i.prototype.select=function(){if(!this.selected)return this.seg.animate({path:this.selectedPath},150,\"<>\"),this.arc.animate({opacity:1},150,\"<>\"),this.selected=!0},i.prototype.deselect=function(){if(this.selected)return this.seg.animate({path:this.path},150,\"<>\"),this.arc.animate({opacity:0},150,\"<>\"),this.selected=!1},i}(i.EventEmitter)}).call(this)},function(t,i){t.exports=function(t,i,e,o){var r,n=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(r=t,n=t.default);var a=\"function\"==typeof n?n.options:n;if(i&&(a.render=i.render,a.staticRenderFns=i.staticRenderFns),e&&(a._scopeId=e),o){var h=a.computed||(a.computed={});Object.keys(o).forEach(function(t){var i=o[t];h[t]=function(){return i}})}return{esModule:r,exports:n,options:a}}},function(t,i,e){var o=e(14);\"string\"==typeof o&&(o=[[t.i,o,\"\"]]);e(20)(o,{});o.locals&&(t.exports=o.locals)},function(t,i,e){var o=e(3)(e(9),e(16),null,null);t.exports=o.exports},function(t,i,e){var o=e(3)(e(10),e(18),null,null);t.exports=o.exports},function(t,i,e){var o=e(3)(e(11),e(19),null,null);t.exports=o.exports},function(t,i,e){var o=e(3)(e(12),e(17),null,null);t.exports=o.exports},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,\"__esModule\",{value:!0}),e(2),e(4);var r=e(0),n=o(r),s=e(1),a=o(s);i.default={name:\"area-chart\",mixins:[a.default.area],data:function(){return{chart:null}},watch:{data:function(t){var i=this;this.$nextTick(function(){i.chart.options.labels=n.default.toObject(i.labels),i.chart.options.xkey=i.xkey,i.chart.options.ykeys=n.default.toObject(i.ykeys),i.lineColors&&(i.chart.options.lineColors=n.default.toObject(i.lineColors)),i.chart.setData(n.default.toObject(i.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize),labels:n.default.toObject(this.labels),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize,ymax:this.ymax,ymin:this.ymin,smooth:n.default.toBoolean(this.smooth),hideHover:this.hideHover,parseTime:n.default.toBoolean(this.parseTime),postUnits:this.postUnits,preUnits:this.preUnits,xLabelAngle:this.xLabelAngle,goalStrokeWidth:this.goalStrokeWidth,eventStrokeWidth:this.eventStrokeWidth,fillOpacity:this.fillOpacity,behaveLikeLine:this.behaveLikeLine};this.addOptionAsObject(\"lineColors\",t),this.addOption(\"xLabels\",t),this.addOptionAsObject(\"pointFillColors\",t),this.addOptionAsObject(\"pointStrokeColors\",t),this.addOption(\"dateFormat\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOptionAsObject(\"goals\",t),this.addOptionAsObject(\"goalLineColors\",t),this.addOptionAsObject(\"events\",t),this.addOptionAsObject(\"eventLineColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Area(t)}}},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,\"__esModule\",{value:!0}),e(2),e(4);var r=e(0),n=o(r),s=e(1),a=o(s);i.default={name:\"bar-chart\",mixins:[a.default.bar],data:function(){return{chart:null}},watch:{data:function(t){var i=this;this.$nextTick(function(){i.chart.options.labels=n.default.toObject(i.labels),i.chart.options.xkey=i.xkey,i.chart.options.ykeys=n.default.toObject(i.ykeys),i.barColors&&(i.chart.options.barColors=n.default.toObject(i.barColors)),i.chart.setData(i.data)})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),labels:n.default.toObject(this.labels),resize:n.default.toBoolean(this.resize),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),axes:n.default.toBoolean(this.axes),ymax:this.ymax,ymin:this.ymin,hideHover:this.hideHover,horizontal:n.default.toBoolean(this.horizontal),stacked:n.default.toBoolean(this.stacked),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,xLabelAngle:this.xLabelAngle,lineWidth:this.lineWidth,pointSize:this.pointSize};this.addOptionAsObject(\"barColors\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Bar(t)}}},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,\"__esModule\",{value:!0}),e(2),e(4);var r=e(0),n=o(r),s=e(1),a=o(s);i.default={name:\"donut-chart\",mixins:[a.default.donut],data:function(){return{chart:null}},watch:{data:function(t){var i=this;this.$nextTick(function(){i.data&&i.data.length>0&&!i.chart&&i.createChart(),i.chart&&(i.colors&&(i.chart.options.colors=n.default.toObject(i.colors)),i.chart.setData(n.default.toObject(i.data)))})}},mounted:function(){this.data&&this.data.length>0&&this.createChart()},methods:{createChart:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize)};this.addOptionAsObject(\"colors\",t),this.addOption(\"formatter\",t),this.chart=Morris.Donut(t)}}}},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,\"__esModule\",{value:!0}),e(2),e(4);var r=e(0),n=o(r),s=e(1),a=o(s);i.default={name:\"line-chart\",mixins:[a.default.line],data:function(){return{chart:null}},watch:{data:function(t){var i=this;this.$nextTick(function(){i.chart.options.labels=n.default.toObject(i.labels),i.chart.options.xkey=i.xkey,i.chart.options.ykeys=n.default.toObject(i.ykeys),i.lineColors&&(i.chart.options.lineColors=n.default.toObject(i.lineColors)),i.chart.setData(n.default.toObject(i.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize),labels:n.default.toObject(this.labels),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize,ymax:this.ymax,ymin:this.ymin,smooth:n.default.toBoolean(this.smooth),hideHover:this.hideHover,parseTime:n.default.toBoolean(this.parseTime),postUnits:this.postUnits,preUnits:this.preUnits,xLabelAngle:this.xLabelAngle,goalStrokeWidth:this.goalStrokeWidth,eventStrokeWidth:this.eventStrokeWidth,fillOpacity:this.fillOpacity};this.addOptionAsObject(\"lineColors\",t),this.addOption(\"xLabels\",t),this.addOptionAsObject(\"pointFillColors\",t),this.addOptionAsObject(\"pointStrokeColors\",t),this.addOption(\"dateFormat\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOptionAsObject(\"goals\",t),this.addOptionAsObject(\"goalLineColors\",t),this.addOptionAsObject(\"events\",t),this.addOptionAsObject(\"eventLineColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Line(t)}}},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}var r=e(7),n=o(r),s=e(6),a=o(s),h=e(8),l=o(h),p=e(5),u=o(p),d={DonutChart:n.default,BarChart:a.default,LineChart:l.default,AreaChart:u.default};t.exports=d},function(t,i,e){i=t.exports=e(15)(),i.push([t.i,\".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}\",\"\"])},function(t,i){t.exports=function(){var t=[];return t.toString=function(){for(var t=[],i=0;i<this.length;i++){var e=this[i];e[2]?t.push(\"@media \"+e[2]+\"{\"+e[1]+\"}\"):t.push(e[1])}return t.join(\"\")},t.i=function(i,e){\"string\"==typeof i&&(i=[[null,i,\"\"]]);for(var o={},r=0;r<this.length;r++){var n=this[r][0];\"number\"==typeof n&&(o[n]=!0)}for(r=0;r<i.length;r++){var s=i[r];\"number\"==typeof s[0]&&o[s[0]]||(e&&!s[2]?s[2]=e:e&&(s[2]=\"(\"+s[2]+\") and (\"+e+\")\"),t.push(s))}},t}},function(t,i){t.exports={render:function(){var t=this,i=t.$createElement;return(t._self._c||i)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,i){t.exports={render:function(){var t=this,i=t.$createElement;return(t._self._c||i)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,i){t.exports={render:function(){var t=this,i=t.$createElement;return(t._self._c||i)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,i){t.exports={render:function(){var t=this,i=t.$createElement;return(t._self._c||i)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,i){function e(t,i){for(var e=0;e<t.length;e++){var o=t[e],r=p[o.id];if(r){r.refs++;for(var n=0;n<r.parts.length;n++)r.parts[n](o.parts[n]);for(;n<o.parts.length;n++)r.parts.push(a(o.parts[n],i))}else{for(var s=[],n=0;n<o.parts.length;n++)s.push(a(o.parts[n],i));p[o.id]={id:o.id,refs:1,parts:s}}}}function o(t){for(var i=[],e={},o=0;o<t.length;o++){var r=t[o],n=r[0],s=r[1],a=r[2],h=r[3],l={css:s,media:a,sourceMap:h};e[n]?e[n].parts.push(l):i.push(e[n]={id:n,parts:[l]})}return i}function r(t,i){var e=c(),o=g[g.length-1];if(\"top\"===t.insertAt)o?o.nextSibling?e.insertBefore(i,o.nextSibling):e.appendChild(i):e.insertBefore(i,e.firstChild),g.push(i);else{if(\"bottom\"!==t.insertAt)throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");e.appendChild(i)}}function n(t){t.parentNode.removeChild(t);var i=g.indexOf(t);i>=0&&g.splice(i,1)}function s(t){var i=document.createElement(\"style\");return i.type=\"text/css\",r(t,i),i}function a(t,i){var e,o,r;if(i.singleton){var a=y++;e=f||(f=s(i)),o=h.bind(null,e,a,!1),r=h.bind(null,e,a,!0)}else e=s(i),o=l.bind(null,e),r=function(){n(e)};return o(t),function(i){if(i){if(i.css===t.css&&i.media===t.media&&i.sourceMap===t.sourceMap)return;o(t=i)}else r()}}function h(t,i,e,o){var r=e?\"\":o.css;if(t.styleSheet)t.styleSheet.cssText=m(i,r);else{var n=document.createTextNode(r),s=t.childNodes;s[i]&&t.removeChild(s[i]),s.length?t.insertBefore(n,s[i]):t.appendChild(n)}}function l(t,i){var e=i.css,o=i.media,r=i.sourceMap;if(o&&t.setAttribute(\"media\",o),r&&(e+=\"\\n/*# sourceURL=\"+r.sources[0]+\" */\",e+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+\" */\"),t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}var p={},u=function(t){var i;return function(){return void 0===i&&(i=t.apply(this,arguments)),i}},d=u(function(){return/msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase())}),c=u(function(){return document.head||document.getElementsByTagName(\"head\")[0]}),f=null,y=0,g=[];t.exports=function(t,i){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");i=i||{},void 0===i.singleton&&(i.singleton=d()),void 0===i.insertAt&&(i.insertAt=\"bottom\");var r=o(t);return e(r,i),function(t){for(var n=[],s=0;s<r.length;s++){var a=r[s],h=p[a.id];h.refs--,n.push(h)}if(t){e(o(t),i)}for(var s=0;s<n.length;s++){var h=n[s];if(0===h.refs){for(var l=0;l<h.parts.length;l++)h.parts[l]();delete p[h.id]}}}};var m=function(){var t=[];return function(i,e){return t[i]=e,t.filter(Boolean).join(\"\\n\")}}()}])}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceMappingURL=vue-morris.min.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(201)))\n\n/***/ }),\n\n/***/ 588:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_raphael_raphael__ = __webpack_require__(560);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_raphael_raphael___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_raphael_raphael__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_morris__ = __webpack_require__(561);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_morris___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue_morris__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\nglobal.Raphael = __WEBPACK_IMPORTED_MODULE_0_raphael_raphael___default.a;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"FcUsageGraph\",\n  components: {\n    LineChart: __WEBPACK_IMPORTED_MODULE_1_vue_morris__[\"LineChart\"]\n  },\n  props: {\n    data: Array,\n    id: String,\n    type: String,\n    labels: Array,\n    labelsText: Array,\n    colors: {\n      type: Array,\n      default: ['#1a50a3', '#00b752', '#dc3043', '#eecd3b', '#768ea2', '#b300ec', '#a9d2f9', '#ffd8b1', '#008080', '#d2f53c']\n    }\n  }\n});\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(14)))\n\n/***/ }),\n\n/***/ 604:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_fc_usage_graph_vue__ = __webpack_require__(588);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_525850b2_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_fc_usage_graph_vue__ = __webpack_require__(607);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(605)\n}\nvar normalizeComponent = __webpack_require__(39)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-525850b2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_fc_usage_graph_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_525850b2_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_fc_usage_graph_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 605:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(606);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(471)(\"5e565d4b\", content, true, {});\n\n/***/ }),\n\n/***/ 606:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(470)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".maxh200[data-v-525850b2]{max-height:200px}.graphContainer[data-v-525850b2]{width:100%}.loading[data-v-525850b2]{text-align:center;padding:20px;vertical-align:middle;font-weight:200}\", \"\", {\"version\":3,\"sources\":[\"/home/runner/work/fitcrack/fitcrack/webadmin/fitcrackFE/src/components/graph/fc_usage_graph.vue\"],\"names\":[],\"mappings\":\"AACA,0BACI,gBAAkB,CACrB,AACD,iCACI,UAAY,CACf,AACD,0BACI,kBAAmB,AACnB,aAAc,AACd,sBAAuB,AACvB,eAAiB,CACpB\",\"file\":\"fc_usage_graph.vue\",\"sourcesContent\":[\"\\n.maxh200[data-v-525850b2]{\\n    max-height: 200px;\\n}\\n.graphContainer[data-v-525850b2] {\\n    width: 100%;\\n}\\n.loading[data-v-525850b2] {\\n    text-align: center;\\n    padding: 20px;\\n    vertical-align: middle;\\n    font-weight: 200;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 607:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"graphContainer\"},[(_vm.data === null)?_c('div',{staticClass:\"loading\"},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"color\":\"primary\"}})],1):(_vm.data.length === 0)?_c('div',{staticClass:\"loading\"},[_c('h1',[_vm._v(\"No data\")])]):_c('div',[_c('line-chart',{staticClass:\"maxh200\",staticStyle:{\"height\":\"200px\"},attrs:{\"id\":_vm.id,\"data\":_vm.data,\"labels\":_vm.labelsText,\"grid\":\"true\",\"xkey\":\"time\",\"ykeys\":_vm.labels,\"hide-hover\":\"false\",\"resize\":\"true\",\"smooth\":true,\"line-colors\":_vm.colors}})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 692:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_tile_fc_tile__ = __webpack_require__(508);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_graph_fc_usage_graph__ = __webpack_require__(604);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  components: {\n    \"fc-tile\": __WEBPACK_IMPORTED_MODULE_0__components_tile_fc_tile__[\"a\" /* default */],\n    \"fc-graph\": __WEBPACK_IMPORTED_MODULE_1__components_graph_fc_usage_graph__[\"a\" /* default */]\n  },\n  data: function data() {\n    return {\n      deviceCount: 0,\n      hosts: null,\n      selectedHost: null,\n      usageData: null,\n      cpumemLabels: [\"cpu_utilization\", \"memory_utilization\"],\n      cpumemLabelsFriendly: [\"CPU [%]\", \"RAM [%]\"],\n      deviceLabels: [\"utilization\", \"temperature\"],\n      deviceLabelsFriendly: [\"Utilization [%]\", \"Temperature [°C]\"],\n      deviceUsage: [],\n      platforms: null,\n      dataObtainedForDevices: 0,\n      hostSelectedBool: false\n    };\n  },\n  watch: {\n    deviceCount: function deviceCount() {\n      this.getDeviceStats();\n    },\n    hosts: function hosts() {\n      if (!this.hostSelectedBool) {\n        if (Array.isArray(this.hosts) && this.hosts.length) {\n          this.selectedHost = this.hosts[0].id;\n          this.hostSelectedBool = true;\n          this.hostSelected();\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.loadData();\n    this.interval = setInterval(function () {\n      this.loadData();\n    }.bind(this), 10000);\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearInterval(this.interval);\n  },\n\n  methods: {\n    loadData: function loadData() {\n      var _this = this;\n\n      this.axios.get(this.$serverAddr + \"/job/\" + this.$route.params.id + \"/hosts\").then(function (response) {\n        //console.log(\"/job/\"+this.$route.params.id+\"/hosts\",response.data.items);\n        _this.hosts = response.data.items;\n      });\n      if (this.selectedHost != null) this.hostSelected();\n    },\n    hostSelected: function hostSelected() {\n      var _this2 = this;\n\n      if (this.selectedHost != null) {\n        var dvcCount = 0;\n        this.axios.get(this.$serverAddr + \"/job/\" + this.$route.params.id + \"/hwMon/\" + this.selectedHost + \"/systemStats\").then(function (response) {\n          //console.log(\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost+\"/systemStats\",response.data.items);\n          _this2.usageData = response.data.items;\n        });\n        this.axios.get(this.$serverAddr + \"/job/\" + this.$route.params.id + \"/hwMon/\" + this.selectedHost + \"/deviceCount\").then(function (response) {\n          //console.log(\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost+\"/deviceCount\",response.data.deviceCount);\n          _this2.deviceCount = response.data.deviceCount;\n        });\n        this.getDeviceStats();\n        this.axios.get(this.$serverAddr + \"/job/\" + this.$route.params.id + \"/hwMon/\" + this.selectedHost + \"/platforms\").then(function (response) {\n          //console.log(\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost+\"/platforms\",response.data.items);\n          _this2.platforms = response.data.items;\n        });\n      }\n    },\n    getDeviceStats: function getDeviceStats() {\n      var _this3 = this;\n\n      if (this.selectedHost != null) {\n        var _loop = function _loop(i) {\n          _this3.axios.get(_this3.$serverAddr + \"/job/\" + _this3.$route.params.id + \"/hwMon/\" + _this3.selectedHost + \"/deviceStats/\" + i).then(function (response) {\n            //console.log(\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost +\"/deviceStats/\"+i,response.data.items);\n            _this3.deviceUsage[i] = response.data.items;\n            _this3.dataObtainedForDevices++;\n          });\n        };\n\n        for (var i = 1; i <= this.deviceCount; i++) {\n          _loop(i);\n        }\n      }\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 962:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(963);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(471)(\"3a2003e0\", content, true, {});\n\n/***/ }),\n\n/***/ 963:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(470)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".bold[data-v-0d554a5c]{font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"/home/runner/work/fitcrack/fitcrack/webadmin/fitcrackFE/src/components/hwMon/hwMonView.vue\"],\"names\":[],\"mappings\":\"AACA,uBACE,eAAkB,CACnB\",\"file\":\"hwMonView.vue\",\"sourcesContent\":[\"\\n.bold[data-v-0d554a5c] {\\n  font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 964:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mx-2 my-2 d-flex\"},[_c('div',{staticClass:\"flex-grow-2 mx-2\"},[_c('v-card',[_c('v-card-title',[_vm._v(\"Hosts\")]),_vm._v(\" \"),_c('v-list',[_c('v-divider'),_vm._v(\" \"),_c('v-list-item-group',{attrs:{\"color\":\"primary\"},on:{\"change\":function($event){return _vm.hostSelected()}},model:{value:(_vm.selectedHost),callback:function ($$v) {_vm.selectedHost=$$v},expression:\"selectedHost\"}},_vm._l((_vm.hosts),function(host,i){return _c('v-list-item',{key:i,attrs:{\"value\":host.id}},[_c('v-list-item-content',[_c('v-list-item-title',{staticClass:\"pr-5\",domProps:{\"textContent\":_vm._s(host.name)}})],1)],1)}),1)],1)],1)],1),_vm._v(\" \"),(_vm.selectedHost)?_c('div',{staticClass:\"flex-grow-1 mx-2\"},[_c('v-card',{staticClass:\"mb-4\"},[_c('v-card-title',[_c('v-icon',[_vm._v(\"mdi-memory\")]),_vm._v(\"CPU & Memory\\n      \")],1),_vm._v(\" \"),_c('fc-graph',{attrs:{\"id\":\"jobGraph1\",\"data\":_vm.usageData,\"labels\":_vm.cpumemLabels,\"labels-text\":_vm.cpumemLabelsFriendly,\"colors\":['#2641A3','#19C019']}}),_vm._v(\" \"),_c('p',{staticClass:\"d-flex justify-center align-center mt-2 py-3\"},[_c('v-icon',{attrs:{\"color\":\"#2641A3\"}},[_vm._v(\"mdi-square-medium\")]),_vm._v(\" CPU utilization (%)\\n        \"),_c('v-icon',{staticClass:\"pl-2\",attrs:{\"color\":\"#19C019\"}},[_vm._v(\"mdi-square-medium\")]),_vm._v(\" RAM utilization (%)\\n      \")],1)],1),_vm._v(\" \"),_vm._l((_vm.deviceCount),function(i){return _c('div',{key:i},[(_vm.dataObtainedForDevices >= i)?_c('v-card',{staticClass:\"mb-4\"},[_c('v-card-title',[_c('v-icon',[_vm._v(\"mdi-gauge\")]),_vm._v(\"\\n          OpenCL device (\"+_vm._s(i)+\")\\n        \")],1),_vm._v(\" \"),_c('fc-graph',{attrs:{\"id\":'jobGraph'+i+1,\"data\":_vm.deviceUsage[i],\"labels\":_vm.deviceLabels,\"labels-text\":_vm.deviceLabelsFriendly,\"colors\":['#2641A3','#F01F1F']}}),_vm._v(\" \"),_c('p',{staticClass:\"d-flex justify-center align-center mt-2 py-3\"},[_c('v-icon',{attrs:{\"color\":\"#2641A3\"}},[_vm._v(\"mdi-square-medium\")]),_vm._v(\" Utilization (%)\\n          \"),_c('v-icon',{staticClass:\"pl-2\",attrs:{\"color\":\"#F01F1F\"}},[_vm._v(\"mdi-square-medium\")]),_vm._v(\" Temperature (°C)\\n        \")],1)],1):_vm._e()],1)})],2):_vm._e(),_vm._v(\" \"),((_vm.platforms != null) && _vm.selectedHost)?_c('div',{staticClass:\"flex-grow-2 mx-2\"},[_c('v-card',[_c('v-card-title',[_vm._v(\"Detected platforms\")]),_vm._v(\" \"),_c('v-divider'),_vm._v(\" \"),_vm._l((_vm.platforms),function(platform){return [_c('v-row',{staticClass:\"mx-1\"},[_c('v-col',{staticClass:\"bold\",attrs:{\"cols\":\"4\"}},[_vm._v(\"Platform\")]),_vm._v(\" \"),_c('v-col',[_vm._v(_vm._s(platform.name))])],1),_vm._v(\" \"),_c('v-row',{staticClass:\"mx-1\"},[_c('v-col',{staticClass:\"bold\",attrs:{\"cols\":\"4\"}},[_vm._v(\"Version\")]),_vm._v(\" \"),_c('v-col',[_vm._v(_vm._s(platform.version))])],1),_vm._v(\" \"),_vm._l((platform.platformDevices),function(dvcs){return [_c('v-row',{staticClass:\"mx-1\"},[_c('v-col',{staticClass:\"bold\",attrs:{\"cols\":\"4\"}},[_vm._v(_vm._s(dvcs.type))]),_vm._v(\" \"),_c('v-col',[_vm._v(_vm._s(dvcs.name))])],1)]}),_vm._v(\" \"),_c('v-divider')]})],2)],1):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/19.713f6dea1cc1064b0cc9.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0d554a5c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./hwMonView.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./hwMonView.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./hwMonView.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0d554a5c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./hwMonView.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0d554a5c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/hwMon/hwMonView.vue\n// module id = 503\n// module chunks = 19","<!--\n   * Author : see AUTHORS\n   * Licence: MIT, see LICENSE\n-->\n\n<template>\n  <v-card flat class=\"mx-auto\">\n    <v-card-title>\n      <v-icon \n        v-if=\"icon\"\n        left\n      >\n        {{ icon }}\n      </v-icon>\n      {{ title }}\n    </v-card-title>\n    <v-card-text class=\"contentFcTile\">\n      <v-skeleton-loader\n        v-if=\"loading\"\n        class=\"mx-auto\"\n        type=\"article\"\n      />\n      <slot v-else />\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    name: \"FcTile\",\n    props: {\n      title: String,\n      loading: Boolean,\n      icon: String\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/tile/fc_tile.vue","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./fc_tile.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./fc_tile.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-562e96ed\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./fc_tile.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/tile/fc_tile.vue\n// module id = 508\n// module chunks = 0 4 5 7 10 11 12 13 14 15 18 19 20 22 24 25","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{staticClass:\"mx-auto\",attrs:{\"flat\":\"\"}},[_c('v-card-title',[(_vm.icon)?_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.icon)+\"\\n    \")]):_vm._e(),_vm._v(\"\\n    \"+_vm._s(_vm.title)+\"\\n  \")],1),_vm._v(\" \"),_c('v-card-text',{staticClass:\"contentFcTile\"},[(_vm.loading)?_c('v-skeleton-loader',{staticClass:\"mx-auto\",attrs:{\"type\":\"article\"}}):_vm._t(\"default\")],2)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-562e96ed\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/tile/fc_tile.vue\n// module id = 511\n// module chunks = 0 4 5 7 10 11 12 13 14 15 18 19 20 22 24 25","// ┌───────────────────────────────────────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël 2.3.0 - JavaScript Vector Library                                                             │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright © 2008-2016 Dmitry Baranovskiy (http://raphaeljs.com)                                       │ \\\\\n// │ Copyright © 2008-2016 Sencha Labs (http://sencha.com)                                                 │ \\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Licensed under the MIT (https://github.com/DmitryBaranovskiy/raphael/blob/master/license.txt) license.│ \\\\\n// └───────────────────────────────────────────────────────────────────────────────────────────────────────┘ \\\\\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Raphael\"] = factory();\n\telse\n\t\troot[\"Raphael\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./dev/raphael.amd.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./dev/raphael.amd.js\":\n/*!****************************!*\\\n  !*** ./dev/raphael.amd.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./raphael.core */ \"./dev/raphael.core.js\"), __webpack_require__(/*! ./raphael.svg */ \"./dev/raphael.svg.js\"), __webpack_require__(/*! ./raphael.vml */ \"./dev/raphael.vml.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(R) {\n\n    return R;\n\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"./dev/raphael.core.js\":\n/*!*****************************!*\\\n  !*** ./dev/raphael.core.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! eve */ \"./node_modules/eve-raphael/eve.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(eve) {\n\n    /*\\\n     * Raphael\n     [ method ]\n     **\n     * Creates a canvas object on which to draw.\n     * You must do this first, as all future calls to drawing methods\n     * from this instance will be bound to this canvas.\n     > Parameters\n     **\n     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\n     - width (number)\n     - height (number)\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n     * or\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n     * or\n     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n     * or\n     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\n     = (object) @Paper\n     > Usage\n     | // Each of the following examples create a canvas\n     | // that is 320px wide by 200px high.\n     | // Canvas is created at the viewport’s 10,50 coordinate.\n     | var paper = Raphael(10, 50, 320, 200);\n     | // Canvas is created at the top left corner of the #notepad element\n     | // (or its top right corner in dir=\"rtl\" elements)\n     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\n     | // Same as above\n     | var paper = Raphael(\"notepad\", 320, 200);\n     | // Image dump\n     | var set = Raphael([\"notepad\", 320, 200, {\n     |     type: \"rect\",\n     |     x: 10,\n     |     y: 10,\n     |     width: 25,\n     |     height: 25,\n     |     stroke: \"#f00\"\n     | }, {\n     |     type: \"text\",\n     |     x: 30,\n     |     y: 40,\n     |     text: \"Dump\"\n     | }]);\n    \\*/\n    function R(first) {\n        if (R.is(first, \"function\")) {\n            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\n        } else if (R.is(first, array)) {\n            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\n        } else {\n            var args = Array.prototype.slice.call(arguments, 0);\n            if (R.is(args[args.length - 1], \"function\")) {\n                var f = args.pop();\n                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\n                    f.call(R._engine.create[apply](R, args));\n                });\n            } else {\n                return R._engine.create[apply](R, arguments);\n            }\n        }\n    }\n    R.version = \"2.3.0\";\n    R.eve = eve;\n    var loaded,\n        separator = /[, ]+/,\n        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\n        formatrg = /\\{(\\d+)\\}/g,\n        proto = \"prototype\",\n        has = \"hasOwnProperty\",\n        g = {\n            doc: document,\n            win: window\n        },\n        oldRaphael = {\n            was: Object.prototype[has].call(g.win, \"Raphael\"),\n            is: g.win.Raphael\n        },\n        Paper = function () {\n            /*\\\n             * Paper.ca\n             [ property (object) ]\n             **\n             * Shortcut for @Paper.customAttributes\n            \\*/\n            /*\\\n             * Paper.customAttributes\n             [ property (object) ]\n             **\n             * If you have a set of attributes that you would like to represent\n             * as a function of some number you can do it easily with custom attributes:\n             > Usage\n             | paper.customAttributes.hue = function (num) {\n             |     num = num % 1;\n             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\n             | };\n             | // Custom attribute “hue” will change fill\n             | // to be given hue with fixed saturation and brightness.\n             | // Now you can use it like this:\n             | var c = paper.circle(10, 10, 10).attr({hue: .45});\n             | // or even like this:\n             | c.animate({hue: 1}, 1e3);\n             |\n             | // You could also create custom attribute\n             | // with multiple parameters:\n             | paper.customAttributes.hsb = function (h, s, b) {\n             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\n             | };\n             | c.attr({hsb: \"0.5 .8 1\"});\n             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\n            \\*/\n            this.ca = this.customAttributes = {};\n        },\n        paperproto,\n        appendChild = \"appendChild\",\n        apply = \"apply\",\n        concat = \"concat\",\n        //taken from Modernizr touch test: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js#L40\n        supportsTouch = ('ontouchstart' in window) || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch,\n        E = \"\",\n        S = \" \",\n        Str = String,\n        split = \"split\",\n        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\n        touchMap = {\n            mousedown: \"touchstart\",\n            mousemove: \"touchmove\",\n            mouseup: \"touchend\"\n        },\n        lowerCase = Str.prototype.toLowerCase,\n        math = Math,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        pow = math.pow,\n        PI = math.PI,\n        nu = \"number\",\n        string = \"string\",\n        array = \"array\",\n        toString = \"toString\",\n        fillString = \"fill\",\n        objectToString = Object.prototype.toString,\n        paper = {},\n        push = \"push\",\n        ISURL = R._ISURL = /^url\\(['\"]?(.+?)['\"]?\\)$/i,\n        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\n        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\n        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n        round = math.round,\n        setAttribute = \"setAttribute\",\n        toFloat = parseFloat,\n        toInt = parseInt,\n        upperCase = Str.prototype.toUpperCase,\n        availableAttrs = R._availableAttrs = {\n            \"arrow-end\": \"none\",\n            \"arrow-start\": \"none\",\n            blur: 0,\n            \"clip-rect\": \"0 0 1e9 1e9\",\n            cursor: \"default\",\n            cx: 0,\n            cy: 0,\n            fill: \"#fff\",\n            \"fill-opacity\": 1,\n            font: '10px \"Arial\"',\n            \"font-family\": '\"Arial\"',\n            \"font-size\": \"10\",\n            \"font-style\": \"normal\",\n            \"font-weight\": 400,\n            gradient: 0,\n            height: 0,\n            href: \"http://raphaeljs.com/\",\n            \"letter-spacing\": 0,\n            opacity: 1,\n            path: \"M0,0\",\n            r: 0,\n            rx: 0,\n            ry: 0,\n            src: \"\",\n            stroke: \"#000\",\n            \"stroke-dasharray\": \"\",\n            \"stroke-linecap\": \"butt\",\n            \"stroke-linejoin\": \"butt\",\n            \"stroke-miterlimit\": 0,\n            \"stroke-opacity\": 1,\n            \"stroke-width\": 1,\n            target: \"_blank\",\n            \"text-anchor\": \"middle\",\n            title: \"Raphael\",\n            transform: \"\",\n            width: 0,\n            x: 0,\n            y: 0,\n            \"class\": \"\"\n        },\n        availableAnimAttrs = R._availableAnimAttrs = {\n            blur: nu,\n            \"clip-rect\": \"csv\",\n            cx: nu,\n            cy: nu,\n            fill: \"colour\",\n            \"fill-opacity\": nu,\n            \"font-size\": nu,\n            height: nu,\n            opacity: nu,\n            path: \"path\",\n            r: nu,\n            rx: nu,\n            ry: nu,\n            stroke: \"colour\",\n            \"stroke-opacity\": nu,\n            \"stroke-width\": nu,\n            transform: \"transform\",\n            width: nu,\n            x: nu,\n            y: nu\n        },\n        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\n        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\n        hsrg = {hs: 1, rg: 1},\n        p2s = /,?([achlmqrstvxz]),?/gi,\n        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\n        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\n        eldata = {},\n        sortByKey = function (a, b) {\n            return a.key - b.key;\n        },\n        sortByNumber = function (a, b) {\n            return toFloat(a) - toFloat(b);\n        },\n        fun = function () {},\n        pipe = function (x) {\n            return x;\n        },\n        rectPath = R._rectPath = function (x, y, w, h, r) {\n            if (r) {\n                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n            }\n            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        },\n        ellipsePath = function (x, y, rx, ry) {\n            if (ry == null) {\n                ry = rx;\n            }\n            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n        },\n        getPath = R._getPath = {\n            path: function (el) {\n                return el.attr(\"path\");\n            },\n            circle: function (el) {\n                var a = el.attrs;\n                return ellipsePath(a.cx, a.cy, a.r);\n            },\n            ellipse: function (el) {\n                var a = el.attrs;\n                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\n            },\n            rect: function (el) {\n                var a = el.attrs;\n                return rectPath(a.x, a.y, a.width, a.height, a.r);\n            },\n            image: function (el) {\n                var a = el.attrs;\n                return rectPath(a.x, a.y, a.width, a.height);\n            },\n            text: function (el) {\n                var bbox = el._getBBox();\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n            },\n            set : function(el) {\n                var bbox = el._getBBox();\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n            }\n        },\n        /*\\\n         * Raphael.mapPath\n         [ method ]\n         **\n         * Transform the path string with given matrix.\n         > Parameters\n         - path (string) path string\n         - matrix (object) see @Matrix\n         = (string) transformed path string\n        \\*/\n        mapPath = R.mapPath = function (path, matrix) {\n            if (!matrix) {\n                return path;\n            }\n            var x, y, i, j, ii, jj, pathi;\n            path = path2curve(path);\n            for (i = 0, ii = path.length; i < ii; i++) {\n                pathi = path[i];\n                for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                    x = matrix.x(pathi[j], pathi[j + 1]);\n                    y = matrix.y(pathi[j], pathi[j + 1]);\n                    pathi[j] = x;\n                    pathi[j + 1] = y;\n                }\n            }\n            return path;\n        };\n\n    R._g = g;\n    /*\\\n     * Raphael.type\n     [ property (string) ]\n     **\n     * Can be “SVG”, “VML” or empty, depending on browser support.\n    \\*/\n    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\n    if (R.type == \"VML\") {\n        var d = g.doc.createElement(\"div\"),\n            b;\n        d.innerHTML = '<v:shape adj=\"1\"/>';\n        b = d.firstChild;\n        b.style.behavior = \"url(#default#VML)\";\n        if (!(b && typeof b.adj == \"object\")) {\n            return (R.type = E);\n        }\n        d = null;\n    }\n    /*\\\n     * Raphael.svg\n     [ property (boolean) ]\n     **\n     * `true` if browser supports SVG.\n    \\*/\n    /*\\\n     * Raphael.vml\n     [ property (boolean) ]\n     **\n     * `true` if browser supports VML.\n    \\*/\n    R.svg = !(R.vml = R.type == \"VML\");\n    R._Paper = Paper;\n    /*\\\n     * Raphael.fn\n     [ property (object) ]\n     **\n     * You can add your own method to the canvas. For example if you want to draw a pie chart,\n     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\n     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\n     * Raphaël instance is created, otherwise it will take no effect. Please note that the\n     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\n     * ensure any namespacing ensures proper context.\n     > Usage\n     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\n     |     return this.path( ... );\n     | };\n     | // or create namespace\n     | Raphael.fn.mystuff = {\n     |     arrow: function () {…},\n     |     star: function () {…},\n     |     // etc…\n     | };\n     | var paper = Raphael(10, 10, 630, 480);\n     | // then use it\n     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\n     | paper.mystuff.arrow();\n     | paper.mystuff.star();\n    \\*/\n    R.fn = paperproto = Paper.prototype = R.prototype;\n    R._id = 0;\n    /*\\\n     * Raphael.is\n     [ method ]\n     **\n     * Handful of replacements for `typeof` operator.\n     > Parameters\n     - o (…) any object or primitive\n     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\n     = (boolean) is given value is of given type\n    \\*/\n    R.is = function (o, type) {\n        type = lowerCase.call(type);\n        if (type == \"finite\") {\n            return !isnan[has](+o);\n        }\n        if (type == \"array\") {\n            return o instanceof Array;\n        }\n        return  (type == \"null\" && o === null) ||\n                (type == typeof o && o !== null) ||\n                (type == \"object\" && o === Object(o)) ||\n                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\n                objectToString.call(o).slice(8, -1).toLowerCase() == type;\n    };\n\n    function clone(obj) {\n        if (typeof obj == \"function\" || Object(obj) !== obj) {\n            return obj;\n        }\n        var res = new obj.constructor;\n        for (var key in obj) if (obj[has](key)) {\n            res[key] = clone(obj[key]);\n        }\n        return res;\n    }\n\n    /*\\\n     * Raphael.angle\n     [ method ]\n     **\n     * Returns angle between two or three points\n     > Parameters\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     - x3 (number) #optional x coord of third point\n     - y3 (number) #optional y coord of third point\n     = (number) angle in degrees.\n    \\*/\n    R.angle = function (x1, y1, x2, y2, x3, y3) {\n        if (x3 == null) {\n            var x = x1 - x2,\n                y = y1 - y2;\n            if (!x && !y) {\n                return 0;\n            }\n            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n        } else {\n            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\n        }\n    };\n    /*\\\n     * Raphael.rad\n     [ method ]\n     **\n     * Transform angle to radians\n     > Parameters\n     - deg (number) angle in degrees\n     = (number) angle in radians.\n    \\*/\n    R.rad = function (deg) {\n        return deg % 360 * PI / 180;\n    };\n    /*\\\n     * Raphael.deg\n     [ method ]\n     **\n     * Transform angle to degrees\n     > Parameters\n     - rad (number) angle in radians\n     = (number) angle in degrees.\n    \\*/\n    R.deg = function (rad) {\n        return Math.round ((rad * 180 / PI% 360)* 1000) / 1000;\n    };\n    /*\\\n     * Raphael.snapTo\n     [ method ]\n     **\n     * Snaps given value to given grid.\n     > Parameters\n     - values (array|number) given array of values or step of the grid\n     - value (number) value to adjust\n     - tolerance (number) #optional tolerance for snapping. Default is `10`.\n     = (number) adjusted value.\n    \\*/\n    R.snapTo = function (values, value, tolerance) {\n        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\n        if (R.is(values, array)) {\n            var i = values.length;\n            while (i--) if (abs(values[i] - value) <= tolerance) {\n                return values[i];\n            }\n        } else {\n            values = +values;\n            var rem = value % values;\n            if (rem < tolerance) {\n                return value - rem;\n            }\n            if (rem > values - tolerance) {\n                return value - rem + values;\n            }\n        }\n        return value;\n    };\n\n    /*\\\n     * Raphael.createUUID\n     [ method ]\n     **\n     * Returns RFC4122, version 4 ID\n    \\*/\n    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\n        return function () {\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\n        };\n    })(/[xy]/g, function (c) {\n        var r = math.random() * 16 | 0,\n            v = c == \"x\" ? r : (r & 3 | 8);\n        return v.toString(16);\n    });\n\n    /*\\\n     * Raphael.setWindow\n     [ method ]\n     **\n     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\n     > Parameters\n     - newwin (window) new window object\n    \\*/\n    R.setWindow = function (newwin) {\n        eve(\"raphael.setWindow\", R, g.win, newwin);\n        g.win = newwin;\n        g.doc = g.win.document;\n        if (R._engine.initWin) {\n            R._engine.initWin(g.win);\n        }\n    };\n    var toHex = function (color) {\n        if (R.vml) {\n            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\n            var trim = /^\\s+|\\s+$/g;\n            var bod;\n            try {\n                var docum = new ActiveXObject(\"htmlfile\");\n                docum.write(\"<body>\");\n                docum.close();\n                bod = docum.body;\n            } catch(e) {\n                bod = createPopup().document.body;\n            }\n            var range = bod.createTextRange();\n            toHex = cacher(function (color) {\n                try {\n                    bod.style.color = Str(color).replace(trim, E);\n                    var value = range.queryCommandValue(\"ForeColor\");\n                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\n                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\n                } catch(e) {\n                    return \"none\";\n                }\n            });\n        } else {\n            var i = g.doc.createElement(\"i\");\n            i.title = \"Rapha\\xebl Colour Picker\";\n            i.style.display = \"none\";\n            g.doc.body.appendChild(i);\n            toHex = cacher(function (color) {\n                i.style.color = color;\n                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n            });\n        }\n        return toHex(color);\n    },\n    hsbtoString = function () {\n        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n    },\n    hsltoString = function () {\n        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n    },\n    rgbtoString = function () {\n        return this.hex;\n    },\n    prepareRGB = function (r, g, b) {\n        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n            b = r.b;\n            g = r.g;\n            r = r.r;\n        }\n        if (g == null && R.is(r, string)) {\n            var clr = R.getRGB(r);\n            r = clr.r;\n            g = clr.g;\n            b = clr.b;\n        }\n        if (r > 1 || g > 1 || b > 1) {\n            r /= 255;\n            g /= 255;\n            b /= 255;\n        }\n\n        return [r, g, b];\n    },\n    packageRGB = function (r, g, b, o) {\n        r *= 255;\n        g *= 255;\n        b *= 255;\n        var rgb = {\n            r: r,\n            g: g,\n            b: b,\n            hex: R.rgb(r, g, b),\n            toString: rgbtoString\n        };\n        R.is(o, \"finite\") && (rgb.opacity = o);\n        return rgb;\n    };\n\n    /*\\\n     * Raphael.color\n     [ method ]\n     **\n     * Parses the color string and returns object with all values for the given color.\n     > Parameters\n     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\n     = (object) Combined RGB & HSB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) `true` if string can’t be parsed,\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     v (number) value (brightness),\n     o     l (number) lightness\n     o }\n    \\*/\n    R.color = function (clr) {\n        var rgb;\n        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n            rgb = R.hsb2rgb(clr);\n            clr.r = rgb.r;\n            clr.g = rgb.g;\n            clr.b = rgb.b;\n            clr.hex = rgb.hex;\n        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n            rgb = R.hsl2rgb(clr);\n            clr.r = rgb.r;\n            clr.g = rgb.g;\n            clr.b = rgb.b;\n            clr.hex = rgb.hex;\n        } else {\n            if (R.is(clr, \"string\")) {\n                clr = R.getRGB(clr);\n            }\n            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\n                rgb = R.rgb2hsl(clr);\n                clr.h = rgb.h;\n                clr.s = rgb.s;\n                clr.l = rgb.l;\n                rgb = R.rgb2hsb(clr);\n                clr.v = rgb.b;\n            } else {\n                clr = {hex: \"none\"};\n                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            }\n        }\n        clr.toString = rgbtoString;\n        return clr;\n    };\n    /*\\\n     * Raphael.hsb2rgb\n     [ method ]\n     **\n     * Converts HSB values to RGB object.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - v (number) value or brightness\n     = (object) RGB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    R.hsb2rgb = function (h, s, v, o) {\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n            v = h.b;\n            s = h.s;\n            o = h.o;\n            h = h.h;\n        }\n        h *= 360;\n        var R, G, B, X, C;\n        h = (h % 360) / 60;\n        C = v * s;\n        X = C * (1 - abs(h % 2 - 1));\n        R = G = B = v - C;\n\n        h = ~~h;\n        R += [C, X, 0, 0, X, C][h];\n        G += [X, C, C, X, 0, 0][h];\n        B += [0, 0, X, C, C, X][h];\n        return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Raphael.hsl2rgb\n     [ method ]\n     **\n     * Converts HSL values to RGB object.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (object) RGB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    R.hsl2rgb = function (h, s, l, o) {\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n            l = h.l;\n            s = h.s;\n            h = h.h;\n        }\n        if (h > 1 || s > 1 || l > 1) {\n            h /= 360;\n            s /= 100;\n            l /= 100;\n        }\n        h *= 360;\n        var R, G, B, X, C;\n        h = (h % 360) / 60;\n        C = 2 * s * (l < .5 ? l : 1 - l);\n        X = C * (1 - abs(h % 2 - 1));\n        R = G = B = l - C / 2;\n\n        h = ~~h;\n        R += [C, X, 0, 0, X, C][h];\n        G += [X, C, C, X, 0, 0][h];\n        B += [0, 0, X, C, C, X][h];\n        return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Raphael.rgb2hsb\n     [ method ]\n     **\n     * Converts RGB values to HSB object.\n     > Parameters\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSB object in format:\n     o {\n     o     h (number) hue\n     o     s (number) saturation\n     o     b (number) brightness\n     o }\n    \\*/\n    R.rgb2hsb = function (r, g, b) {\n        b = prepareRGB(r, g, b);\n        r = b[0];\n        g = b[1];\n        b = b[2];\n\n        var H, S, V, C;\n        V = mmax(r, g, b);\n        C = V - mmin(r, g, b);\n        H = (C == 0 ? null :\n             V == r ? (g - b) / C :\n             V == g ? (b - r) / C + 2 :\n                      (r - g) / C + 4\n            );\n        H = ((H + 360) % 6) * 60 / 360;\n        S = C == 0 ? 0 : C / V;\n        return {h: H, s: S, b: V, toString: hsbtoString};\n    };\n    /*\\\n     * Raphael.rgb2hsl\n     [ method ]\n     **\n     * Converts RGB values to HSL object.\n     > Parameters\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSL object in format:\n     o {\n     o     h (number) hue\n     o     s (number) saturation\n     o     l (number) luminosity\n     o }\n    \\*/\n    R.rgb2hsl = function (r, g, b) {\n        b = prepareRGB(r, g, b);\n        r = b[0];\n        g = b[1];\n        b = b[2];\n\n        var H, S, L, M, m, C;\n        M = mmax(r, g, b);\n        m = mmin(r, g, b);\n        C = M - m;\n        H = (C == 0 ? null :\n             M == r ? (g - b) / C :\n             M == g ? (b - r) / C + 2 :\n                      (r - g) / C + 4);\n        H = ((H + 360) % 6) * 60 / 360;\n        L = (M + m) / 2;\n        S = (C == 0 ? 0 :\n             L < .5 ? C / (2 * L) :\n                      C / (2 - 2 * L));\n        return {h: H, s: S, l: L, toString: hsltoString};\n    };\n    R._path2string = function () {\n        return this.join(\",\").replace(p2s, \"$1\");\n    };\n    function repush(array, item) {\n        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n            return array.push(array.splice(i, 1)[0]);\n        }\n    }\n    function cacher(f, scope, postprocessor) {\n        function newf() {\n            var arg = Array.prototype.slice.call(arguments, 0),\n                args = arg.join(\"\\u2400\"),\n                cache = newf.cache = newf.cache || {},\n                count = newf.count = newf.count || [];\n            if (cache[has](args)) {\n                repush(count, args);\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\n            }\n            count.length >= 1e3 && delete cache[count.shift()];\n            count.push(args);\n            cache[args] = f[apply](scope, arg);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        return newf;\n    }\n\n    var preload = R._preload = function (src, f) {\n        var img = g.doc.createElement(\"img\");\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n        img.onload = function () {\n            f.call(this);\n            this.onload = null;\n            g.doc.body.removeChild(this);\n        };\n        img.onerror = function () {\n            g.doc.body.removeChild(this);\n        };\n        g.doc.body.appendChild(img);\n        img.src = src;\n    };\n\n    function clrToString() {\n        return this.hex;\n    }\n\n    /*\\\n     * Raphael.getRGB\n     [ method ]\n     **\n     * Parses colour string as RGB object\n     > Parameters\n     - colour (string) colour string in one of formats:\n     # <ul>\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsl(•••, •••, •••) — same as hsb</li>\n     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\n     # </ul>\n     = (object) RGB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) true if string can’t be parsed\n     o }\n    \\*/\n    R.getRGB = cacher(function (colour) {\n        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n        }\n        if (colour == \"none\") {\n            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\n        }\n        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n        var res,\n            red,\n            green,\n            blue,\n            opacity,\n            t,\n            values,\n            rgb = colour.match(colourRegExp);\n        if (rgb) {\n            if (rgb[2]) {\n                blue = toInt(rgb[2].substring(5), 16);\n                green = toInt(rgb[2].substring(3, 5), 16);\n                red = toInt(rgb[2].substring(1, 3), 16);\n            }\n            if (rgb[3]) {\n                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n                green = toInt((t = rgb[3].charAt(2)) + t, 16);\n                red = toInt((t = rgb[3].charAt(1)) + t, 16);\n            }\n            if (rgb[4]) {\n                values = rgb[4][split](commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            }\n            if (rgb[5]) {\n                values = rgb[5][split](commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n                return R.hsb2rgb(red, green, blue, opacity);\n            }\n            if (rgb[6]) {\n                values = rgb[6][split](commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n                return R.hsl2rgb(red, green, blue, opacity);\n            }\n            rgb = {r: red, g: green, b: blue, toString: clrToString};\n            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\n            return rgb;\n        }\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n    }, R);\n    /*\\\n     * Raphael.hsb\n     [ method ]\n     **\n     * Converts HSB values to hex representation of the colour.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - b (number) value or brightness\n     = (string) hex representation of the colour.\n    \\*/\n    R.hsb = cacher(function (h, s, b) {\n        return R.hsb2rgb(h, s, b).hex;\n    });\n    /*\\\n     * Raphael.hsl\n     [ method ]\n     **\n     * Converts HSL values to hex representation of the colour.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (string) hex representation of the colour.\n    \\*/\n    R.hsl = cacher(function (h, s, l) {\n        return R.hsl2rgb(h, s, l).hex;\n    });\n    /*\\\n     * Raphael.rgb\n     [ method ]\n     **\n     * Converts RGB values to hex representation of the colour.\n     > Parameters\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (string) hex representation of the colour.\n    \\*/\n    R.rgb = cacher(function (r, g, b) {\n        function round(x) { return (x + 0.5) | 0; }\n        return \"#\" + (16777216 | round(b) | (round(g) << 8) | (round(r) << 16)).toString(16).slice(1);\n    });\n    /*\\\n     * Raphael.getColor\n     [ method ]\n     **\n     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\n     > Parameters\n     - value (number) #optional brightness, default is `0.75`\n     = (string) hex representation of the colour.\n    \\*/\n    R.getColor = function (value) {\n        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\n            rgb = this.hsb2rgb(start.h, start.s, start.b);\n        start.h += .075;\n        if (start.h > 1) {\n            start.h = 0;\n            start.s -= .2;\n            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\n        }\n        return rgb.hex;\n    };\n    /*\\\n     * Raphael.getColor.reset\n     [ method ]\n     **\n     * Resets spectrum position for @Raphael.getColor back to red.\n    \\*/\n    R.getColor.reset = function () {\n        delete this.start;\n    };\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n    /*\\\n     * Raphael.parsePathString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of arrays of path segments.\n     > Parameters\n     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\n     = (array) array of segments.\n    \\*/\n    R.parsePathString = function (pathString) {\n        if (!pathString) {\n            return null;\n        }\n        var pth = paths(pathString);\n        if (pth.arr) {\n            return pathClone(pth.arr);\n        }\n\n        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\n            data = [];\n        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\n            data = pathClone(pathString);\n        }\n        if (!data.length) {\n            Str(pathString).replace(pathCommand, function (a, b, c) {\n                var params = [],\n                    name = b.toLowerCase();\n                c.replace(pathValues, function (a, b) {\n                    b && params.push(+b);\n                });\n                if (name == \"m\" && params.length > 2) {\n                    data.push([b][concat](params.splice(0, 2)));\n                    name = \"l\";\n                    b = b == \"m\" ? \"l\" : \"L\";\n                }\n                if (name == \"r\") {\n                    data.push([b][concat](params));\n                } else while (params.length >= paramCounts[name]) {\n                    data.push([b][concat](params.splice(0, paramCounts[name])));\n                    if (!paramCounts[name]) {\n                        break;\n                    }\n                }\n            });\n        }\n        data.toString = R._path2string;\n        pth.arr = pathClone(data);\n        return data;\n    };\n    /*\\\n     * Raphael.parseTransformString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of transformations.\n     > Parameters\n     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\n     = (array) array of transformations.\n    \\*/\n    R.parseTransformString = cacher(function (TString) {\n        if (!TString) {\n            return null;\n        }\n        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n            data = [];\n        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\n            data = pathClone(TString);\n        }\n        if (!data.length) {\n            Str(TString).replace(tCommand, function (a, b, c) {\n                var params = [],\n                    name = lowerCase.call(b);\n                c.replace(pathValues, function (a, b) {\n                    b && params.push(+b);\n                });\n                data.push([b][concat](params));\n            });\n        }\n        data.toString = R._path2string;\n        return data;\n    }, this, function(elem) {\n        if (!elem) return elem;\n        var newData = [];\n        for (var i = 0; i < elem.length; i++) {\n            var newLevel = [];\n            for (var j = 0; j < elem[i].length; j++) {\n                newLevel.push(elem[i][j]);\n            }\n            newData.push(newLevel);\n        }\n      return newData; } );\n    // PATHS\n    var paths = function (ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    };\n    /*\\\n     * Raphael.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Find dot coordinates on the given cubic bezier curve at the given t.\n     > Parameters\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point\n     o     y: (number) y coordinate of the point\n     o     m: {\n     o         x: (number) x coordinate of the left anchor\n     o         y: (number) y coordinate of the left anchor\n     o     }\n     o     n: {\n     o         x: (number) x coordinate of the right anchor\n     o         y: (number) y coordinate of the right anchor\n     o     }\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve\n     o         y: (number) y coordinate of the start of the curve\n     o     }\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve\n     o         y: (number) y coordinate of the end of the curve\n     o     }\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n        (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    };\n    /*\\\n     * Raphael.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Return bounding box of a given cubic bezier curve\n     > Parameters\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for bezier curve\n     = (object) point information in format:\n     o {\n     o     min: {\n     o         x: (number) x coordinate of the left point\n     o         y: (number) y coordinate of the top point\n     o     }\n     o     max: {\n     o         x: (number) x coordinate of the right point\n     o         y: (number) y coordinate of the bottom point\n     o     }\n     o }\n    \\*/\n    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!R.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return {\n            x: bbox.min.x,\n            y: bbox.min.y,\n            x2: bbox.max.x,\n            y2: bbox.max.y,\n            width: bbox.max.x - bbox.min.x,\n            height: bbox.max.y - bbox.min.y\n        };\n    };\n    /*\\\n     * Raphael.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding boxes.\n     > Parameters\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point inside\n    \\*/\n    R.isPointInsideBBox = function (bbox, x, y) {\n        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\n    };\n    /*\\\n     * Raphael.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     > Parameters\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if they intersect\n    \\*/\n    R.isBBoxIntersect = function (bbox1, bbox2) {\n        var i = R.isPointInsideBBox;\n        return i(bbox2, bbox1.x, bbox1.y)\n            || i(bbox2, bbox1.x2, bbox1.y)\n            || i(bbox2, bbox1.x, bbox1.y2)\n            || i(bbox2, bbox1.x2, bbox1.y2)\n            || i(bbox1, bbox2.x, bbox2.y)\n            || i(bbox1, bbox2.x2, bbox2.y)\n            || i(bbox1, bbox2.x, bbox2.y2)\n            || i(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    };\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = R.bezierBBox(bez1),\n            bbox2 = R.bezierBBox(bez2);\n        if (!R.isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = mmax(~~(l1 / 5), 1),\n            n2 = mmax(~~(l2 / 5), 1),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: mmin(t1, 1),\n                                t2: mmin(t2, 1)\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    /*\\\n     * Raphael.pathIntersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     > Parameters\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point\n     o         y: (number) y coordinate of the point\n     o         t1: (number) t value for segment of path1\n     o         t2: (number) t value for segment of path2\n     o         segment1: (number) order number for segment of path1\n     o         segment2: (number) order number for segment of path2\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    R.pathIntersection = function (path1, path2) {\n        return interPathHelper(path1, path2);\n    };\n    R.pathIntersectionNumber = function (path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    };\n    function interPathHelper(path1, path2, justCount) {\n        path1 = R._path2curve(path1);\n        path2 = R._path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    /*\\\n     * Raphael.isPointInsidePath\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     > Parameters\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) true, if point is inside the path\n    \\*/\n    R.isPointInsidePath = function (path, x, y) {\n        var bbox = R.pathBBox(path);\n        return R.isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    };\n    R._removedFactory = function (methodname) {\n        return function () {\n            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\n        };\n    };\n    /*\\\n     * Raphael.pathBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Return bounding box of a given path\n     > Parameters\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box\n     o     y: (number) y coordinate of the left top point of the box\n     o     x2: (number) x coordinate of the right bottom point of the box\n     o     y2: (number) y coordinate of the right bottom point of the box\n     o     width: (number) width of the box\n     o     height: (number) height of the box\n     o     cx: (number) x coordinate of the center of the box\n     o     cy: (number) y coordinate of the center of the box\n     o }\n    \\*/\n    var pathDimensions = R.pathBBox = function (path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X[concat](dim.min.x, dim.max.x);\n                Y = Y[concat](dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin[apply](0, X),\n            ymin = mmin[apply](0, Y),\n            xmax = mmax[apply](0, X),\n            ymax = mmax[apply](0, Y),\n            width = xmax - xmin,\n            height = ymax - ymin,\n                bb = {\n                x: xmin,\n                y: ymin,\n                x2: xmax,\n                y2: ymax,\n                width: width,\n                height: height,\n                cx: xmin + width / 2,\n                cy: ymin + height / 2\n            };\n        pth.bbox = clone(bb);\n        return bb;\n    },\n        pathClone = function (pathArray) {\n            var res = clone(pathArray);\n            res.toString = R._path2string;\n            return res;\n        },\n        pathToRelative = R._pathToRelative = function (pathArray) {\n            var pth = paths(pathArray);\n            if (pth.rel) {\n                return pathClone(pth.rel);\n            }\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n                pathArray = R.parsePathString(pathArray);\n            }\n            var res = [],\n                x = 0,\n                y = 0,\n                mx = 0,\n                my = 0,\n                start = 0;\n            if (pathArray[0][0] == \"M\") {\n                x = pathArray[0][1];\n                y = pathArray[0][2];\n                mx = x;\n                my = y;\n                start++;\n                res.push([\"M\", x, y]);\n            }\n            for (var i = start, ii = pathArray.length; i < ii; i++) {\n                var r = res[i] = [],\n                    pa = pathArray[i];\n                if (pa[0] != lowerCase.call(pa[0])) {\n                    r[0] = lowerCase.call(pa[0]);\n                    switch (r[0]) {\n                        case \"a\":\n                            r[1] = pa[1];\n                            r[2] = pa[2];\n                            r[3] = pa[3];\n                            r[4] = pa[4];\n                            r[5] = pa[5];\n                            r[6] = +(pa[6] - x).toFixed(3);\n                            r[7] = +(pa[7] - y).toFixed(3);\n                            break;\n                        case \"v\":\n                            r[1] = +(pa[1] - y).toFixed(3);\n                            break;\n                        case \"m\":\n                            mx = pa[1];\n                            my = pa[2];\n                        default:\n                            for (var j = 1, jj = pa.length; j < jj; j++) {\n                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n                            }\n                    }\n                } else {\n                    r = res[i] = [];\n                    if (pa[0] == \"m\") {\n                        mx = pa[1] + x;\n                        my = pa[2] + y;\n                    }\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\n                        res[i][k] = pa[k];\n                    }\n                }\n                var len = res[i].length;\n                switch (res[i][0]) {\n                    case \"z\":\n                        x = mx;\n                        y = my;\n                        break;\n                    case \"h\":\n                        x += +res[i][len - 1];\n                        break;\n                    case \"v\":\n                        y += +res[i][len - 1];\n                        break;\n                    default:\n                        x += +res[i][len - 2];\n                        y += +res[i][len - 1];\n                }\n            }\n            res.toString = R._path2string;\n            pth.rel = pathClone(res);\n            return res;\n        },\n        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\n            var pth = paths(pathArray);\n            if (pth.abs) {\n                return pathClone(pth.abs);\n            }\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n                pathArray = R.parsePathString(pathArray);\n            }\n            if (!pathArray || !pathArray.length) {\n                return [[\"M\", 0, 0]];\n            }\n            var res = [],\n                x = 0,\n                y = 0,\n                mx = 0,\n                my = 0,\n                start = 0;\n            if (pathArray[0][0] == \"M\") {\n                x = +pathArray[0][1];\n                y = +pathArray[0][2];\n                mx = x;\n                my = y;\n                start++;\n                res[0] = [\"M\", x, y];\n            }\n            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n                res.push(r = []);\n                pa = pathArray[i];\n                if (pa[0] != upperCase.call(pa[0])) {\n                    r[0] = upperCase.call(pa[0]);\n                    switch (r[0]) {\n                        case \"A\":\n                            r[1] = pa[1];\n                            r[2] = pa[2];\n                            r[3] = pa[3];\n                            r[4] = pa[4];\n                            r[5] = pa[5];\n                            r[6] = +(pa[6] + x);\n                            r[7] = +(pa[7] + y);\n                            break;\n                        case \"V\":\n                            r[1] = +pa[1] + y;\n                            break;\n                        case \"H\":\n                            r[1] = +pa[1] + x;\n                            break;\n                        case \"R\":\n                            var dots = [x, y][concat](pa.slice(1));\n                            for (var j = 2, jj = dots.length; j < jj; j++) {\n                                dots[j] = +dots[j] + x;\n                                dots[++j] = +dots[j] + y;\n                            }\n                            res.pop();\n                            res = res[concat](catmullRom2bezier(dots, crz));\n                            break;\n                        case \"M\":\n                            mx = +pa[1] + x;\n                            my = +pa[2] + y;\n                        default:\n                            for (j = 1, jj = pa.length; j < jj; j++) {\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\n                            }\n                    }\n                } else if (pa[0] == \"R\") {\n                    dots = [x, y][concat](pa.slice(1));\n                    res.pop();\n                    res = res[concat](catmullRom2bezier(dots, crz));\n                    r = [\"R\"][concat](pa.slice(-2));\n                } else {\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\n                        r[k] = pa[k];\n                    }\n                }\n                switch (r[0]) {\n                    case \"Z\":\n                        x = mx;\n                        y = my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n            res.toString = R._path2string;\n            pth.abs = pathClone(res);\n            return res;\n        },\n        l2c = function (x1, y1, x2, y2) {\n            return [x1, y1, x2, y2, x2, y2];\n        },\n        q2c = function (x1, y1, ax, ay, x2, y2) {\n            var _13 = 1 / 3,\n                _23 = 2 / 3;\n            return [\n                    _13 * x1 + _23 * ax,\n                    _13 * y1 + _23 * ay,\n                    _13 * x2 + _23 * ax,\n                    _13 * y2 + _23 * ay,\n                    x2,\n                    y2\n                ];\n        },\n        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n            // for more information of where this math came from visit:\n            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n            var _120 = PI * 120 / 180,\n                rad = PI / 180 * (+angle || 0),\n                res = [],\n                xy,\n                rotate = cacher(function (x, y, rad) {\n                    var X = x * math.cos(rad) - y * math.sin(rad),\n                        Y = x * math.sin(rad) + y * math.cos(rad);\n                    return {x: X, y: Y};\n                });\n            if (!recursive) {\n                xy = rotate(x1, y1, -rad);\n                x1 = xy.x;\n                y1 = xy.y;\n                xy = rotate(x2, y2, -rad);\n                x2 = xy.x;\n                y2 = xy.y;\n                var cos = math.cos(PI / 180 * angle),\n                    sin = math.sin(PI / 180 * angle),\n                    x = (x1 - x2) / 2,\n                    y = (y1 - y2) / 2;\n                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n                if (h > 1) {\n                    h = math.sqrt(h);\n                    rx = h * rx;\n                    ry = h * ry;\n                }\n                var rx2 = rx * rx,\n                    ry2 = ry * ry,\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\n                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n                f1 = x1 < cx ? PI - f1 : f1;\n                f2 = x2 < cx ? PI - f2 : f2;\n                f1 < 0 && (f1 = PI * 2 + f1);\n                f2 < 0 && (f2 = PI * 2 + f2);\n                if (sweep_flag && f1 > f2) {\n                    f1 = f1 - PI * 2;\n                }\n                if (!sweep_flag && f2 > f1) {\n                    f2 = f2 - PI * 2;\n                }\n            } else {\n                f1 = recursive[0];\n                f2 = recursive[1];\n                cx = recursive[2];\n                cy = recursive[3];\n            }\n            var df = f2 - f1;\n            if (abs(df) > _120) {\n                var f2old = f2,\n                    x2old = x2,\n                    y2old = y2;\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n                x2 = cx + rx * math.cos(f2);\n                y2 = cy + ry * math.sin(f2);\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n            }\n            df = f2 - f1;\n            var c1 = math.cos(f1),\n                s1 = math.sin(f1),\n                c2 = math.cos(f2),\n                s2 = math.sin(f2),\n                t = math.tan(df / 4),\n                hx = 4 / 3 * rx * t,\n                hy = 4 / 3 * ry * t,\n                m1 = [x1, y1],\n                m2 = [x1 + hx * s1, y1 - hy * c1],\n                m3 = [x2 + hx * s2, y2 - hy * c2],\n                m4 = [x2, y2];\n            m2[0] = 2 * m1[0] - m2[0];\n            m2[1] = 2 * m1[1] - m2[1];\n            if (recursive) {\n                return [m2, m3, m4][concat](res);\n            } else {\n                res = [m2, m3, m4][concat](res).join()[split](\",\");\n                var newres = [];\n                for (var i = 0, ii = res.length; i < ii; i++) {\n                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n                }\n                return newres;\n            }\n        },\n        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n            var t1 = 1 - t;\n            return {\n                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n            };\n        },\n        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\n                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\n                c = p1x - c1x,\n                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\n                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\n                y = [p1y, p2y],\n                x = [p1x, p2x],\n                dot;\n            abs(t1) > \"1e12\" && (t1 = .5);\n            abs(t2) > \"1e12\" && (t2 = .5);\n            if (t1 > 0 && t1 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            if (t2 > 0 && t2 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\n            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\n            c = p1y - c1y;\n            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\n            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\n            abs(t1) > \"1e12\" && (t1 = .5);\n            abs(t2) > \"1e12\" && (t2 = .5);\n            if (t1 > 0 && t1 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            if (t2 > 0 && t2 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            return {\n                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\n                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\n            };\n        }),\n        path2curve = R._path2curve = cacher(function (path, path2) {\n            var pth = !path2 && paths(path);\n            if (!path2 && pth.curve) {\n                return pathClone(pth.curve);\n            }\n            var p = pathToAbsolute(path),\n                p2 = path2 && pathToAbsolute(path2),\n                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n                processPath = function (path, d, pcom) {\n                    var nx, ny, tq = {T:1, Q:1};\n                    if (!path) {\n                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                    }\n                    !(path[0] in tq) && (d.qx = d.qy = null);\n                    switch (path[0]) {\n                        case \"M\":\n                            d.X = path[1];\n                            d.Y = path[2];\n                            break;\n                        case \"A\":\n                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\n                            break;\n                        case \"S\":\n                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                                nx = d.x * 2 - d.bx;          // And reflect the previous\n                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                            }\n                            else {                            // or some else or nothing\n                                nx = d.x;\n                                ny = d.y;\n                            }\n                            path = [\"C\", nx, ny][concat](path.slice(1));\n                            break;\n                        case \"T\":\n                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                            }\n                            else {                            // or something else or nothing\n                                d.qx = d.x;\n                                d.qy = d.y;\n                            }\n                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                            break;\n                        case \"Q\":\n                            d.qx = path[1];\n                            d.qy = path[2];\n                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                            break;\n                        case \"L\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\n                            break;\n                        case \"H\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\n                            break;\n                        case \"V\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\n                            break;\n                        case \"Z\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\n                            break;\n                    }\n                    return path;\n                },\n                fixArc = function (pp, i) {\n                    if (pp[i].length > 7) {\n                        pp[i].shift();\n                        var pi = pp[i];\n                        while (pi.length) {\n                            pcoms1[i]=\"A\"; // if created multiple C:s, their original seg is saved\n                            p2 && (pcoms2[i]=\"A\"); // the same as above\n                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\n                        }\n                        pp.splice(i, 1);\n                        ii = mmax(p.length, p2 && p2.length || 0);\n                    }\n                },\n                fixM = function (path1, path2, a1, a2, i) {\n                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                        a1.bx = 0;\n                        a1.by = 0;\n                        a1.x = path1[i][1];\n                        a1.y = path1[i][2];\n                        ii = mmax(p.length, p2 && p2.length || 0);\n                    }\n                },\n                pcoms1 = [], // path commands of original path p\n                pcoms2 = [], // path commands of original path p2\n                pfirst = \"\", // temporary holder for original path command\n                pcom = \"\"; // holder for previous path command of original path\n            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n                p[i] && (pfirst = p[i][0]); // save current path command\n\n                if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n                {\n                    pcoms1[i] = pfirst; // Save current path command\n                    i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\n                }\n                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n                if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n                // which may produce multiple C:s\n                // so we have to make sure that C is also C in original path\n\n                fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n                if (p2) { // the same procedures is done to p2\n                    p2[i] && (pfirst = p2[i][0]);\n                    if (pfirst != \"C\")\n                    {\n                        pcoms2[i] = pfirst;\n                        i && (pcom = pcoms2[i-1]);\n                    }\n                    p2[i] = processPath(p2[i], attrs2, pcom);\n\n                    if (pcoms2[i]!=\"A\" && pfirst==\"C\") pcoms2[i]=\"C\";\n\n                    fixArc(p2, i);\n                }\n                fixM(p, p2, attrs, attrs2, i);\n                fixM(p2, p, attrs2, attrs, i);\n                var seg = p[i],\n                    seg2 = p2 && p2[i],\n                    seglen = seg.length,\n                    seg2len = p2 && seg2.length;\n                attrs.x = seg[seglen - 2];\n                attrs.y = seg[seglen - 1];\n                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n                attrs2.x = p2 && seg2[seg2len - 2];\n                attrs2.y = p2 && seg2[seg2len - 1];\n            }\n            if (!p2) {\n                pth.curve = pathClone(p);\n            }\n            return p2 ? [p, p2] : p;\n        }, null, pathClone),\n        parseDots = R._parseDots = cacher(function (gradient) {\n            var dots = [];\n            for (var i = 0, ii = gradient.length; i < ii; i++) {\n                var dot = {},\n                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\n                dot.color = R.getRGB(par[1]);\n                if (dot.color.error) {\n                    return null;\n                }\n                dot.opacity = dot.color.opacity;\n                dot.color = dot.color.hex;\n                par[2] && (dot.offset = par[2] + \"%\");\n                dots.push(dot);\n            }\n            for (i = 1, ii = dots.length - 1; i < ii; i++) {\n                if (!dots[i].offset) {\n                    var start = toFloat(dots[i - 1].offset || 0),\n                        end = 0;\n                    for (var j = i + 1; j < ii; j++) {\n                        if (dots[j].offset) {\n                            end = dots[j].offset;\n                            break;\n                        }\n                    }\n                    if (!end) {\n                        end = 100;\n                        j = ii;\n                    }\n                    end = toFloat(end);\n                    var d = (end - start) / (j - i + 1);\n                    for (; i < j; i++) {\n                        start += d;\n                        dots[i].offset = start + \"%\";\n                    }\n                }\n            }\n            return dots;\n        }),\n        tear = R._tear = function (el, paper) {\n            el == paper.top && (paper.top = el.prev);\n            el == paper.bottom && (paper.bottom = el.next);\n            el.next && (el.next.prev = el.prev);\n            el.prev && (el.prev.next = el.next);\n        },\n        tofront = R._tofront = function (el, paper) {\n            if (paper.top === el) {\n                return;\n            }\n            tear(el, paper);\n            el.next = null;\n            el.prev = paper.top;\n            paper.top.next = el;\n            paper.top = el;\n        },\n        toback = R._toback = function (el, paper) {\n            if (paper.bottom === el) {\n                return;\n            }\n            tear(el, paper);\n            el.next = paper.bottom;\n            el.prev = null;\n            paper.bottom.prev = el;\n            paper.bottom = el;\n        },\n        insertafter = R._insertafter = function (el, el2, paper) {\n            tear(el, paper);\n            el2 == paper.top && (paper.top = el);\n            el2.next && (el2.next.prev = el);\n            el.next = el2.next;\n            el.prev = el2;\n            el2.next = el;\n        },\n        insertbefore = R._insertbefore = function (el, el2, paper) {\n            tear(el, paper);\n            el2 == paper.bottom && (paper.bottom = el);\n            el2.prev && (el2.prev.next = el);\n            el.prev = el2.prev;\n            el2.prev = el;\n            el.next = el2;\n        },\n        /*\\\n         * Raphael.toMatrix\n         [ method ]\n         **\n         * Utility method\n         **\n         * Returns matrix of transformations applied to a given path\n         > Parameters\n         - path (string) path string\n         - transform (string|array) transformation string\n         = (object) @Matrix\n        \\*/\n        toMatrix = R.toMatrix = function (path, transform) {\n            var bb = pathDimensions(path),\n                el = {\n                    _: {\n                        transform: E\n                    },\n                    getBBox: function () {\n                        return bb;\n                    }\n                };\n            extractTransform(el, transform);\n            return el.matrix;\n        },\n        /*\\\n         * Raphael.transformPath\n         [ method ]\n         **\n         * Utility method\n         **\n         * Returns path transformed by a given transformation\n         > Parameters\n         - path (string) path string\n         - transform (string|array) transformation string\n         = (string) path\n        \\*/\n        transformPath = R.transformPath = function (path, transform) {\n            return mapPath(path, toMatrix(path, transform));\n        },\n        extractTransform = R._extractTransform = function (el, tstr) {\n            if (tstr == null) {\n                return el._.transform;\n            }\n            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n            var tdata = R.parseTransformString(tstr),\n                deg = 0,\n                dx = 0,\n                dy = 0,\n                sx = 1,\n                sy = 1,\n                _ = el._,\n                m = new Matrix;\n            _.transform = tdata || [];\n            if (tdata) {\n                for (var i = 0, ii = tdata.length; i < ii; i++) {\n                    var t = tdata[i],\n                        tlen = t.length,\n                        command = Str(t[0]).toLowerCase(),\n                        absolute = t[0] != command,\n                        inver = absolute ? m.invert() : 0,\n                        x1,\n                        y1,\n                        x2,\n                        y2,\n                        bb;\n                    if (command == \"t\" && tlen == 3) {\n                        if (absolute) {\n                            x1 = inver.x(0, 0);\n                            y1 = inver.y(0, 0);\n                            x2 = inver.x(t[1], t[2]);\n                            y2 = inver.y(t[1], t[2]);\n                            m.translate(x2 - x1, y2 - y1);\n                        } else {\n                            m.translate(t[1], t[2]);\n                        }\n                    } else if (command == \"r\") {\n                        if (tlen == 2) {\n                            bb = bb || el.getBBox(1);\n                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                            deg += t[1];\n                        } else if (tlen == 4) {\n                            if (absolute) {\n                                x2 = inver.x(t[2], t[3]);\n                                y2 = inver.y(t[2], t[3]);\n                                m.rotate(t[1], x2, y2);\n                            } else {\n                                m.rotate(t[1], t[2], t[3]);\n                            }\n                            deg += t[1];\n                        }\n                    } else if (command == \"s\") {\n                        if (tlen == 2 || tlen == 3) {\n                            bb = bb || el.getBBox(1);\n                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                            sx *= t[1];\n                            sy *= t[tlen - 1];\n                        } else if (tlen == 5) {\n                            if (absolute) {\n                                x2 = inver.x(t[3], t[4]);\n                                y2 = inver.y(t[3], t[4]);\n                                m.scale(t[1], t[2], x2, y2);\n                            } else {\n                                m.scale(t[1], t[2], t[3], t[4]);\n                            }\n                            sx *= t[1];\n                            sy *= t[2];\n                        }\n                    } else if (command == \"m\" && tlen == 7) {\n                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n                    }\n                    _.dirtyT = 1;\n                    el.matrix = m;\n                }\n            }\n\n            /*\\\n             * Element.matrix\n             [ property (object) ]\n             **\n             * Keeps @Matrix object, which represents element transformation\n            \\*/\n            el.matrix = m;\n\n            _.sx = sx;\n            _.sy = sy;\n            _.deg = deg;\n            _.dx = dx = m.e;\n            _.dy = dy = m.f;\n\n            if (sx == 1 && sy == 1 && !deg && _.bbox) {\n                _.bbox.x += +dx;\n                _.bbox.y += +dy;\n            } else {\n                _.dirtyT = 1;\n            }\n        },\n        getEmpty = function (item) {\n            var l = item[0];\n            switch (l.toLowerCase()) {\n                case \"t\": return [l, 0, 0];\n                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n                case \"r\": if (item.length == 4) {\n                    return [l, 0, item[2], item[3]];\n                } else {\n                    return [l, 0];\n                }\n                case \"s\": if (item.length == 5) {\n                    return [l, 1, 1, item[3], item[4]];\n                } else if (item.length == 3) {\n                    return [l, 1, 1];\n                } else {\n                    return [l, 1];\n                }\n            }\n        },\n        equaliseTransform = R._equaliseTransform = function (t1, t2) {\n            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n            t1 = R.parseTransformString(t1) || [];\n            t2 = R.parseTransformString(t2) || [];\n            var maxlength = mmax(t1.length, t2.length),\n                from = [],\n                to = [],\n                i = 0, j, jj,\n                tt1, tt2;\n            for (; i < maxlength; i++) {\n                tt1 = t1[i] || getEmpty(t2[i]);\n                tt2 = t2[i] || getEmpty(tt1);\n                if ((tt1[0] != tt2[0]) ||\n                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n                    ) {\n                    return;\n                }\n                from[i] = [];\n                to[i] = [];\n                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\n                    j in tt1 && (from[i][j] = tt1[j]);\n                    j in tt2 && (to[i][j] = tt2[j]);\n                }\n            }\n            return {\n                from: from,\n                to: to\n            };\n        };\n    R._getContainer = function (x, y, w, h) {\n        var container;\n        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\n        if (container == null) {\n            return;\n        }\n        if (container.tagName) {\n            if (y == null) {\n                return {\n                    container: container,\n                    width: container.style.pixelWidth || container.offsetWidth,\n                    height: container.style.pixelHeight || container.offsetHeight\n                };\n            } else {\n                return {\n                    container: container,\n                    width: y,\n                    height: w\n                };\n            }\n        }\n        return {\n            container: 1,\n            x: x,\n            y: y,\n            width: w,\n            height: h\n        };\n    };\n    /*\\\n     * Raphael.pathToRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to relative form\n     > Parameters\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments.\n    \\*/\n    R.pathToRelative = pathToRelative;\n    R._engine = {};\n    /*\\\n     * Raphael.path2curve\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic bezier curves.\n     > Parameters\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments.\n    \\*/\n    R.path2curve = path2curve;\n    /*\\\n     * Raphael.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns matrix based on given parameters.\n     > Parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     = (object) @Matrix\n    \\*/\n    R.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n    function Matrix(a, b, c, d, e, f) {\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds given matrix to existing one.\n         > Parameters\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            var out = [[], [], []],\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n                x, y, z, res;\n\n            if (a && a instanceof Matrix) {\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n            }\n\n            for (x = 0; x < 3; x++) {\n                for (y = 0; y < 3; y++) {\n                    res = 0;\n                    for (z = 0; z < 3; z++) {\n                        res += m[x][z] * matrix[z][y];\n                    }\n                    out[x][y] = res;\n                }\n            }\n            this.a = out[0][0];\n            this.b = out[1][0];\n            this.c = out[0][1];\n            this.d = out[1][1];\n            this.e = out[0][2];\n            this.f = out[1][2];\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         > Parameters\n         - x (number)\n         - y (number)\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.add(1, 0, 0, 1, x, y);\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         > Parameters\n         - x (number)\n         - y (number) #optional\n         - cx (number) #optional\n         - cy (number) #optional\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n            this.add(x, 0, 0, y, 0, 0);\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         > Parameters\n         - a (number)\n         - x (number)\n         - y (number)\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = R.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         > Parameters\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         > Parameters\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return R.svg ?\n                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\n                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\n        };\n        matrixproto.toFilter = function () {\n            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\n                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\n                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.c], [this.b, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            // rotation\n            var sin = -row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = R.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = R.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Return transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this[split]();\n            if (s.isSimple) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n\n    var preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    getEventPosition = function (e) {\n        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n\n        return {\n            x: e.clientX + scrollX,\n            y: e.clientY + scrollY\n        };\n    },\n    addEvent = (function () {\n        if (g.doc.addEventListener) {\n            return function (obj, type, fn, element) {\n                var f = function (e) {\n                    var pos = getEventPosition(e);\n                    return fn.call(element, e, pos.x, pos.y);\n                };\n                obj.addEventListener(type, f, false);\n\n                if (supportsTouch && touchMap[type]) {\n                    var _f = function (e) {\n                        var pos = getEventPosition(e),\n                            olde = e;\n\n                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                            if (e.targetTouches[i].target == obj) {\n                                e = e.targetTouches[i];\n                                e.originalEvent = olde;\n                                e.preventDefault = preventTouch;\n                                e.stopPropagation = stopTouch;\n                                break;\n                            }\n                        }\n\n                        return fn.call(element, e, pos.x, pos.y);\n                    };\n                    obj.addEventListener(touchMap[type], _f, false);\n                }\n\n                return function () {\n                    obj.removeEventListener(type, f, false);\n\n                    if (supportsTouch && touchMap[type])\n                        obj.removeEventListener(touchMap[type], _f, false);\n\n                    return true;\n                };\n            };\n        } else if (g.doc.attachEvent) {\n            return function (obj, type, fn, element) {\n                var f = function (e) {\n                    e = e || g.win.event;\n                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n                        x = e.clientX + scrollX,\n                        y = e.clientY + scrollY;\n                    e.preventDefault = e.preventDefault || preventDefault;\n                    e.stopPropagation = e.stopPropagation || stopPropagation;\n                    return fn.call(element, e, x, y);\n                };\n                obj.attachEvent(\"on\" + type, f);\n                var detacher = function () {\n                    obj.detachEvent(\"on\" + type, f);\n                    return true;\n                };\n                return detacher;\n            };\n        }\n    })(),\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch && e.touches) {\n                var i = e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            g.win.opera && parent.removeChild(node);\n            node.style.display = \"none\";\n            o = dragi.el.paper.getElementByPoint(x, y);\n            node.style.display = display;\n            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        R.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n        }\n        drag = [];\n    },\n    /*\\\n     * Raphael.el\n     [ property (object) ]\n     **\n     * You can add your own method to elements. This is useful when you want to hack default functionality or\n     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\n     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\n     > Usage\n     | Raphael.el.red = function () {\n     |     this.attr({fill: \"#f00\"});\n     | };\n     | // then use it\n     | paper.circle(100, 100, 20).red();\n    \\*/\n    elproto = R.el = {};\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds event handler for click for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes event handler for click for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds event handler for double click for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes event handler for double click for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds event handler for mousedown for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes event handler for mousedown for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds event handler for mousemove for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes event handler for mousemove for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds event handler for mouseout for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes event handler for mouseout for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds event handler for mouseover for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes event handler for mouseover for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds event handler for mouseup for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes event handler for mouseup for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds event handler for touchstart for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes event handler for touchstart for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds event handler for touchmove for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes event handler for touchmove for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds event handler for touchend for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes event handler for touchend for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds event handler for touchcancel for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes event handler for touchcancel for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            R[eventName] = elproto[eventName] = function (fn, scope) {\n                if (R.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\n                }\n                return this;\n            };\n            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--){\n                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\n                        events[l].unbind();\n                        events.splice(l, 1);\n                        !events.length && delete this.events;\n                    }\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key.\n     **\n     * See also @Element.removeData\n     > Parameters\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     * or, if key and value are not specified:\n     = (object) Key/value pairs for all the data associated with the element.\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0) {\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (R.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"raphael.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     > Parameters\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            delete eldata[this.id];\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n     /*\\\n     * Element.getData\n     [ method ]\n     **\n     * Retrieves the element data\n     = (object) data\n    \\*/\n    elproto.getData = function () {\n        return clone(eldata[this.id] || {});\n    };\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds event handlers for hover for the element.\n     > Parameters\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes event handlers for hover for the element.\n     > Parameters\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for drag of the element.\n     > Parameters\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionally following `drag` events will be triggered: `drag.start.<id>` on start,\n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\n     * `drag.over.<id>` will be fired as well.\n     *\n     * Start event and start handler will be called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler will be called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler will be called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        function start(e) {\n            (e.originalEvent || e).preventDefault();\n            var x = e.clientX,\n                y = e.clientY,\n                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n            this._drag.id = e.identifier;\n            if (supportsTouch && e.touches) {\n                var i = e.touches.length, touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    this._drag.id = touch.identifier;\n                    if (touch.identifier == this._drag.id) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        break;\n                    }\n                }\n            }\n            this._drag.x = x + scrollX;\n            this._drag.y = y + scrollY;\n            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\n            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\n            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\n            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, this._drag.x, this._drag.y, e);\n        }\n        this._drag = {};\n        draggable.push({el: this, start: start});\n        this.mousedown(start);\n        return this;\n    };\n    /*\\\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\n     > Parameters\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    elproto.onDragOver = function (f) {\n        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\n    };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from given element.\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].start);\n            draggable.splice(i, 1);\n            eve.unbind(\"raphael.drag.*.\" + this.id);\n        }\n        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\n        drag = [];\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) Raphaël element object with type “circle”\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    paperproto.circle = function (x, y, r) {\n        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - r (number) #optional radius for rounded corners, default is 0\n     = (object) Raphaël element object with type “rect”\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    paperproto.rect = function (x, y, w, h, r) {\n        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) Raphaël element object with type “ellipse”\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    paperproto.ellipse = function (x, y, rx, ry) {\n        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a path element by given path data string.\n     > Parameters\n     - pathString (string) #optional path string in SVG format.\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\n     | \"M10,20L30,40\"\n     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\n     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\n    \\*/\n    paperproto.path = function (pathString) {\n        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\n        var out = R._engine.path(R.format[apply](R, arguments), this);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Embeds an image into the surface.\n     **\n     > Parameters\n     **\n     - src (string) URI of the source image\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) Raphaël element object with type “image”\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    paperproto.image = function (src, x, y, w, h) {\n        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string. If you need line breaks, put “\\n” in the string.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string) The text string to draw\n     = (object) Raphaël element object with type “text”\n     **\n     > Usage\n     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\n    \\*/\n    paperproto.text = function (x, y, text) {\n        var out = R._engine.text(this, x || 0, y || 0, Str(text));\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.set\n     [ method ]\n     **\n     * Creates array-like object to keep and operate several elements at once.\n     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\n     * Sets act as pseudo elements — all methods available to an element can be used on a set.\n     = (object) array-like object that represents set of elements\n     **\n     > Usage\n     | var st = paper.set();\n     | st.push(\n     |     paper.circle(10, 10, 5),\n     |     paper.circle(30, 10, 5)\n     | );\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\n    \\*/\n    paperproto.set = function (itemsArray) {\n        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\n        var out = new Set(itemsArray);\n        this.__set__ && this.__set__.push(out);\n        out[\"paper\"] = this;\n        out[\"type\"] = \"set\";\n        return out;\n    };\n    /*\\\n     * Paper.setStart\n     [ method ]\n     **\n     * Creates @Paper.set. All elements that will be created after calling this method and before calling\n     * @Paper.setFinish will be added to the set.\n     **\n     > Usage\n     | paper.setStart();\n     | paper.circle(10, 10, 5),\n     | paper.circle(30, 10, 5)\n     | var st = paper.setFinish();\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\n    \\*/\n    paperproto.setStart = function (set) {\n        this.__set__ = set || this.set();\n    };\n    /*\\\n     * Paper.setFinish\n     [ method ]\n     **\n     * See @Paper.setStart. This method finishes catching and returns resulting set.\n     **\n     = (object) set\n    \\*/\n    paperproto.setFinish = function (set) {\n        var out = this.__set__;\n        delete this.__set__;\n        return out;\n    };\n    /*\\\n     * Paper.getSize\n     [ method ]\n     **\n     * Obtains current paper actual size.\n     **\n     = (object)\n     \\*/\n    paperproto.getSize = function () {\n        var container = this.canvas.parentNode;\n        return {\n            width: container.offsetWidth,\n            height: container.offsetHeight\n                };\n        };\n    /*\\\n     * Paper.setSize\n     [ method ]\n     **\n     * If you need to change dimensions of the canvas call this method\n     **\n     > Parameters\n     **\n     - width (number) new width of the canvas\n     - height (number) new height of the canvas\n    \\*/\n    paperproto.setSize = function (width, height) {\n        return R._engine.setSize.call(this, width, height);\n    };\n    /*\\\n     * Paper.setViewBox\n     [ method ]\n     **\n     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\n     * specifying new boundaries.\n     **\n     > Parameters\n     **\n     - x (number) new x position, default is `0`\n     - y (number) new y position, default is `0`\n     - w (number) new width of the canvas\n     - h (number) new height of the canvas\n     - fit (boolean) `true` if you want graphics to fit into new boundary box\n    \\*/\n    paperproto.setViewBox = function (x, y, w, h, fit) {\n        return R._engine.setViewBox.call(this, x, y, w, h, fit);\n    };\n    /*\\\n     * Paper.top\n     [ property ]\n     **\n     * Points to the topmost element on the paper\n    \\*/\n    /*\\\n     * Paper.bottom\n     [ property ]\n     **\n     * Points to the bottom element on the paper\n    \\*/\n    paperproto.top = paperproto.bottom = null;\n    /*\\\n     * Paper.raphael\n     [ property ]\n     **\n     * Points to the @Raphael object/function\n    \\*/\n    paperproto.raphael = R;\n    var getOffset = function (elem) {\n        var box = elem.getBoundingClientRect(),\n            doc = elem.ownerDocument,\n            body = doc.body,\n            docElem = doc.documentElement,\n            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n        return {\n            y: top,\n            x: left\n        };\n    };\n    /*\\\n     * Paper.getElementByPoint\n     [ method ]\n     **\n     * Returns you topmost element under given point.\n     **\n     = (object) Raphaël element object\n     > Parameters\n     **\n     - x (number) x coordinate from the top left corner of the window\n     - y (number) y coordinate from the top left corner of the window\n     > Usage\n     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n    \\*/\n    paperproto.getElementByPoint = function (x, y) {\n        var paper = this,\n            svg = paper.canvas,\n            target = g.doc.elementFromPoint(x, y);\n        if (g.win.opera && target.tagName == \"svg\") {\n            var so = getOffset(svg),\n                sr = svg.createSVGRect();\n            sr.x = x - so.x;\n            sr.y = y - so.y;\n            sr.width = sr.height = 1;\n            var hits = svg.getIntersectionList(sr, null);\n            if (hits.length) {\n                target = hits[hits.length - 1];\n            }\n        }\n        if (!target) {\n            return null;\n        }\n        while (target.parentNode && target != svg.parentNode && !target.raphael) {\n            target = target.parentNode;\n        }\n        target == paper.canvas.parentNode && (target = svg);\n        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\n        return target;\n    };\n\n    /*\\\n     * Paper.getElementsByBBox\n     [ method ]\n     **\n     * Returns set of elements that have an intersecting bounding box\n     **\n     > Parameters\n     **\n     - bbox (object) bbox to check with\n     = (object) @Set\n     \\*/\n    paperproto.getElementsByBBox = function (bbox) {\n        var set = this.set();\n        this.forEach(function (el) {\n            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\n                set.push(el);\n            }\n        });\n        return set;\n    };\n\n    /*\\\n     * Paper.getById\n     [ method ]\n     **\n     * Returns you element by its internal ID.\n     **\n     > Parameters\n     **\n     - id (number) id\n     = (object) Raphaël element object\n    \\*/\n    paperproto.getById = function (id) {\n        var bot = this.bottom;\n        while (bot) {\n            if (bot.id == id) {\n                return bot;\n            }\n            bot = bot.next;\n        }\n        return null;\n    };\n    /*\\\n     * Paper.forEach\n     [ method ]\n     **\n     * Executes given function for each element on the paper\n     *\n     * If callback function returns `false` it will stop loop running.\n     **\n     > Parameters\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Paper object\n     > Usage\n     | paper.forEach(function (el) {\n     |     el.attr({ stroke: \"blue\" });\n     | });\n    \\*/\n    paperproto.forEach = function (callback, thisArg) {\n        var bot = this.bottom;\n        while (bot) {\n            if (callback.call(thisArg, bot) === false) {\n                return this;\n            }\n            bot = bot.next;\n        }\n        return this;\n    };\n    /*\\\n     * Paper.getElementsByPoint\n     [ method ]\n     **\n     * Returns set of elements that have common point inside\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the point\n     - y (number) y coordinate of the point\n     = (object) @Set\n    \\*/\n    paperproto.getElementsByPoint = function (x, y) {\n        var set = this.set();\n        this.forEach(function (el) {\n            if (el.isPointInside(x, y)) {\n                set.push(el);\n            }\n        });\n        return set;\n    };\n    function x_y() {\n        return this.x + S + this.y;\n    }\n    function x_y_w_h() {\n        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n    }\n    /*\\\n     * Element.isPointInside\n     [ method ]\n     **\n     * Determine if given point is inside this element’s shape\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the point\n     - y (number) y coordinate of the point\n     = (boolean) `true` if point inside the shape\n    \\*/\n    elproto.isPointInside = function (x, y) {\n        var rp = this.realPath = getPath[this.type](this);\n        if (this.attr('transform') && this.attr('transform').length) {\n            rp = R.transformPath(rp, this.attr('transform'));\n        }\n        return R.isPointInsidePath(rp, x, y);\n    };\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Return bounding box for a given element\n     **\n     > Parameters\n     **\n     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\n     = (object) Bounding box object:\n     o {\n     o     x: (number) top left corner x\n     o     y: (number) top left corner y\n     o     x2: (number) bottom right corner x\n     o     y2: (number) bottom right corner y\n     o     width: (number) width\n     o     height: (number) height\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.removed) {\n            return {};\n        }\n        var _ = this._;\n        if (isWithoutTransform) {\n            if (_.dirty || !_.bboxwt) {\n                this.realPath = getPath[this.type](this);\n                _.bboxwt = pathDimensions(this.realPath);\n                _.bboxwt.toString = x_y_w_h;\n                _.dirty = 0;\n            }\n            return _.bboxwt;\n        }\n        if (_.dirty || _.dirtyT || !_.bbox) {\n            if (_.dirty || !this.realPath) {\n                _.bboxwt = 0;\n                this.realPath = getPath[this.type](this);\n            }\n            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\n            _.bbox.toString = x_y_w_h;\n            _.dirty = _.dirtyT = 0;\n        }\n        return _.bbox;\n    };\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     = (object) clone of a given element\n     **\n    \\*/\n    elproto.clone = function () {\n        if (this.removed) {\n            return null;\n        }\n        var out = this.paper[this.type]().attr(this.attr());\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Element.glow\n     [ method ]\n     **\n     * Return set of elements that create glow-like effect around given element. See @Paper.set.\n     *\n     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\n     **\n     > Parameters\n     **\n     - glow (object) #optional parameters object with all properties optional:\n     o {\n     o     width (number) size of the glow, default is `10`\n     o     fill (boolean) will it be filled, default is `false`\n     o     opacity (number) opacity, default is `0.5`\n     o     offsetx (number) horizontal offset, default is `0`\n     o     offsety (number) vertical offset, default is `0`\n     o     color (string) glow colour, default is `black`\n     o }\n     = (object) @Paper.set of elements that represents glow\n    \\*/\n    elproto.glow = function (glow) {\n        if (this.type == \"text\") {\n            return null;\n        }\n        glow = glow || {};\n        var s = {\n            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\n            fill: glow.fill || false,\n            opacity: glow.opacity == null ? .5 : glow.opacity,\n            offsetx: glow.offsetx || 0,\n            offsety: glow.offsety || 0,\n            color: glow.color || \"#000\"\n        },\n            c = s.width / 2,\n            r = this.paper,\n            out = r.set(),\n            path = this.realPath || getPath[this.type](this);\n        path = this.matrix ? mapPath(path, this.matrix) : path;\n        for (var i = 1; i < c + 1; i++) {\n            out.push(r.path(path).attr({\n                stroke: s.color,\n                fill: s.fill ? s.color : \"none\",\n                \"stroke-linejoin\": \"round\",\n                \"stroke-linecap\": \"round\",\n                \"stroke-width\": +(s.width / c * i).toFixed(3),\n                opacity: +(s.opacity / c).toFixed(3)\n            }));\n        }\n        return out.insertBefore(this).translate(s.offsetx, s.offsety);\n    };\n    var curveslengths = {},\n    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    },\n    getLengthFactory = function (istotal, subpath) {\n        return function (path, length, onlystart) {\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return {x: point.x, y: point.y, alpha: point.alpha};\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\n            return point;\n        };\n    };\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    /*\\\n     * Raphael.getTotalLength\n     [ method ]\n     **\n     * Returns length of the given path in pixels.\n     **\n     > Parameters\n     **\n     - path (string) SVG path string.\n     **\n     = (number) length.\n    \\*/\n    R.getTotalLength = getTotalLength;\n    /*\\\n     * Raphael.getPointAtLength\n     [ method ]\n     **\n     * Return coordinates of the point located at the given length on the given path.\n     **\n     > Parameters\n     **\n     - path (string) SVG path string\n     - length (number)\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate\n     o     y: (number) y coordinate\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    R.getPointAtLength = getPointAtLength;\n    /*\\\n     * Raphael.getSubpath\n     [ method ]\n     **\n     * Return subpath of a given path from given length to given length.\n     **\n     > Parameters\n     **\n     - path (string) SVG path string\n     - from (number) position of the start of the segment\n     - to (number) position of the end of the segment\n     **\n     = (string) pathstring for the segment\n    \\*/\n    R.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns length of the path in pixels. Only works for element of “path” type.\n     = (number) length.\n    \\*/\n    elproto.getTotalLength = function () {\n        var path = this.getPath();\n        if (!path) {\n            return;\n        }\n\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n\n        return getTotalLength(path);\n    };\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\n     **\n     > Parameters\n     **\n     - length (number)\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate\n     o     y: (number) y coordinate\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        var path = this.getPath();\n        if (!path) {\n            return;\n        }\n\n        return getPointAtLength(path, length);\n    };\n    /*\\\n     * Element.getPath\n     [ method ]\n     **\n     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\n     = (object) path\n     **\n    \\*/\n    elproto.getPath = function () {\n        var path,\n            getPath = R._getPath[this.type];\n\n        if (this.type == \"text\" || this.type == \"set\") {\n            return;\n        }\n\n        if (getPath) {\n            path = getPath(this);\n        }\n\n        return path;\n    };\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\n     **\n     > Parameters\n     **\n     - from (number) position of the start of the segment\n     - to (number) position of the end of the segment\n     **\n     = (string) pathstring for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        var path = this.getPath();\n        if (!path) {\n            return;\n        }\n\n        return R.getSubpath(path, from, to);\n    };\n    /*\\\n     * Raphael.easing_formulas\n     [ property ]\n     **\n     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\n     # <ul>\n     #     <li>“linear”</li>\n     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\n     #     <li>“>” or “easeOut” or “ease-out”</li>\n     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\n     #     <li>“backIn” or “back-in”</li>\n     #     <li>“backOut” or “back-out”</li>\n     #     <li>“elastic”</li>\n     #     <li>“bounce”</li>\n     # </ul>\n     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\n    \\*/\n    var ef = R.easing_formulas = {\n        linear: function (n) {\n            return n;\n        },\n        \"<\": function (n) {\n            return pow(n, 1.7);\n        },\n        \">\": function (n) {\n            return pow(n, .48);\n        },\n        \"<>\": function (n) {\n            var q = .48 - n / 1.04,\n                Q = math.sqrt(.1734 + q * q),\n                x = Q - q,\n                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n                y = -Q - q,\n                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n                t = X + Y + .5;\n            return (1 - t) * 3 * t * t + t * t * t;\n        },\n        backIn: function (n) {\n            var s = 1.70158;\n            return n * n * ((s + 1) * n - s);\n        },\n        backOut: function (n) {\n            n = n - 1;\n            var s = 1.70158;\n            return n * n * ((s + 1) * n + s) + 1;\n        },\n        elastic: function (n) {\n            if (n == !!n) {\n                return n;\n            }\n            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\n        },\n        bounce: function (n) {\n            var s = 7.5625,\n                p = 2.75,\n                l;\n            if (n < (1 / p)) {\n                l = s * n * n;\n            } else {\n                if (n < (2 / p)) {\n                    n -= (1.5 / p);\n                    l = s * n * n + .75;\n                } else {\n                    if (n < (2.5 / p)) {\n                        n -= (2.25 / p);\n                        l = s * n * n + .9375;\n                    } else {\n                        n -= (2.625 / p);\n                        l = s * n * n + .984375;\n                    }\n                }\n            }\n            return l;\n        }\n    };\n    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\n    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\n    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\n    ef[\"back-in\"] = ef.backIn;\n    ef[\"back-out\"] = ef.backOut;\n\n    var animationElements = [],\n        requestAnimFrame = window.requestAnimationFrame       ||\n                           window.webkitRequestAnimationFrame ||\n                           window.mozRequestAnimationFrame    ||\n                           window.oRequestAnimationFrame      ||\n                           window.msRequestAnimationFrame     ||\n                           function (callback) {\n                               setTimeout(callback, 16);\n                           },\n        animation = function () {\n            var Now = +new Date,\n                l = 0;\n            for (; l < animationElements.length; l++) {\n                var e = animationElements[l];\n                if (e.el.removed || e.paused) {\n                    continue;\n                }\n                var time = Now - e.start,\n                    ms = e.ms,\n                    easing = e.easing,\n                    from = e.from,\n                    diff = e.diff,\n                    to = e.to,\n                    t = e.t,\n                    that = e.el,\n                    set = {},\n                    now,\n                    init = {},\n                    key;\n                if (e.initstatus) {\n                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\n                    e.status = e.initstatus;\n                    delete e.initstatus;\n                    e.stop && animationElements.splice(l--, 1);\n                } else {\n                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\n                }\n                if (time < 0) {\n                    continue;\n                }\n                if (time < ms) {\n                    var pos = easing(time / ms);\n                    for (var attr in from) if (from[has](attr)) {\n                        switch (availableAnimAttrs[attr]) {\n                            case nu:\n                                now = +from[attr] + pos * ms * diff[attr];\n                                break;\n                            case \"colour\":\n                                now = \"rgb(\" + [\n                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\n                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\n                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\n                                ].join(\",\") + \")\";\n                                break;\n                            case \"path\":\n                                now = [];\n                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\n                                    now[i] = [from[attr][i][0]];\n                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\n                                    }\n                                    now[i] = now[i].join(S);\n                                }\n                                now = now.join(S);\n                                break;\n                            case \"transform\":\n                                if (diff[attr].real) {\n                                    now = [];\n                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\n                                        now[i] = [from[attr][i][0]];\n                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\n                                        }\n                                    }\n                                } else {\n                                    var get = function (i) {\n                                        return +from[attr][i] + pos * ms * diff[attr][i];\n                                    };\n                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\n                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\n                                }\n                                break;\n                            case \"csv\":\n                                if (attr == \"clip-rect\") {\n                                    now = [];\n                                    i = 4;\n                                    while (i--) {\n                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\n                                    }\n                                }\n                                break;\n                            default:\n                                var from2 = [][concat](from[attr]);\n                                now = [];\n                                i = that.paper.customAttributes[attr].length;\n                                while (i--) {\n                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\n                                }\n                                break;\n                        }\n                        set[attr] = now;\n                    }\n                    that.attr(set);\n                    (function (id, that, anim) {\n                        setTimeout(function () {\n                            eve(\"raphael.anim.frame.\" + id, that, anim);\n                        });\n                    })(that.id, that, e.anim);\n                } else {\n                    (function(f, el, a) {\n                        setTimeout(function() {\n                            eve(\"raphael.anim.frame.\" + el.id, el, a);\n                            eve(\"raphael.anim.finish.\" + el.id, el, a);\n                            R.is(f, \"function\") && f.call(el);\n                        });\n                    })(e.callback, that, e.anim);\n                    that.attr(to);\n                    animationElements.splice(l--, 1);\n                    if (e.repeat > 1 && !e.next) {\n                        for (key in to) if (to[has](key)) {\n                            init[key] = e.totalOrigin[key];\n                        }\n                        e.el.attr(init);\n                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\n                    }\n                    if (e.next && !e.stop) {\n                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\n                    }\n                }\n            }\n            animationElements.length && requestAnimFrame(animation);\n        },\n        upto255 = function (color) {\n            return color > 255 ? 255 : color < 0 ? 0 : color;\n        };\n    /*\\\n     * Element.animateWith\n     [ method ]\n     **\n     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\n     **\n     > Parameters\n     **\n     - el (object) element to sync with\n     - anim (object) animation to sync with\n     - params (object) #optional final attributes for the element, see also @Element.attr\n     - ms (number) #optional number of milliseconds for animation to run\n     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n     - callback (function) #optional callback function. Will be called at the end of animation.\n     * or\n     - element (object) element to sync with\n     - anim (object) animation to sync with\n     - animation (object) #optional animation object, see @Raphael.animation\n     **\n     = (object) original element\n    \\*/\n    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\n        var element = this;\n        if (element.removed) {\n            callback && callback.call(element);\n            return element;\n        }\n        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\n            x, y;\n        runAnimation(a, element, a.percents[0], null, element.attr());\n        for (var i = 0, ii = animationElements.length; i < ii; i++) {\n            if (animationElements[i].anim == anim && animationElements[i].el == el) {\n                animationElements[ii - 1].start = animationElements[i].start;\n                break;\n            }\n        }\n        return element;\n        //\n        //\n        // var a = params ? R.animation(params, ms, easing, callback) : anim,\n        //     status = element.status(anim);\n        // return this.animate(a).status(a, status * anim.ms / a.ms);\n    };\n    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\n        var cx = 3 * p1x,\n            bx = 3 * (p2x - p1x) - cx,\n            ax = 1 - cx - bx,\n            cy = 3 * p1y,\n            by = 3 * (p2y - p1y) - cy,\n            ay = 1 - cy - by;\n        function sampleCurveX(t) {\n            return ((ax * t + bx) * t + cx) * t;\n        }\n        function solve(x, epsilon) {\n            var t = solveCurveX(x, epsilon);\n            return ((ay * t + by) * t + cy) * t;\n        }\n        function solveCurveX(x, epsilon) {\n            var t0, t1, t2, x2, d2, i;\n            for(t2 = x, i = 0; i < 8; i++) {\n                x2 = sampleCurveX(t2) - x;\n                if (abs(x2) < epsilon) {\n                    return t2;\n                }\n                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\n                if (abs(d2) < 1e-6) {\n                    break;\n                }\n                t2 = t2 - x2 / d2;\n            }\n            t0 = 0;\n            t1 = 1;\n            t2 = x;\n            if (t2 < t0) {\n                return t0;\n            }\n            if (t2 > t1) {\n                return t1;\n            }\n            while (t0 < t1) {\n                x2 = sampleCurveX(t2);\n                if (abs(x2 - x) < epsilon) {\n                    return t2;\n                }\n                if (x > x2) {\n                    t0 = t2;\n                } else {\n                    t1 = t2;\n                }\n                t2 = (t1 - t0) / 2 + t0;\n            }\n            return t2;\n        }\n        return solve(t, 1 / (200 * duration));\n    }\n    elproto.onAnimation = function (f) {\n        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\n        return this;\n    };\n    function Animation(anim, ms) {\n        var percents = [],\n            newAnim = {};\n        this.ms = ms;\n        this.times = 1;\n        if (anim) {\n            for (var attr in anim) if (anim[has](attr)) {\n                newAnim[toFloat(attr)] = anim[attr];\n                percents.push(toFloat(attr));\n            }\n            percents.sort(sortByNumber);\n        }\n        this.anim = newAnim;\n        this.top = percents[percents.length - 1];\n        this.percents = percents;\n    }\n    /*\\\n     * Animation.delay\n     [ method ]\n     **\n     * Creates a copy of existing animation object with given delay.\n     **\n     > Parameters\n     **\n     - delay (number) number of ms to pass between animation start and actual animation\n     **\n     = (object) new altered Animation object\n     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\n     | circle1.animate(anim); // run the given animation immediately\n     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\n    \\*/\n    Animation.prototype.delay = function (delay) {\n        var a = new Animation(this.anim, this.ms);\n        a.times = this.times;\n        a.del = +delay || 0;\n        return a;\n    };\n    /*\\\n     * Animation.repeat\n     [ method ]\n     **\n     * Creates a copy of existing animation object with given repetition.\n     **\n     > Parameters\n     **\n     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\n     **\n     = (object) new altered Animation object\n    \\*/\n    Animation.prototype.repeat = function (times) {\n        var a = new Animation(this.anim, this.ms);\n        a.del = this.del;\n        a.times = math.floor(mmax(times, 0)) || 1;\n        return a;\n    };\n    function runAnimation(anim, element, percent, status, totalOrigin, times) {\n        percent = toFloat(percent);\n        var params,\n            isInAnim,\n            isInAnimSet,\n            percents = [],\n            next,\n            prev,\n            timestamp,\n            ms = anim.ms,\n            from = {},\n            to = {},\n            diff = {};\n        if (status) {\n            for (i = 0, ii = animationElements.length; i < ii; i++) {\n                var e = animationElements[i];\n                if (e.el.id == element.id && e.anim == anim) {\n                    if (e.percent != percent) {\n                        animationElements.splice(i, 1);\n                        isInAnimSet = 1;\n                    } else {\n                        isInAnim = e;\n                    }\n                    element.attr(e.totalOrigin);\n                    break;\n                }\n            }\n        } else {\n            status = +to; // NaN\n        }\n        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\n            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\n                percent = anim.percents[i];\n                prev = anim.percents[i - 1] || 0;\n                ms = ms / anim.top * (percent - prev);\n                next = anim.percents[i + 1];\n                params = anim.anim[percent];\n                break;\n            } else if (status) {\n                element.attr(anim.anim[anim.percents[i]]);\n            }\n        }\n        if (!params) {\n            return;\n        }\n        if (!isInAnim) {\n            for (var attr in params) if (params[has](attr)) {\n                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\n                    from[attr] = element.attr(attr);\n                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\n                    to[attr] = params[attr];\n                    switch (availableAnimAttrs[attr]) {\n                        case nu:\n                            diff[attr] = (to[attr] - from[attr]) / ms;\n                            break;\n                        case \"colour\":\n                            from[attr] = R.getRGB(from[attr]);\n                            var toColour = R.getRGB(to[attr]);\n                            diff[attr] = {\n                                r: (toColour.r - from[attr].r) / ms,\n                                g: (toColour.g - from[attr].g) / ms,\n                                b: (toColour.b - from[attr].b) / ms\n                            };\n                            break;\n                        case \"path\":\n                            var pathes = path2curve(from[attr], to[attr]),\n                                toPath = pathes[1];\n                            from[attr] = pathes[0];\n                            diff[attr] = [];\n                            for (i = 0, ii = from[attr].length; i < ii; i++) {\n                                diff[attr][i] = [0];\n                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\n                                }\n                            }\n                            break;\n                        case \"transform\":\n                            var _ = element._,\n                                eq = equaliseTransform(_[attr], to[attr]);\n                            if (eq) {\n                                from[attr] = eq.from;\n                                to[attr] = eq.to;\n                                diff[attr] = [];\n                                diff[attr].real = true;\n                                for (i = 0, ii = from[attr].length; i < ii; i++) {\n                                    diff[attr][i] = [from[attr][i][0]];\n                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\n                                    }\n                                }\n                            } else {\n                                var m = (element.matrix || new Matrix),\n                                    to2 = {\n                                        _: {transform: _.transform},\n                                        getBBox: function () {\n                                            return element.getBBox(1);\n                                        }\n                                    };\n                                from[attr] = [\n                                    m.a,\n                                    m.b,\n                                    m.c,\n                                    m.d,\n                                    m.e,\n                                    m.f\n                                ];\n                                extractTransform(to2, to[attr]);\n                                to[attr] = to2._.transform;\n                                diff[attr] = [\n                                    (to2.matrix.a - m.a) / ms,\n                                    (to2.matrix.b - m.b) / ms,\n                                    (to2.matrix.c - m.c) / ms,\n                                    (to2.matrix.d - m.d) / ms,\n                                    (to2.matrix.e - m.e) / ms,\n                                    (to2.matrix.f - m.f) / ms\n                                ];\n                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\n                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\n                                // extractTransform(to2, to[attr]);\n                                // diff[attr] = [\n                                //     (to2._.sx - _.sx) / ms,\n                                //     (to2._.sy - _.sy) / ms,\n                                //     (to2._.deg - _.deg) / ms,\n                                //     (to2._.dx - _.dx) / ms,\n                                //     (to2._.dy - _.dy) / ms\n                                // ];\n                            }\n                            break;\n                        case \"csv\":\n                            var values = Str(params[attr])[split](separator),\n                                from2 = Str(from[attr])[split](separator);\n                            if (attr == \"clip-rect\") {\n                                from[attr] = from2;\n                                diff[attr] = [];\n                                i = from2.length;\n                                while (i--) {\n                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\n                                }\n                            }\n                            to[attr] = values;\n                            break;\n                        default:\n                            values = [][concat](params[attr]);\n                            from2 = [][concat](from[attr]);\n                            diff[attr] = [];\n                            i = element.paper.customAttributes[attr].length;\n                            while (i--) {\n                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\n                            }\n                            break;\n                    }\n                }\n            }\n            var easing = params.easing,\n                easyeasy = R.easing_formulas[easing];\n            if (!easyeasy) {\n                easyeasy = Str(easing).match(bezierrg);\n                if (easyeasy && easyeasy.length == 5) {\n                    var curve = easyeasy;\n                    easyeasy = function (t) {\n                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\n                    };\n                } else {\n                    easyeasy = pipe;\n                }\n            }\n            timestamp = params.start || anim.start || +new Date;\n            e = {\n                anim: anim,\n                percent: percent,\n                timestamp: timestamp,\n                start: timestamp + (anim.del || 0),\n                status: 0,\n                initstatus: status || 0,\n                stop: false,\n                ms: ms,\n                easing: easyeasy,\n                from: from,\n                diff: diff,\n                to: to,\n                el: element,\n                callback: params.callback,\n                prev: prev,\n                next: next,\n                repeat: times || anim.times,\n                origin: element.attr(),\n                totalOrigin: totalOrigin\n            };\n            animationElements.push(e);\n            if (status && !isInAnim && !isInAnimSet) {\n                e.stop = true;\n                e.start = new Date - ms * status;\n                if (animationElements.length == 1) {\n                    return animation();\n                }\n            }\n            if (isInAnimSet) {\n                e.start = new Date - e.ms * status;\n            }\n            animationElements.length == 1 && requestAnimFrame(animation);\n        } else {\n            isInAnim.initstatus = status;\n            isInAnim.start = new Date - isInAnim.ms * status;\n        }\n        eve(\"raphael.anim.start.\" + element.id, element, anim);\n    }\n    /*\\\n     * Raphael.animation\n     [ method ]\n     **\n     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\n     * See also @Animation.delay and @Animation.repeat methods.\n     **\n     > Parameters\n     **\n     - params (object) final attributes for the element, see also @Element.attr\n     - ms (number) number of milliseconds for animation to run\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n     - callback (function) #optional callback function. Will be called at the end of animation.\n     **\n     = (object) @Animation\n    \\*/\n    R.animation = function (params, ms, easing, callback) {\n        if (params instanceof Animation) {\n            return params;\n        }\n        if (R.is(easing, \"function\") || !easing) {\n            callback = callback || easing || null;\n            easing = null;\n        }\n        params = Object(params);\n        ms = +ms || 0;\n        var p = {},\n            json,\n            attr;\n        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\n            json = true;\n            p[attr] = params[attr];\n        }\n        if (!json) {\n            // if percent-like syntax is used and end-of-all animation callback used\n            if(callback){\n                // find the last one\n                var lastKey = 0;\n                for(var i in params){\n                    var percent = toInt(i);\n                    if(params[has](i) && percent > lastKey){\n                        lastKey = percent;\n                    }\n                }\n                lastKey += '%';\n                // if already defined callback in the last keyframe, skip\n                !params[lastKey].callback && (params[lastKey].callback = callback);\n            }\n          return new Animation(params, ms);\n        } else {\n            easing && (p.easing = easing);\n            callback && (p.callback = callback);\n            return new Animation({100: p}, ms);\n        }\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Creates and starts animation for given element.\n     **\n     > Parameters\n     **\n     - params (object) final attributes for the element, see also @Element.attr\n     - ms (number) number of milliseconds for animation to run\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n     - callback (function) #optional callback function. Will be called at the end of animation.\n     * or\n     - animation (object) animation object, see @Raphael.animation\n     **\n     = (object) original element\n    \\*/\n    elproto.animate = function (params, ms, easing, callback) {\n        var element = this;\n        if (element.removed) {\n            callback && callback.call(element);\n            return element;\n        }\n        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\n        runAnimation(anim, element, anim.percents[0], null, element.attr());\n        return element;\n    };\n    /*\\\n     * Element.setTime\n     [ method ]\n     **\n     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\n     **\n     > Parameters\n     **\n     - anim (object) animation object\n     - value (number) number of milliseconds from the beginning of the animation\n     **\n     = (object) original element if `value` is specified\n     * Note, that during animation following events are triggered:\n     *\n     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\n    \\*/\n    elproto.setTime = function (anim, value) {\n        if (anim && value != null) {\n            this.status(anim, mmin(value, anim.ms) / anim.ms);\n        }\n        return this;\n    };\n    /*\\\n     * Element.status\n     [ method ]\n     **\n     * Gets or sets the status of animation of the element.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\n     **\n     = (number) status\n     * or\n     = (array) status if `anim` is not specified. Array of objects in format:\n     o {\n     o     anim: (object) animation object\n     o     status: (number) status\n     o }\n     * or\n     = (object) original element if `value` is specified\n    \\*/\n    elproto.status = function (anim, value) {\n        var out = [],\n            i = 0,\n            len,\n            e;\n        if (value != null) {\n            runAnimation(anim, this, -1, mmin(value, 1));\n            return this;\n        } else {\n            len = animationElements.length;\n            for (; i < len; i++) {\n                e = animationElements[i];\n                if (e.el.id == this.id && (!anim || e.anim == anim)) {\n                    if (anim) {\n                        return e.status;\n                    }\n                    out.push({\n                        anim: e.anim,\n                        status: e.status\n                    });\n                }\n            }\n            if (anim) {\n                return 0;\n            }\n            return out;\n        }\n    };\n    /*\\\n     * Element.pause\n     [ method ]\n     **\n     * Stops animation of the element with ability to resume it later on.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     **\n     = (object) original element\n    \\*/\n    elproto.pause = function (anim) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\n                animationElements[i].paused = true;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.resume\n     [ method ]\n     **\n     * Resumes animation if it was paused with @Element.pause method.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     **\n     = (object) original element\n    \\*/\n    elproto.resume = function (anim) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n            var e = animationElements[i];\n            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\n                delete e.paused;\n                this.status(e.anim, e.status);\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops animation of the element.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     **\n     = (object) original element\n    \\*/\n    elproto.stop = function (anim) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\n                animationElements.splice(i--, 1);\n            }\n        }\n        return this;\n    };\n    function stopAnimation(paper) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\n            animationElements.splice(i--, 1);\n        }\n    }\n    eve.on(\"raphael.remove\", stopAnimation);\n    eve.on(\"raphael.clear\", stopAnimation);\n    elproto.toString = function () {\n        return \"Rapha\\xebl\\u2019s object\";\n    };\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set.\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it.\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set.\n     *\n     * If function returns `false` it will stop loop running.\n     **\n     > Parameters\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    for (var method in elproto) if (elproto[has](method)) {\n        setproto[method] = (function (methodname) {\n            return function () {\n                var arg = arguments;\n                return this.forEach(function (el) {\n                    el[methodname][apply](el, arg);\n                });\n            };\n        })(method);\n    }\n    setproto.attr = function (name, value) {\n        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\n            for (var j = 0, jj = name.length; j < jj; j++) {\n                this.items[j].attr(name[j]);\n            }\n        } else {\n            for (var i = 0, ii = this.items.length; i < ii; i++) {\n                this.items[i].attr(name, value);\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     > Parameters\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     > Parameters\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found & removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n    };\n    setproto.animate = function (params, ms, easing, callback) {\n        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\n        var len = this.items.length,\n            i = len,\n            item,\n            set = this,\n            collector;\n        if (!len) {\n            return this;\n        }\n        callback && (collector = function () {\n            !--len && callback.call(set);\n        });\n        easing = R.is(easing, string) ? easing : collector;\n        var anim = R.animation(params, ms, easing, collector);\n        item = this.items[--i].animate(anim);\n        while (i--) {\n            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\n            (this.items[i] && !this.items[i].removed) || len--;\n        }\n        return this;\n    };\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin[apply](0, x);\n        y = mmin[apply](0, y);\n        x2 = mmax[apply](0, x2);\n        y2 = mmax[apply](0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y\n        };\n    };\n    setproto.clone = function (s) {\n        s = this.paper.set();\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Rapha\\xebl\\u2018s set\";\n    };\n\n    setproto.glow = function(glowConfig) {\n        var ret = this.paper.set();\n        this.forEach(function(shape, index){\n            var g = shape.glow(glowConfig);\n            if(g != null){\n                g.forEach(function(shape2, index2){\n                    ret.push(shape2);\n                });\n            }\n        });\n        return ret;\n    };\n\n\n    /*\\\n     * Set.isPointInside\n     [ method ]\n     **\n     * Determine if given point is inside this set’s elements\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the point\n     - y (number) y coordinate of the point\n     = (boolean) `true` if point is inside any of the set's elements\n     \\*/\n    setproto.isPointInside = function (x, y) {\n        var isPointInside = false;\n        this.forEach(function (el) {\n            if (el.isPointInside(x, y)) {\n                isPointInside = true;\n                return false; // stop loop\n            }\n        });\n        return isPointInside;\n    };\n\n    /*\\\n     * Raphael.registerFont\n     [ method ]\n     **\n     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\n     * Returns original parameter, so it could be used with chaining.\n     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\n     **\n     > Parameters\n     **\n     - font (object) the font to register\n     = (object) the font you passed in\n     > Usage\n     | Cufon.registerFont(Raphael.registerFont({…}));\n    \\*/\n    R.registerFont = function (font) {\n        if (!font.face) {\n            return font;\n        }\n        this.fonts = this.fonts || {};\n        var fontcopy = {\n                w: font.w,\n                face: {},\n                glyphs: {}\n            },\n            family = font.face[\"font-family\"];\n        for (var prop in font.face) if (font.face[has](prop)) {\n            fontcopy.face[prop] = font.face[prop];\n        }\n        if (this.fonts[family]) {\n            this.fonts[family].push(fontcopy);\n        } else {\n            this.fonts[family] = [fontcopy];\n        }\n        if (!font.svg) {\n            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\n            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\n                var path = font.glyphs[glyph];\n                fontcopy.glyphs[glyph] = {\n                    w: path.w,\n                    k: {},\n                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\n                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\n                        }) + \"z\"\n                };\n                if (path.k) {\n                    for (var k in path.k) if (path[has](k)) {\n                        fontcopy.glyphs[glyph].k[k] = path.k[k];\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    /*\\\n     * Paper.getFont\n     [ method ]\n     **\n     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\n     **\n     > Parameters\n     **\n     - family (string) font family name or any word from it\n     - weight (string) #optional font weight\n     - style (string) #optional font style\n     - stretch (string) #optional font stretch\n     = (object) the font object\n     > Usage\n     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\n    \\*/\n    paperproto.getFont = function (family, weight, style, stretch) {\n        stretch = stretch || \"normal\";\n        style = style || \"normal\";\n        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\n        if (!R.fonts) {\n            return;\n        }\n        var font = R.fonts[family];\n        if (!font) {\n            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\n            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\n                if (name.test(fontName)) {\n                    font = R.fonts[fontName];\n                    break;\n                }\n            }\n        }\n        var thefont;\n        if (font) {\n            for (var i = 0, ii = font.length; i < ii; i++) {\n                thefont = font[i];\n                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\n                    break;\n                }\n            }\n        }\n        return thefont;\n    };\n    /*\\\n     * Paper.print\n     [ method ]\n     **\n     * Creates path that represent given text written using given font at given position with given size.\n     * Result of the method is path element that contains whole text as a separate path.\n     **\n     > Parameters\n     **\n     - x (number) x position of the text\n     - y (number) y position of the text\n     - string (string) text to print\n     - font (object) font object, see @Paper.getFont\n     - size (number) #optional size of the font, default is `16`\n     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\n     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\n     - line_spacing (number) #optional number in range `1..3`, default is `1`\n     = (object) resulting path element, which consist of all letters\n     > Usage\n     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\n    \\*/\n    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\n        origin = origin || \"middle\"; // baseline|middle\n        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\n        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\n        var letters = Str(string)[split](E),\n            shift = 0,\n            notfirst = 0,\n            path = E,\n            scale;\n        R.is(font, \"string\") && (font = this.getFont(font));\n        if (font) {\n            scale = (size || 16) / font.face[\"units-per-em\"];\n            var bb = font.face.bbox[split](separator),\n                top = +bb[0],\n                lineHeight = bb[3] - bb[1],\n                shifty = 0,\n                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\n            for (var i = 0, ii = letters.length; i < ii; i++) {\n                if (letters[i] == \"\\n\") {\n                    shift = 0;\n                    curr = 0;\n                    notfirst = 0;\n                    shifty += lineHeight * line_spacing;\n                } else {\n                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\n                        curr = font.glyphs[letters[i]];\n                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\n                    notfirst = 1;\n                }\n                if (curr && curr.d) {\n                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\n                }\n            }\n        }\n        return this.path(path).attr({\n            fill: \"#000\",\n            stroke: \"none\"\n        });\n    };\n\n    /*\\\n     * Paper.add\n     [ method ]\n     **\n     * Imports elements in JSON array in format `{type: type, <attributes>}`\n     **\n     > Parameters\n     **\n     - json (array)\n     = (object) resulting set of imported elements\n     > Usage\n     | paper.add([\n     |     {\n     |         type: \"circle\",\n     |         cx: 10,\n     |         cy: 10,\n     |         r: 5\n     |     },\n     |     {\n     |         type: \"rect\",\n     |         x: 10,\n     |         y: 10,\n     |         width: 10,\n     |         height: 10,\n     |         fill: \"#fc0\"\n     |     }\n     | ]);\n    \\*/\n    paperproto.add = function (json) {\n        if (R.is(json, \"array\")) {\n            var res = this.set(),\n                i = 0,\n                ii = json.length,\n                j;\n            for (; i < ii; i++) {\n                j = json[i] || {};\n                elements[has](j.type) && res.push(this[j.type]().attr(j));\n            }\n        }\n        return res;\n    };\n\n    /*\\\n     * Raphael.format\n     [ method ]\n     **\n     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\n     **\n     > Parameters\n     **\n     - token (string) string to format\n     - … (string) rest of arguments will be treated as parameters for replacement\n     = (string) formated string\n     > Usage\n     | var x = 10,\n     |     y = 20,\n     |     width = 40,\n     |     height = 50;\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\n    \\*/\n    R.format = function (token, params) {\n        var args = R.is(params, array) ? [0][concat](params) : arguments;\n        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\n            return args[++i] == null ? E : args[i];\n        }));\n        return token || E;\n    };\n    /*\\\n     * Raphael.fullfill\n     [ method ]\n     **\n     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\n     **\n     > Parameters\n     **\n     - token (string) string to format\n     - json (object) object which properties will be used as a replacement\n     = (string) formated string\n     > Usage\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n     |     x: 10,\n     |     y: 20,\n     |     dim: {\n     |         width: 40,\n     |         height: 50,\n     |         \"negative width\": -40\n     |     }\n     | }));\n    \\*/\n    R.fullfill = (function () {\n        var tokenRegex = /\\{([^\\}]+)\\}/g,\n            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n            replacer = function (all, key, obj) {\n                var res = obj;\n                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                    name = name || quotedName;\n                    if (res) {\n                        if (name in res) {\n                            res = res[name];\n                        }\n                        typeof res == \"function\" && isFunc && (res = res());\n                    }\n                });\n                res = (res == null || res == obj ? all : res) + \"\";\n                return res;\n            };\n        return function (str, obj) {\n            return String(str).replace(tokenRegex, function (all, key) {\n                return replacer(all, key, obj);\n            });\n        };\n    })();\n    /*\\\n     * Raphael.ninja\n     [ method ]\n     **\n     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\n     * Beware, that in this case plugins could stop working, because they are depending on global variable existence.\n     **\n     = (object) Raphael object\n     > Usage\n     | (function (local_raphael) {\n     |     var paper = local_raphael(10, 10, 320, 200);\n     |     …\n     | })(Raphael.ninja());\n    \\*/\n    R.ninja = function () {\n        if (oldRaphael.was) {\n            g.win.Raphael = oldRaphael.is;\n        } else {\n            // IE8 raises an error when deleting window property\n            window.Raphael = undefined;\n            try {\n                delete window.Raphael;\n            } catch(e) {}\n        }\n        return R;\n    };\n    /*\\\n     * Raphael.st\n     [ property (object) ]\n     **\n     * You can add your own method to elements and sets. It is wise to add a set method for each element method\n     * you added, so you will be able to call the same method on sets too.\n     **\n     * See also @Raphael.el.\n     > Usage\n     | Raphael.el.red = function () {\n     |     this.attr({fill: \"#f00\"});\n     | };\n     | Raphael.st.red = function () {\n     |     this.forEach(function (el) {\n     |         el.red();\n     |     });\n     | };\n     | // then use it\n     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\n    \\*/\n    R.st = setproto;\n\n    eve.on(\"raphael.DOMload\", function () {\n        loaded = true;\n    });\n\n    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\n    (function (doc, loaded, f) {\n        if (doc.readyState == null && doc.addEventListener){\n            doc.addEventListener(loaded, f = function () {\n                doc.removeEventListener(loaded, f, false);\n                doc.readyState = \"complete\";\n            }, false);\n            doc.readyState = \"loading\";\n        }\n        function isLoaded() {\n            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\n        }\n        isLoaded();\n    })(document, \"DOMContentLoaded\");\n\n    return R;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ \"./dev/raphael.svg.js\":\n/*!****************************!*\\\n  !*** ./dev/raphael.svg.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./raphael.core */ \"./dev/raphael.core.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(R) {\n    if (R && !R.svg) {\n        return;\n    }\n\n    var has = \"hasOwnProperty\",\n        Str = String,\n        toFloat = parseFloat,\n        toInt = parseInt,\n        math = Math,\n        mmax = math.max,\n        abs = math.abs,\n        pow = math.pow,\n        separator = /[, ]+/,\n        eve = R.eve,\n        E = \"\",\n        S = \" \";\n    var xlink = \"http://www.w3.org/1999/xlink\",\n        markers = {\n            block: \"M5,0 0,2.5 5,5z\",\n            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\n            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\n            open: \"M6,1 1,3.5 6,6\",\n            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\n        },\n        markerCounter = {};\n    R.toString = function () {\n        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\n    };\n    var $ = function (el, attr) {\n        if (attr) {\n            if (typeof el == \"string\") {\n                el = $(el);\n            }\n            for (var key in attr) if (attr[has](key)) {\n                if (key.substring(0, 6) == \"xlink:\") {\n                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\n                } else {\n                    el.setAttribute(key, Str(attr[key]));\n                }\n            }\n        } else {\n            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\n            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\n        }\n        return el;\n    },\n    addGradientFill = function (element, gradient) {\n        var type = \"linear\",\n            id = element.id + gradient,\n            fx = .5, fy = .5,\n            o = element.node,\n            SVG = element.paper,\n            s = o.style,\n            el = R._g.doc.getElementById(id);\n        if (!el) {\n            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\n                type = \"radial\";\n                if (_fx && _fy) {\n                    fx = toFloat(_fx);\n                    fy = toFloat(_fy);\n                    var dir = ((fy > .5) * 2 - 1);\n                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\n                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\n                        fy != .5 &&\n                        (fy = fy.toFixed(5) - 1e-5 * dir);\n                }\n                return E;\n            });\n            gradient = gradient.split(/\\s*\\-\\s*/);\n            if (type == \"linear\") {\n                var angle = gradient.shift();\n                angle = -toFloat(angle);\n                if (isNaN(angle)) {\n                    return null;\n                }\n                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\n                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\n                vector[2] *= max;\n                vector[3] *= max;\n                if (vector[2] < 0) {\n                    vector[0] = -vector[2];\n                    vector[2] = 0;\n                }\n                if (vector[3] < 0) {\n                    vector[1] = -vector[3];\n                    vector[3] = 0;\n                }\n            }\n            var dots = R._parseDots(gradient);\n            if (!dots) {\n                return null;\n            }\n            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\n\n            if (element.gradient && id != element.gradient.id) {\n                SVG.defs.removeChild(element.gradient);\n                delete element.gradient;\n            }\n\n            if (!element.gradient) {\n                el = $(type + \"Gradient\", {id: id});\n                element.gradient = el;\n                $(el, type == \"radial\" ? {\n                    fx: fx,\n                    fy: fy\n                } : {\n                    x1: vector[0],\n                    y1: vector[1],\n                    x2: vector[2],\n                    y2: vector[3],\n                    gradientTransform: element.matrix.invert()\n                });\n                SVG.defs.appendChild(el);\n                for (var i = 0, ii = dots.length; i < ii; i++) {\n                    el.appendChild($(\"stop\", {\n                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\n                        \"stop-color\": dots[i].color || \"#fff\",\n                        \"stop-opacity\": isFinite(dots[i].opacity) ? dots[i].opacity : 1\n                    }));\n                }\n            }\n        }\n        $(o, {\n            fill: fillurl(id),\n            opacity: 1,\n            \"fill-opacity\": 1\n        });\n        s.fill = E;\n        s.opacity = 1;\n        s.fillOpacity = 1;\n        return 1;\n    },\n    isIE9or10 = function () {\n      var mode = document.documentMode;\n      return mode && (mode === 9 || mode === 10);\n    },\n    fillurl = function (id) {\n      if (isIE9or10()) {\n          return \"url('#\" + id + \"')\";\n      }\n      var location = document.location;\n      var locationString = (\n          location.protocol + '//' +\n          location.host +\n          location.pathname +\n          location.search\n      );\n      return \"url('\" + locationString + \"#\" + id + \"')\";\n    },\n    updatePosition = function (o) {\n        var bbox = o.getBBox(1);\n        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\n    },\n    addArrow = function (o, value, isEnd) {\n        if (o.type == \"path\") {\n            var values = Str(value).toLowerCase().split(\"-\"),\n                p = o.paper,\n                se = isEnd ? \"end\" : \"start\",\n                node = o.node,\n                attrs = o.attrs,\n                stroke = attrs[\"stroke-width\"],\n                i = values.length,\n                type = \"classic\",\n                from,\n                to,\n                dx,\n                refX,\n                attr,\n                w = 3,\n                h = 3,\n                t = 5;\n            while (i--) {\n                switch (values[i]) {\n                    case \"block\":\n                    case \"classic\":\n                    case \"oval\":\n                    case \"diamond\":\n                    case \"open\":\n                    case \"none\":\n                        type = values[i];\n                        break;\n                    case \"wide\": h = 5; break;\n                    case \"narrow\": h = 2; break;\n                    case \"long\": w = 5; break;\n                    case \"short\": w = 2; break;\n                }\n            }\n            if (type == \"open\") {\n                w += 2;\n                h += 2;\n                t += 2;\n                dx = 1;\n                refX = isEnd ? 4 : 1;\n                attr = {\n                    fill: \"none\",\n                    stroke: attrs.stroke\n                };\n            } else {\n                refX = dx = w / 2;\n                attr = {\n                    fill: attrs.stroke,\n                    stroke: \"none\"\n                };\n            }\n            if (o._.arrows) {\n                if (isEnd) {\n                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\n                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\n                } else {\n                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\n                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\n                }\n            } else {\n                o._.arrows = {};\n            }\n            if (type != \"none\") {\n                var pathId = \"raphael-marker-\" + type,\n                    markerId = \"raphael-marker-\" + se + type + w + h + \"-obj\" + o.id;\n                if (!R._g.doc.getElementById(pathId)) {\n                    p.defs.appendChild($($(\"path\"), {\n                        \"stroke-linecap\": \"round\",\n                        d: markers[type],\n                        id: pathId\n                    }));\n                    markerCounter[pathId] = 1;\n                } else {\n                    markerCounter[pathId]++;\n                }\n                var marker = R._g.doc.getElementById(markerId),\n                    use;\n                if (!marker) {\n                    marker = $($(\"marker\"), {\n                        id: markerId,\n                        markerHeight: h,\n                        markerWidth: w,\n                        orient: \"auto\",\n                        refX: refX,\n                        refY: h / 2\n                    });\n                    use = $($(\"use\"), {\n                        \"xlink:href\": \"#\" + pathId,\n                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\n                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\n                    });\n                    marker.appendChild(use);\n                    p.defs.appendChild(marker);\n                    markerCounter[markerId] = 1;\n                } else {\n                    markerCounter[markerId]++;\n                    use = marker.getElementsByTagName(\"use\")[0];\n                }\n                $(use, attr);\n                var delta = dx * (type != \"diamond\" && type != \"oval\");\n                if (isEnd) {\n                    from = o._.arrows.startdx * stroke || 0;\n                    to = R.getTotalLength(attrs.path) - delta * stroke;\n                } else {\n                    from = delta * stroke;\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n                }\n                attr = {};\n                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\n                if (to || from) {\n                    attr.d = R.getSubpath(attrs.path, from, to);\n                }\n                $(node, attr);\n                o._.arrows[se + \"Path\"] = pathId;\n                o._.arrows[se + \"Marker\"] = markerId;\n                o._.arrows[se + \"dx\"] = delta;\n                o._.arrows[se + \"Type\"] = type;\n                o._.arrows[se + \"String\"] = value;\n            } else {\n                if (isEnd) {\n                    from = o._.arrows.startdx * stroke || 0;\n                    to = R.getTotalLength(attrs.path) - from;\n                } else {\n                    from = 0;\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n                }\n                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\n                delete o._.arrows[se + \"Path\"];\n                delete o._.arrows[se + \"Marker\"];\n                delete o._.arrows[se + \"dx\"];\n                delete o._.arrows[se + \"Type\"];\n                delete o._.arrows[se + \"String\"];\n            }\n            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\n                var item = R._g.doc.getElementById(attr);\n                item && item.parentNode.removeChild(item);\n            }\n        }\n    },\n    dasharray = {\n        \"-\": [3, 1],\n        \".\": [1, 1],\n        \"-.\": [3, 1, 1, 1],\n        \"-..\": [3, 1, 1, 1, 1, 1],\n        \". \": [1, 3],\n        \"- \": [4, 3],\n        \"--\": [8, 3],\n        \"- .\": [4, 3, 1, 3],\n        \"--.\": [8, 3, 1, 3],\n        \"--..\": [8, 3, 1, 3, 1, 3]\n    },\n    addDashes = function (o, value, params) {\n        value = dasharray[Str(value).toLowerCase()];\n        if (value) {\n            var width = o.attrs[\"stroke-width\"] || \"1\",\n                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\n                dashes = [],\n                i = value.length;\n            while (i--) {\n                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\n            }\n            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\n        }\n        else {\n          $(o.node, {\"stroke-dasharray\": \"none\"});\n        }\n    },\n    setFillAndStroke = function (o, params) {\n        var node = o.node,\n            attrs = o.attrs,\n            vis = node.style.visibility;\n        node.style.visibility = \"hidden\";\n        for (var att in params) {\n            if (params[has](att)) {\n                if (!R._availableAttrs[has](att)) {\n                    continue;\n                }\n                var value = params[att];\n                attrs[att] = value;\n                switch (att) {\n                    case \"blur\":\n                        o.blur(value);\n                        break;\n                    case \"title\":\n                        var title = node.getElementsByTagName(\"title\");\n\n                        // Use the existing <title>.\n                        if (title.length && (title = title[0])) {\n                          title.firstChild.nodeValue = value;\n                        } else {\n                          title = $(\"title\");\n                          var val = R._g.doc.createTextNode(value);\n                          title.appendChild(val);\n                          node.appendChild(title);\n                        }\n                        break;\n                    case \"href\":\n                    case \"target\":\n                        var pn = node.parentNode;\n                        if (pn.tagName.toLowerCase() != \"a\") {\n                            var hl = $(\"a\");\n                            pn.insertBefore(hl, node);\n                            hl.appendChild(node);\n                            pn = hl;\n                        }\n                        if (att == \"target\") {\n                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\n                        } else {\n                            pn.setAttributeNS(xlink, att, value);\n                        }\n                        break;\n                    case \"cursor\":\n                        node.style.cursor = value;\n                        break;\n                    case \"transform\":\n                        o.transform(value);\n                        break;\n                    case \"arrow-start\":\n                        addArrow(o, value);\n                        break;\n                    case \"arrow-end\":\n                        addArrow(o, value, 1);\n                        break;\n                    case \"clip-rect\":\n                        var rect = Str(value).split(separator);\n                        if (rect.length == 4) {\n                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\n                            var el = $(\"clipPath\"),\n                                rc = $(\"rect\");\n                            el.id = R.createUUID();\n                            $(rc, {\n                                x: rect[0],\n                                y: rect[1],\n                                width: rect[2],\n                                height: rect[3]\n                            });\n                            el.appendChild(rc);\n                            o.paper.defs.appendChild(el);\n                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\n                            o.clip = rc;\n                        }\n                        if (!value) {\n                            var path = node.getAttribute(\"clip-path\");\n                            if (path) {\n                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\n                                clip && clip.parentNode.removeChild(clip);\n                                $(node, {\"clip-path\": E});\n                                delete o.clip;\n                            }\n                        }\n                    break;\n                    case \"path\":\n                        if (o.type == \"path\") {\n                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\n                            o._.dirty = 1;\n                            if (o._.arrows) {\n                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n                            }\n                        }\n                        break;\n                    case \"width\":\n                        node.setAttribute(att, value);\n                        o._.dirty = 1;\n                        if (attrs.fx) {\n                            att = \"x\";\n                            value = attrs.x;\n                        } else {\n                            break;\n                        }\n                    case \"x\":\n                        if (attrs.fx) {\n                            value = -attrs.x - (attrs.width || 0);\n                        }\n                    case \"rx\":\n                        if (att == \"rx\" && o.type == \"rect\") {\n                            break;\n                        }\n                    case \"cx\":\n                        node.setAttribute(att, value);\n                        o.pattern && updatePosition(o);\n                        o._.dirty = 1;\n                        break;\n                    case \"height\":\n                        node.setAttribute(att, value);\n                        o._.dirty = 1;\n                        if (attrs.fy) {\n                            att = \"y\";\n                            value = attrs.y;\n                        } else {\n                            break;\n                        }\n                    case \"y\":\n                        if (attrs.fy) {\n                            value = -attrs.y - (attrs.height || 0);\n                        }\n                    case \"ry\":\n                        if (att == \"ry\" && o.type == \"rect\") {\n                            break;\n                        }\n                    case \"cy\":\n                        node.setAttribute(att, value);\n                        o.pattern && updatePosition(o);\n                        o._.dirty = 1;\n                        break;\n                    case \"r\":\n                        if (o.type == \"rect\") {\n                            $(node, {rx: value, ry: value});\n                        } else {\n                            node.setAttribute(att, value);\n                        }\n                        o._.dirty = 1;\n                        break;\n                    case \"src\":\n                        if (o.type == \"image\") {\n                            node.setAttributeNS(xlink, \"href\", value);\n                        }\n                        break;\n                    case \"stroke-width\":\n                        if (o._.sx != 1 || o._.sy != 1) {\n                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\n                        }\n                        node.setAttribute(att, value);\n                        if (attrs[\"stroke-dasharray\"]) {\n                            addDashes(o, attrs[\"stroke-dasharray\"], params);\n                        }\n                        if (o._.arrows) {\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n                        }\n                        break;\n                    case \"stroke-dasharray\":\n                        addDashes(o, value, params);\n                        break;\n                    case \"fill\":\n                        var isURL = Str(value).match(R._ISURL);\n                        if (isURL) {\n                            el = $(\"pattern\");\n                            var ig = $(\"image\");\n                            el.id = R.createUUID();\n                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\n                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\n                            el.appendChild(ig);\n\n                            (function (el) {\n                                R._preload(isURL[1], function () {\n                                    var w = this.offsetWidth,\n                                        h = this.offsetHeight;\n                                    $(el, {width: w, height: h});\n                                    $(ig, {width: w, height: h});\n                                });\n                            })(el);\n                            o.paper.defs.appendChild(el);\n                            $(node, {fill: \"url(#\" + el.id + \")\"});\n                            o.pattern = el;\n                            o.pattern && updatePosition(o);\n                            break;\n                        }\n                        var clr = R.getRGB(value);\n                        if (!clr.error) {\n                            delete params.gradient;\n                            delete attrs.gradient;\n                            !R.is(attrs.opacity, \"undefined\") &&\n                                R.is(params.opacity, \"undefined\") &&\n                                $(node, {opacity: attrs.opacity});\n                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\n                                R.is(params[\"fill-opacity\"], \"undefined\") &&\n                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\n                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\n                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\n                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n                                if (gradient) {\n                                    var stops = gradient.getElementsByTagName(\"stop\");\n                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\n                                }\n                            }\n                            attrs.gradient = value;\n                            attrs.fill = \"none\";\n                            break;\n                        }\n                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n                    case \"stroke\":\n                        clr = R.getRGB(value);\n                        node.setAttribute(att, clr.hex);\n                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n                        if (att == \"stroke\" && o._.arrows) {\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n                        }\n                        break;\n                    case \"gradient\":\n                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\n                        break;\n                    case \"opacity\":\n                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\n                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\n                        }\n                        // fall\n                    case \"fill-opacity\":\n                        if (attrs.gradient) {\n                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n                            if (gradient) {\n                                stops = gradient.getElementsByTagName(\"stop\");\n                                $(stops[stops.length - 1], {\"stop-opacity\": value});\n                            }\n                            break;\n                        }\n                    default:\n                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\n                        var cssrule = att.replace(/(\\-.)/g, function (w) {\n                            return w.substring(1).toUpperCase();\n                        });\n                        node.style[cssrule] = value;\n                        o._.dirty = 1;\n                        node.setAttribute(att, value);\n                        break;\n                }\n            }\n        }\n\n        tuneText(o, params);\n        node.style.visibility = vis;\n    },\n    leading = 1.2,\n    tuneText = function (el, params) {\n        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\n            return;\n        }\n        var a = el.attrs,\n            node = el.node,\n            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\"font-size\"), 10) : 10;\n\n        if (params[has](\"text\")) {\n            a.text = params.text;\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var texts = Str(params.text).split(\"\\n\"),\n                tspans = [],\n                tspan;\n            for (var i = 0, ii = texts.length; i < ii; i++) {\n                tspan = $(\"tspan\");\n                i && $(tspan, {dy: fontSize * leading, x: a.x});\n                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\n                node.appendChild(tspan);\n                tspans[i] = tspan;\n            }\n        } else {\n            tspans = node.getElementsByTagName(\"tspan\");\n            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\n                $(tspans[i], {dy: fontSize * leading, x: a.x});\n            } else {\n                $(tspans[0], {dy: 0});\n            }\n        }\n        $(node, {x: a.x, y: a.y});\n        el._.dirty = 1;\n        var bb = el._getBBox(),\n            dif = a.y - (bb.y + bb.height / 2);\n        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\n    },\n    getRealNode = function (node) {\n        if (node.parentNode && node.parentNode.tagName.toLowerCase() === \"a\") {\n            return node.parentNode;\n        } else {\n            return node;\n        }\n    },\n    Element = function (node, svg) {\n        var X = 0,\n            Y = 0;\n        /*\\\n         * Element.node\n         [ property (object) ]\n         **\n         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n         **\n         * Note: Don’t mess with it.\n         > Usage\n         | // draw a circle at coordinate 10,10 with radius of 10\n         | var c = paper.circle(10, 10, 10);\n         | c.node.onclick = function () {\n         |     c.attr(\"fill\", \"red\");\n         | };\n        \\*/\n        this[0] = this.node = node;\n        /*\\\n         * Element.raphael\n         [ property (object) ]\n         **\n         * Internal reference to @Raphael object. In case it is not available.\n         > Usage\n         | Raphael.el.red = function () {\n         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\n         |     hsb.h = 1;\n         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\n         | }\n        \\*/\n        node.raphael = true;\n        /*\\\n         * Element.id\n         [ property (number) ]\n         **\n         * Unique id of the element. Especially useful when you want to listen to events of the element,\n         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\n        \\*/\n        this.id = guid();\n        node.raphaelid = this.id;\n\n        /**\n        * Method that returns a 5 letter/digit id, enough for 36^5 = 60466176 elements\n        * @returns {string} id\n        */\n        function guid() {\n            return (\"0000\" + (Math.random()*Math.pow(36,5) << 0).toString(36)).slice(-5);\n        }\n\n        this.matrix = R.matrix();\n        this.realPath = null;\n        /*\\\n         * Element.paper\n         [ property (object) ]\n         **\n         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\n         > Usage\n         | Raphael.el.cross = function () {\n         |     this.attr({fill: \"red\"});\n         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\n         |         .attr({stroke: \"red\"});\n         | }\n        \\*/\n        this.paper = svg;\n        this.attrs = this.attrs || {};\n        this._ = {\n            transform: [],\n            sx: 1,\n            sy: 1,\n            deg: 0,\n            dx: 0,\n            dy: 0,\n            dirty: 1\n        };\n        !svg.bottom && (svg.bottom = this);\n        /*\\\n         * Element.prev\n         [ property (object) ]\n         **\n         * Reference to the previous element in the hierarchy.\n        \\*/\n        this.prev = svg.top;\n        svg.top && (svg.top.next = this);\n        svg.top = this;\n        /*\\\n         * Element.next\n         [ property (object) ]\n         **\n         * Reference to the next element in the hierarchy.\n        \\*/\n        this.next = null;\n    },\n    elproto = R.el;\n\n    Element.prototype = elproto;\n    elproto.constructor = Element;\n\n    R._engine.path = function (pathString, SVG) {\n        var el = $(\"path\");\n        SVG.canvas && SVG.canvas.appendChild(el);\n        var p = new Element(el, SVG);\n        p.type = \"path\";\n        setFillAndStroke(p, {\n            fill: \"none\",\n            stroke: \"#000\",\n            path: pathString\n        });\n        return p;\n    };\n    /*\\\n     * Element.rotate\n     [ method ]\n     **\n     * Deprecated! Use @Element.transform instead.\n     * Adds rotation by given angle around given point to the list of\n     * transformations of the element.\n     > Parameters\n     - deg (number) angle in degrees\n     - cx (number) #optional x coordinate of the centre of rotation\n     - cy (number) #optional y coordinate of the centre of rotation\n     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\n     = (object) @Element\n    \\*/\n    elproto.rotate = function (deg, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        deg = Str(deg).split(separator);\n        if (deg.length - 1) {\n            cx = toFloat(deg[1]);\n            cy = toFloat(deg[2]);\n        }\n        deg = toFloat(deg[0]);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n            cx = bbox.x + bbox.width / 2;\n            cy = bbox.y + bbox.height / 2;\n        }\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n        return this;\n    };\n    /*\\\n     * Element.scale\n     [ method ]\n     **\n     * Deprecated! Use @Element.transform instead.\n     * Adds scale by given amount relative to given point to the list of\n     * transformations of the element.\n     > Parameters\n     - sx (number) horisontal scale amount\n     - sy (number) vertical scale amount\n     - cx (number) #optional x coordinate of the centre of scale\n     - cy (number) #optional y coordinate of the centre of scale\n     * If cx & cy aren’t specified centre of the shape is used instead.\n     = (object) @Element\n    \\*/\n    elproto.scale = function (sx, sy, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        sx = Str(sx).split(separator);\n        if (sx.length - 1) {\n            sy = toFloat(sx[1]);\n            cx = toFloat(sx[2]);\n            cy = toFloat(sx[3]);\n        }\n        sx = toFloat(sx[0]);\n        (sy == null) && (sy = sx);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n        }\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n        return this;\n    };\n    /*\\\n     * Element.translate\n     [ method ]\n     **\n     * Deprecated! Use @Element.transform instead.\n     * Adds translation by given amount to the list of transformations of the element.\n     > Parameters\n     - dx (number) horisontal shift\n     - dy (number) vertical shift\n     = (object) @Element\n    \\*/\n    elproto.translate = function (dx, dy) {\n        if (this.removed) {\n            return this;\n        }\n        dx = Str(dx).split(separator);\n        if (dx.length - 1) {\n            dy = toFloat(dx[1]);\n        }\n        dx = toFloat(dx[0]) || 0;\n        dy = +dy || 0;\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n        return this;\n    };\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Adds transformation to the element which is separate to other attributes,\n     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\n     * of transformation string is similar to the path string syntax:\n     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\n     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\n     * scale and `m` is for matrix.\n     *\n     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\n     *\n     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\n     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\n     * coordinates as optional parameters, the default is the centre point of the element.\n     * Matrix accepts six parameters.\n     > Usage\n     | var el = paper.rect(10, 20, 300, 200);\n     | // translate 100, 100, rotate 45°, translate -100, 0\n     | el.transform(\"t100,100r45t-100,0\");\n     | // if you want you can append or prepend transformations\n     | el.transform(\"...t50,50\");\n     | el.transform(\"s2...\");\n     | // or even wrap\n     | el.transform(\"t50,50...t-50-50\");\n     | // to reset transformation call method with empty string\n     | el.transform(\"\");\n     | // to get current value call it without parameters\n     | console.log(el.transform());\n     > Parameters\n     - tstr (string) #optional transformation string\n     * If tstr isn’t specified\n     = (string) current transformation string\n     * else\n     = (object) @Element\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            return _.transform;\n        }\n        R._extractTransform(this, tstr);\n\n        this.clip && $(this.clip, {transform: this.matrix.invert()});\n        this.pattern && updatePosition(this);\n        this.node && $(this.node, {transform: this.matrix});\n\n        if (_.sx != 1 || _.sy != 1) {\n            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\n            this.attr({\"stroke-width\": sw});\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.hide\n     [ method ]\n     **\n     * Makes element invisible. See @Element.show.\n     = (object) @Element\n    \\*/\n    elproto.hide = function () {\n        if(!this.removed) this.node.style.display = \"none\";\n        return this;\n    };\n    /*\\\n     * Element.show\n     [ method ]\n     **\n     * Makes element visible. See @Element.hide.\n     = (object) @Element\n    \\*/\n    elproto.show = function () {\n        if(!this.removed) this.node.style.display = \"\";\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the paper.\n    \\*/\n    elproto.remove = function () {\n        var node = getRealNode(this.node);\n        if (this.removed || !node.parentNode) {\n            return;\n        }\n        var paper = this.paper;\n        paper.__set__ && paper.__set__.exclude(this);\n        eve.unbind(\"raphael.*.*.\" + this.id);\n        if (this.gradient) {\n            paper.defs.removeChild(this.gradient);\n        }\n        R._tear(this, paper);\n\n        node.parentNode.removeChild(node);\n\n        // Remove custom data for element\n        this.removeData();\n\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n        this.removed = true;\n    };\n    elproto._getBBox = function () {\n        if (this.node.style.display == \"none\") {\n            this.show();\n            var hide = true;\n        }\n        var canvasHidden = false,\n            containerStyle;\n        if (this.paper.canvas.parentElement) {\n          containerStyle = this.paper.canvas.parentElement.style;\n        } //IE10+ can't find parentElement\n        else if (this.paper.canvas.parentNode) {\n          containerStyle = this.paper.canvas.parentNode.style;\n        }\n\n        if(containerStyle && containerStyle.display == \"none\") {\n          canvasHidden = true;\n          containerStyle.display = \"\";\n        }\n        var bbox = {};\n        try {\n            bbox = this.node.getBBox();\n        } catch(e) {\n            // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\n            bbox = {\n                x: this.node.clientLeft,\n                y: this.node.clientTop,\n                width: this.node.clientWidth,\n                height: this.node.clientHeight\n            }\n        } finally {\n            bbox = bbox || {};\n            if(canvasHidden){\n              containerStyle.display = \"none\";\n            }\n        }\n        hide && this.hide();\n        return bbox;\n    };\n    /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Sets the attributes of the element.\n     > Parameters\n     - attrName (string) attribute’s name\n     - value (string) value\n     * or\n     - params (object) object of name/value pairs\n     * or\n     - attrName (string) attribute’s name\n     * or\n     - attrNames (array) in this case method returns array of current values for given attribute names\n     = (object) @Element if attrsName & value or params are passed in.\n     = (...) value of the attribute if only attrsName is passed in.\n     = (array) array of values of the attribute if attrsNames is passed in.\n     = (object) object of attributes if nothing is passed in.\n     > Possible parameters\n     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\n     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\n     o clip-rect (string) comma or space separated values: x, y, width and height\n     o cursor (string) CSS type of the cursor\n     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\n     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\n     o fill (string) colour, gradient or image\n     o fill-opacity (number)\n     o font (string)\n     o font-family (string)\n     o font-size (number) font size in pixels\n     o font-weight (string)\n     o height (number)\n     o href (string) URL, if specified element behaves as hyperlink\n     o opacity (number)\n     o path (string) SVG path string format\n     o r (number) radius of the circle, ellipse or rounded corner on the rect\n     o rx (number) horisontal radius of the ellipse\n     o ry (number) vertical radius of the ellipse\n     o src (string) image URL, only works for @Element.image element\n     o stroke (string) stroke colour\n     o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\n     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\n     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\n     o stroke-miterlimit (number)\n     o stroke-opacity (number)\n     o stroke-width (number) stroke width in pixels, default is '1'\n     o target (string) used with href\n     o text (string) contents of the text element. Use `\\n` for multiline text\n     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\n     o title (string) will create tooltip with a given text\n     o transform (string) see @Element.transform\n     o width (number)\n     o x (number)\n     o y (number)\n     > Gradients\n     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\n     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\n     *\n     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\n     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\n     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\n     > Path String\n     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\n     > Colour Parsing\n     # <ul>\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\n     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\n     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\n     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\n     # </ul>\n    \\*/\n    elproto.attr = function (name, value) {\n        if (this.removed) {\n            return this;\n        }\n        if (name == null) {\n            var res = {};\n            for (var a in this.attrs) if (this.attrs[has](a)) {\n                res[a] = this.attrs[a];\n            }\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n            res.transform = this._.transform;\n            return res;\n        }\n        if (value == null && R.is(name, \"string\")) {\n            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\n                return this.attrs.gradient;\n            }\n            if (name == \"transform\") {\n                return this._.transform;\n            }\n            var names = name.split(separator),\n                out = {};\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                name = names[i];\n                if (name in this.attrs) {\n                    out[name] = this.attrs[name];\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n                    out[name] = this.paper.customAttributes[name].def;\n                } else {\n                    out[name] = R._availableAttrs[name];\n                }\n            }\n            return ii - 1 ? out : out[names[0]];\n        }\n        if (value == null && R.is(name, \"array\")) {\n            out = {};\n            for (i = 0, ii = name.length; i < ii; i++) {\n                out[name[i]] = this.attr(name[i]);\n            }\n            return out;\n        }\n        if (value != null) {\n            var params = {};\n            params[name] = value;\n        } else if (name != null && R.is(name, \"object\")) {\n            params = name;\n        }\n        for (var key in params) {\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n        }\n        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n            this.attrs[key] = params[key];\n            for (var subkey in par) if (par[has](subkey)) {\n                params[subkey] = par[subkey];\n            }\n        }\n        setFillAndStroke(this, params);\n        return this;\n    };\n    /*\\\n     * Element.toFront\n     [ method ]\n     **\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\n     = (object) @Element\n    \\*/\n    elproto.toFront = function () {\n        if (this.removed) {\n            return this;\n        }\n        var node = getRealNode(this.node);\n        node.parentNode.appendChild(node);\n        var svg = this.paper;\n        svg.top != this && R._tofront(this, svg);\n        return this;\n    };\n    /*\\\n     * Element.toBack\n     [ method ]\n     **\n     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\n     = (object) @Element\n    \\*/\n    elproto.toBack = function () {\n        if (this.removed) {\n            return this;\n        }\n        var node = getRealNode(this.node);\n        var parentNode = node.parentNode;\n        parentNode.insertBefore(node, parentNode.firstChild);\n        R._toback(this, this.paper);\n        var svg = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts current object after the given one.\n     = (object) @Element\n    \\*/\n    elproto.insertAfter = function (element) {\n        if (this.removed || !element) {\n            return this;\n        }\n\n        var node = getRealNode(this.node);\n        var afterNode = getRealNode(element.node || element[element.length - 1].node);\n        if (afterNode.nextSibling) {\n            afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\n        } else {\n            afterNode.parentNode.appendChild(node);\n        }\n        R._insertafter(this, element, this.paper);\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts current object before the given one.\n     = (object) @Element\n    \\*/\n    elproto.insertBefore = function (element) {\n        if (this.removed || !element) {\n            return this;\n        }\n\n        var node = getRealNode(this.node);\n        var beforeNode = getRealNode(element.node || element[0].node);\n        beforeNode.parentNode.insertBefore(node, beforeNode);\n        R._insertbefore(this, element, this.paper);\n        return this;\n    };\n    elproto.blur = function (size) {\n        // Experimental. No Safari support. Use it on your own risk.\n        var t = this;\n        if (+size !== 0) {\n            var fltr = $(\"filter\"),\n                blur = $(\"feGaussianBlur\");\n            t.attrs.blur = size;\n            fltr.id = R.createUUID();\n            $(blur, {stdDeviation: +size || 1.5});\n            fltr.appendChild(blur);\n            t.paper.defs.appendChild(fltr);\n            t._blur = fltr;\n            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\n        } else {\n            if (t._blur) {\n                t._blur.parentNode.removeChild(t._blur);\n                delete t._blur;\n                delete t.attrs.blur;\n            }\n            t.node.removeAttribute(\"filter\");\n        }\n        return t;\n    };\n    R._engine.circle = function (svg, x, y, r) {\n        var el = $(\"circle\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\n        res.type = \"circle\";\n        $(el, res.attrs);\n        return res;\n    };\n    R._engine.rect = function (svg, x, y, w, h, r) {\n        var el = $(\"rect\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\n        res.type = \"rect\";\n        $(el, res.attrs);\n        return res;\n    };\n    R._engine.ellipse = function (svg, x, y, rx, ry) {\n        var el = $(\"ellipse\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\n        res.type = \"ellipse\";\n        $(el, res.attrs);\n        return res;\n    };\n    R._engine.image = function (svg, src, x, y, w, h) {\n        var el = $(\"image\");\n        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\n        el.setAttributeNS(xlink, \"href\", src);\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {x: x, y: y, width: w, height: h, src: src};\n        res.type = \"image\";\n        return res;\n    };\n    R._engine.text = function (svg, x, y, text) {\n        var el = $(\"text\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {\n            x: x,\n            y: y,\n            \"text-anchor\": \"middle\",\n            text: text,\n            \"font-family\": R._availableAttrs[\"font-family\"],\n            \"font-size\": R._availableAttrs[\"font-size\"],\n            stroke: \"none\",\n            fill: \"#000\"\n        };\n        res.type = \"text\";\n        setFillAndStroke(res, res.attrs);\n        return res;\n    };\n    R._engine.setSize = function (width, height) {\n        this.width = width || this.width;\n        this.height = height || this.height;\n        this.canvas.setAttribute(\"width\", this.width);\n        this.canvas.setAttribute(\"height\", this.height);\n        if (this._viewBox) {\n            this.setViewBox.apply(this, this._viewBox);\n        }\n        return this;\n    };\n    R._engine.create = function () {\n        var con = R._getContainer.apply(0, arguments),\n            container = con && con.container;\n        if (!container) {\n            throw new Error(\"SVG container not found.\");\n        }\n        var x = con.x,\n            y = con.y,\n            width = con.width,\n            height = con.height,\n            cnvs = $(\"svg\"),\n            css = \"overflow:hidden;\",\n            isFloating;\n        x = x || 0;\n        y = y || 0;\n        width = width || 512;\n        height = height || 342;\n        $(cnvs, {\n            height: height,\n            version: 1.1,\n            width: width,\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\"\n        });\n        if (container == 1) {\n            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\n            R._g.doc.body.appendChild(cnvs);\n            isFloating = 1;\n        } else {\n            cnvs.style.cssText = css + \"position:relative\";\n            if (container.firstChild) {\n                container.insertBefore(cnvs, container.firstChild);\n            } else {\n                container.appendChild(cnvs);\n            }\n        }\n        container = new R._Paper;\n        container.width = width;\n        container.height = height;\n        container.canvas = cnvs;\n        container.clear();\n        container._left = container._top = 0;\n        isFloating && (container.renderfix = function () {});\n        container.renderfix();\n        return container;\n    };\n    R._engine.setViewBox = function (x, y, w, h, fit) {\n        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n        var paperSize = this.getSize(),\n            size = mmax(w / paperSize.width, h / paperSize.height),\n            top = this.top,\n            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\n            vb,\n            sw;\n        if (x == null) {\n            if (this._vbSize) {\n                size = 1;\n            }\n            delete this._vbSize;\n            vb = \"0 0 \" + this.width + S + this.height;\n        } else {\n            this._vbSize = size;\n            vb = x + S + y + S + w + S + h;\n        }\n        $(this.canvas, {\n            viewBox: vb,\n            preserveAspectRatio: aspectRatio\n        });\n        while (size && top) {\n            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\n            top.attr({\"stroke-width\": sw});\n            top._.dirty = 1;\n            top._.dirtyT = 1;\n            top = top.prev;\n        }\n        this._viewBox = [x, y, w, h, !!fit];\n        return this;\n    };\n    /*\\\n     * Paper.renderfix\n     [ method ]\n     **\n     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependent\n     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\n     * This method fixes the issue.\n     **\n       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\n    \\*/\n    R.prototype.renderfix = function () {\n        var cnvs = this.canvas,\n            s = cnvs.style,\n            pos;\n        try {\n            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\n        } catch (e) {\n            pos = cnvs.createSVGMatrix();\n        }\n        var left = -pos.e % 1,\n            top = -pos.f % 1;\n        if (left || top) {\n            if (left) {\n                this._left = (this._left + left) % 1;\n                s.left = this._left + \"px\";\n            }\n            if (top) {\n                this._top = (this._top + top) % 1;\n                s.top = this._top + \"px\";\n            }\n        }\n    };\n    /*\\\n     * Paper.clear\n     [ method ]\n     **\n     * Clears the paper, i.e. removes all the elements.\n    \\*/\n    R.prototype.clear = function () {\n        R.eve(\"raphael.clear\", this);\n        var c = this.canvas;\n        while (c.firstChild) {\n            c.removeChild(c.firstChild);\n        }\n        this.bottom = this.top = null;\n        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\n        c.appendChild(this.desc);\n        c.appendChild(this.defs = $(\"defs\"));\n    };\n    /*\\\n     * Paper.remove\n     [ method ]\n     **\n     * Removes the paper from the DOM.\n    \\*/\n    R.prototype.remove = function () {\n        eve(\"raphael.remove\", this);\n        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n    };\n    var setproto = R.st;\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n        setproto[method] = (function (methodname) {\n            return function () {\n                var arg = arguments;\n                return this.forEach(function (el) {\n                    el[methodname].apply(el, arg);\n                });\n            };\n        })(method);\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ \"./dev/raphael.vml.js\":\n/*!****************************!*\\\n  !*** ./dev/raphael.vml.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./raphael.core */ \"./dev/raphael.core.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(R) {\n    if (R && !R.vml) {\n        return;\n    }\n\n    var has = \"hasOwnProperty\",\n        Str = String,\n        toFloat = parseFloat,\n        math = Math,\n        round = math.round,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        fillString = \"fill\",\n        separator = /[, ]+/,\n        eve = R.eve,\n        ms = \" progid:DXImageTransform.Microsoft\",\n        S = \" \",\n        E = \"\",\n        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\n        bites = /([clmz]),?([^clmz]*)/gi,\n        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\n        val = /-?[^,\\s-]+/g,\n        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",\n        zoom = 21600,\n        pathTypes = {path: 1, rect: 1, image: 1},\n        ovalTypes = {circle: 1, ellipse: 1},\n        path2vml = function (path) {\n            var total =  /[ahqstv]/ig,\n                command = R._pathToAbsolute;\n            Str(path).match(total) && (command = R._path2curve);\n            total = /[clmz]/g;\n            if (command == R._pathToAbsolute && !Str(path).match(total)) {\n                var res = Str(path).replace(bites, function (all, command, args) {\n                    var vals = [],\n                        isMove = command.toLowerCase() == \"m\",\n                        res = map[command];\n                    args.replace(val, function (value) {\n                        if (isMove && vals.length == 2) {\n                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\n                            vals = [];\n                        }\n                        vals.push(round(value * zoom));\n                    });\n                    return res + vals;\n                });\n                return res;\n            }\n            var pa = command(path), p, r;\n            res = [];\n            for (var i = 0, ii = pa.length; i < ii; i++) {\n                p = pa[i];\n                r = pa[i][0].toLowerCase();\n                r == \"z\" && (r = \"x\");\n                for (var j = 1, jj = p.length; j < jj; j++) {\n                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\n                }\n                res.push(r);\n            }\n            return res.join(S);\n        },\n        compensation = function (deg, dx, dy) {\n            var m = R.matrix();\n            m.rotate(-deg, .5, .5);\n            return {\n                dx: m.x(dx, dy),\n                dy: m.y(dx, dy)\n            };\n        },\n        setCoords = function (p, sx, sy, dx, dy, deg) {\n            var _ = p._,\n                m = p.matrix,\n                fillpos = _.fillpos,\n                o = p.node,\n                s = o.style,\n                y = 1,\n                flip = \"\",\n                dxdy,\n                kx = zoom / sx,\n                ky = zoom / sy;\n            s.visibility = \"hidden\";\n            if (!sx || !sy) {\n                return;\n            }\n            o.coordsize = abs(kx) + S + abs(ky);\n            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\n            if (deg) {\n                var c = compensation(deg, dx, dy);\n                dx = c.dx;\n                dy = c.dy;\n            }\n            sx < 0 && (flip += \"x\");\n            sy < 0 && (flip += \" y\") && (y = -1);\n            s.flip = flip;\n            o.coordorigin = (dx * -kx) + S + (dy * -ky);\n            if (fillpos || _.fillsize) {\n                var fill = o.getElementsByTagName(fillString);\n                fill = fill && fill[0];\n                o.removeChild(fill);\n                if (fillpos) {\n                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\n                    fill.position = c.dx * y + S + c.dy * y;\n                }\n                if (_.fillsize) {\n                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\n                }\n                o.appendChild(fill);\n            }\n            s.visibility = \"visible\";\n        };\n    R.toString = function () {\n        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\n    };\n    var addArrow = function (o, value, isEnd) {\n        var values = Str(value).toLowerCase().split(\"-\"),\n            se = isEnd ? \"end\" : \"start\",\n            i = values.length,\n            type = \"classic\",\n            w = \"medium\",\n            h = \"medium\";\n        while (i--) {\n            switch (values[i]) {\n                case \"block\":\n                case \"classic\":\n                case \"oval\":\n                case \"diamond\":\n                case \"open\":\n                case \"none\":\n                    type = values[i];\n                    break;\n                case \"wide\":\n                case \"narrow\": h = values[i]; break;\n                case \"long\":\n                case \"short\": w = values[i]; break;\n            }\n        }\n        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\n        stroke[se + \"arrow\"] = type;\n        stroke[se + \"arrowlength\"] = w;\n        stroke[se + \"arrowwidth\"] = h;\n    },\n    setFillAndStroke = function (o, params) {\n        // o.paper.canvas.style.display = \"none\";\n        o.attrs = o.attrs || {};\n        var node = o.node,\n            a = o.attrs,\n            s = node.style,\n            xy,\n            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\n            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\n            res = o;\n\n\n        for (var par in params) if (params[has](par)) {\n            a[par] = params[par];\n        }\n        if (newpath) {\n            a.path = R._getPath[o.type](o);\n            o._.dirty = 1;\n        }\n        params.href && (node.href = params.href);\n        params.title && (node.title = params.title);\n        params.target && (node.target = params.target);\n        params.cursor && (s.cursor = params.cursor);\n        \"blur\" in params && o.blur(params.blur);\n        if (params.path && o.type == \"path\" || newpath) {\n            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\n            o._.dirty = 1;\n            if (o.type == \"image\") {\n                o._.fillpos = [a.x, a.y];\n                o._.fillsize = [a.width, a.height];\n                setCoords(o, 1, 1, 0, 0, 0);\n            }\n        }\n        \"transform\" in params && o.transform(params.transform);\n        if (isOval) {\n            var cx = +a.cx,\n                cy = +a.cy,\n                rx = +a.rx || +a.r || 0,\n                ry = +a.ry || +a.r || 0;\n            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\n            o._.dirty = 1;\n        }\n        if (\"clip-rect\" in params) {\n            var rect = Str(params[\"clip-rect\"]).split(separator);\n            if (rect.length == 4) {\n                rect[2] = +rect[2] + (+rect[0]);\n                rect[3] = +rect[3] + (+rect[1]);\n                var div = node.clipRect || R._g.doc.createElement(\"div\"),\n                    dstyle = div.style;\n                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\n                if (!node.clipRect) {\n                    dstyle.position = \"absolute\";\n                    dstyle.top = 0;\n                    dstyle.left = 0;\n                    dstyle.width = o.paper.width + \"px\";\n                    dstyle.height = o.paper.height + \"px\";\n                    node.parentNode.insertBefore(div, node);\n                    div.appendChild(node);\n                    node.clipRect = div;\n                }\n            }\n            if (!params[\"clip-rect\"]) {\n                node.clipRect && (node.clipRect.style.clip = \"auto\");\n            }\n        }\n        if (o.textpath) {\n            var textpathStyle = o.textpath.style;\n            params.font && (textpathStyle.font = params.font);\n            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\n            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\n            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\n            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\n        }\n        if (\"arrow-start\" in params) {\n            addArrow(res, params[\"arrow-start\"]);\n        }\n        if (\"arrow-end\" in params) {\n            addArrow(res, params[\"arrow-end\"], 1);\n        }\n        if (params.opacity != null ||\n            params.fill != null ||\n            params.src != null ||\n            params.stroke != null ||\n            params[\"stroke-width\"] != null ||\n            params[\"stroke-opacity\"] != null ||\n            params[\"fill-opacity\"] != null ||\n            params[\"stroke-dasharray\"] != null ||\n            params[\"stroke-miterlimit\"] != null ||\n            params[\"stroke-linejoin\"] != null ||\n            params[\"stroke-linecap\"] != null) {\n            var fill = node.getElementsByTagName(fillString),\n                newfill = false;\n            fill = fill && fill[0];\n            !fill && (newfill = fill = createNode(fillString));\n            if (o.type == \"image\" && params.src) {\n                fill.src = params.src;\n            }\n            params.fill && (fill.on = true);\n            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\n                fill.on = false;\n            }\n            if (fill.on && params.fill) {\n                var isURL = Str(params.fill).match(R._ISURL);\n                if (isURL) {\n                    fill.parentNode == node && node.removeChild(fill);\n                    fill.rotate = true;\n                    fill.src = isURL[1];\n                    fill.type = \"tile\";\n                    var bbox = o.getBBox(1);\n                    fill.position = bbox.x + S + bbox.y;\n                    o._.fillpos = [bbox.x, bbox.y];\n\n                    R._preload(isURL[1], function () {\n                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\n                    });\n                } else {\n                    fill.color = R.getRGB(params.fill).hex;\n                    fill.src = E;\n                    fill.type = \"solid\";\n                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\n                        a.fill = \"none\";\n                        a.gradient = params.fill;\n                        fill.rotate = false;\n                    }\n                }\n            }\n            if (\"fill-opacity\" in params || \"opacity\" in params) {\n                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\n                opacity = mmin(mmax(opacity, 0), 1);\n                fill.opacity = opacity;\n                if (fill.src) {\n                    fill.color = \"none\";\n                }\n            }\n            node.appendChild(fill);\n            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\n            newstroke = false;\n            !stroke && (newstroke = stroke = createNode(\"stroke\"));\n            if ((params.stroke && params.stroke != \"none\") ||\n                params[\"stroke-width\"] ||\n                params[\"stroke-opacity\"] != null ||\n                params[\"stroke-dasharray\"] ||\n                params[\"stroke-miterlimit\"] ||\n                params[\"stroke-linejoin\"] ||\n                params[\"stroke-linecap\"]) {\n                stroke.on = true;\n            }\n            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\n            var strokeColor = R.getRGB(params.stroke);\n            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\n            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\n            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\n            opacity = mmin(mmax(opacity, 0), 1);\n            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\n            params[\"stroke-width\"] && (stroke.weight = width);\n            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\n            stroke.opacity = opacity;\n\n            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\n            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\n            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\n            if (\"stroke-dasharray\" in params) {\n                var dasharray = {\n                    \"-\": \"shortdash\",\n                    \".\": \"shortdot\",\n                    \"-.\": \"shortdashdot\",\n                    \"-..\": \"shortdashdotdot\",\n                    \". \": \"dot\",\n                    \"- \": \"dash\",\n                    \"--\": \"longdash\",\n                    \"- .\": \"dashdot\",\n                    \"--.\": \"longdashdot\",\n                    \"--..\": \"longdashdotdot\"\n                };\n                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\n            }\n            newstroke && node.appendChild(stroke);\n        }\n        if (res.type == \"text\") {\n            res.paper.canvas.style.display = E;\n            var span = res.paper.span,\n                m = 100,\n                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\n            s = span.style;\n            a.font && (s.font = a.font);\n            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\n            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\n            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\n            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\n            s.fontSize = fontSize * m + \"px\";\n            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\n            var brect = span.getBoundingClientRect();\n            res.W = a.w = (brect.right - brect.left) / m;\n            res.H = a.h = (brect.bottom - brect.top) / m;\n            // res.paper.canvas.style.display = \"none\";\n            res.X = a.x;\n            res.Y = a.y + res.H / 2;\n\n            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\n            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\n            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\n                res._.dirty = 1;\n                break;\n            }\n\n            // text-anchor emulation\n            switch (a[\"text-anchor\"]) {\n                case \"start\":\n                    res.textpath.style[\"v-text-align\"] = \"left\";\n                    res.bbx = res.W / 2;\n                break;\n                case \"end\":\n                    res.textpath.style[\"v-text-align\"] = \"right\";\n                    res.bbx = -res.W / 2;\n                break;\n                default:\n                    res.textpath.style[\"v-text-align\"] = \"center\";\n                    res.bbx = 0;\n                break;\n            }\n            res.textpath.style[\"v-text-kern\"] = true;\n        }\n        // res.paper.canvas.style.display = E;\n    },\n    addGradientFill = function (o, gradient, fill) {\n        o.attrs = o.attrs || {};\n        var attrs = o.attrs,\n            pow = Math.pow,\n            opacity,\n            oindex,\n            type = \"linear\",\n            fxfy = \".5 .5\";\n        o.attrs.gradient = gradient;\n        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\n            type = \"radial\";\n            if (fx && fy) {\n                fx = toFloat(fx);\n                fy = toFloat(fy);\n                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\n                fxfy = fx + S + fy;\n            }\n            return E;\n        });\n        gradient = gradient.split(/\\s*\\-\\s*/);\n        if (type == \"linear\") {\n            var angle = gradient.shift();\n            angle = -toFloat(angle);\n            if (isNaN(angle)) {\n                return null;\n            }\n        }\n        var dots = R._parseDots(gradient);\n        if (!dots) {\n            return null;\n        }\n        o = o.shape || o.node;\n        if (dots.length) {\n            o.removeChild(fill);\n            fill.on = true;\n            fill.method = \"none\";\n            fill.color = dots[0].color;\n            fill.color2 = dots[dots.length - 1].color;\n            var clrs = [];\n            for (var i = 0, ii = dots.length; i < ii; i++) {\n                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\n            }\n            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\n            if (type == \"radial\") {\n                fill.type = \"gradientTitle\";\n                fill.focus = \"100%\";\n                fill.focussize = \"0 0\";\n                fill.focusposition = fxfy;\n                fill.angle = 0;\n            } else {\n                // fill.rotate= true;\n                fill.type = \"gradient\";\n                fill.angle = (270 - angle) % 360;\n            }\n            o.appendChild(fill);\n        }\n        return 1;\n    },\n    Element = function (node, vml) {\n        this[0] = this.node = node;\n        node.raphael = true;\n        this.id = R._oid++;\n        node.raphaelid = this.id;\n        this.X = 0;\n        this.Y = 0;\n        this.attrs = {};\n        this.paper = vml;\n        this.matrix = R.matrix();\n        this._ = {\n            transform: [],\n            sx: 1,\n            sy: 1,\n            dx: 0,\n            dy: 0,\n            deg: 0,\n            dirty: 1,\n            dirtyT: 1\n        };\n        !vml.bottom && (vml.bottom = this);\n        this.prev = vml.top;\n        vml.top && (vml.top.next = this);\n        vml.top = this;\n        this.next = null;\n    };\n    var elproto = R.el;\n\n    Element.prototype = elproto;\n    elproto.constructor = Element;\n    elproto.transform = function (tstr) {\n        if (tstr == null) {\n            return this._.transform;\n        }\n        var vbs = this.paper._viewBoxShift,\n            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\n            oldt;\n        if (vbs) {\n            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\n        }\n        R._extractTransform(this, vbt + tstr);\n        var matrix = this.matrix.clone(),\n            skew = this.skew,\n            o = this.node,\n            split,\n            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\n            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\n        matrix.translate(1, 1);\n        if (isPatt || isGrad || this.type == \"image\") {\n            skew.matrix = \"1 0 0 1\";\n            skew.offset = \"0 0\";\n            split = matrix.split();\n            if ((isGrad && split.noRotation) || !split.isSimple) {\n                o.style.filter = matrix.toFilter();\n                var bb = this.getBBox(),\n                    bbt = this.getBBox(1),\n                    dx = bb.x - bbt.x,\n                    dy = bb.y - bbt.y;\n                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\n                setCoords(this, 1, 1, dx, dy, 0);\n            } else {\n                o.style.filter = E;\n                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\n            }\n        } else {\n            o.style.filter = E;\n            skew.matrix = Str(matrix);\n            skew.offset = matrix.offset();\n        }\n        if (oldt !== null) { // empty string value is true as well\n            this._.transform = oldt;\n            R._extractTransform(this, oldt);\n        }\n        return this;\n    };\n    elproto.rotate = function (deg, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        if (deg == null) {\n            return;\n        }\n        deg = Str(deg).split(separator);\n        if (deg.length - 1) {\n            cx = toFloat(deg[1]);\n            cy = toFloat(deg[2]);\n        }\n        deg = toFloat(deg[0]);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n            cx = bbox.x + bbox.width / 2;\n            cy = bbox.y + bbox.height / 2;\n        }\n        this._.dirtyT = 1;\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n        return this;\n    };\n    elproto.translate = function (dx, dy) {\n        if (this.removed) {\n            return this;\n        }\n        dx = Str(dx).split(separator);\n        if (dx.length - 1) {\n            dy = toFloat(dx[1]);\n        }\n        dx = toFloat(dx[0]) || 0;\n        dy = +dy || 0;\n        if (this._.bbox) {\n            this._.bbox.x += dx;\n            this._.bbox.y += dy;\n        }\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n        return this;\n    };\n    elproto.scale = function (sx, sy, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        sx = Str(sx).split(separator);\n        if (sx.length - 1) {\n            sy = toFloat(sx[1]);\n            cx = toFloat(sx[2]);\n            cy = toFloat(sx[3]);\n            isNaN(cx) && (cx = null);\n            isNaN(cy) && (cy = null);\n        }\n        sx = toFloat(sx[0]);\n        (sy == null) && (sy = sx);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n        }\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n        this._.dirtyT = 1;\n        return this;\n    };\n    elproto.hide = function () {\n        !this.removed && (this.node.style.display = \"none\");\n        return this;\n    };\n    elproto.show = function () {\n        !this.removed && (this.node.style.display = E);\n        return this;\n    };\n    // Needed to fix the vml setViewBox issues\n    elproto.auxGetBBox = R.el.getBBox;\n    elproto.getBBox = function(){\n      var b = this.auxGetBBox();\n      if (this.paper && this.paper._viewBoxShift)\n      {\n        var c = {};\n        var z = 1/this.paper._viewBoxShift.scale;\n        c.x = b.x - this.paper._viewBoxShift.dx;\n        c.x *= z;\n        c.y = b.y - this.paper._viewBoxShift.dy;\n        c.y *= z;\n        c.width  = b.width  * z;\n        c.height = b.height * z;\n        c.x2 = c.x + c.width;\n        c.y2 = c.y + c.height;\n        return c;\n      }\n      return b;\n    };\n    elproto._getBBox = function () {\n        if (this.removed) {\n            return {};\n        }\n        return {\n            x: this.X + (this.bbx || 0) - this.W / 2,\n            y: this.Y - this.H,\n            width: this.W,\n            height: this.H\n        };\n    };\n    elproto.remove = function () {\n        if (this.removed || !this.node.parentNode) {\n            return;\n        }\n        this.paper.__set__ && this.paper.__set__.exclude(this);\n        R.eve.unbind(\"raphael.*.*.\" + this.id);\n        R._tear(this, this.paper);\n        this.node.parentNode.removeChild(this.node);\n        this.shape && this.shape.parentNode.removeChild(this.shape);\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n        this.removed = true;\n    };\n    elproto.attr = function (name, value) {\n        if (this.removed) {\n            return this;\n        }\n        if (name == null) {\n            var res = {};\n            for (var a in this.attrs) if (this.attrs[has](a)) {\n                res[a] = this.attrs[a];\n            }\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n            res.transform = this._.transform;\n            return res;\n        }\n        if (value == null && R.is(name, \"string\")) {\n            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\n                return this.attrs.gradient;\n            }\n            var names = name.split(separator),\n                out = {};\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                name = names[i];\n                if (name in this.attrs) {\n                    out[name] = this.attrs[name];\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n                    out[name] = this.paper.customAttributes[name].def;\n                } else {\n                    out[name] = R._availableAttrs[name];\n                }\n            }\n            return ii - 1 ? out : out[names[0]];\n        }\n        if (this.attrs && value == null && R.is(name, \"array\")) {\n            out = {};\n            for (i = 0, ii = name.length; i < ii; i++) {\n                out[name[i]] = this.attr(name[i]);\n            }\n            return out;\n        }\n        var params;\n        if (value != null) {\n            params = {};\n            params[name] = value;\n        }\n        value == null && R.is(name, \"object\") && (params = name);\n        for (var key in params) {\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n        }\n        if (params) {\n            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n                this.attrs[key] = params[key];\n                for (var subkey in par) if (par[has](subkey)) {\n                    params[subkey] = par[subkey];\n                }\n            }\n            // this.paper.canvas.style.display = \"none\";\n            if (params.text && this.type == \"text\") {\n                this.textpath.string = params.text;\n            }\n            setFillAndStroke(this, params);\n            // this.paper.canvas.style.display = E;\n        }\n        return this;\n    };\n    elproto.toFront = function () {\n        !this.removed && this.node.parentNode.appendChild(this.node);\n        this.paper && this.paper.top != this && R._tofront(this, this.paper);\n        return this;\n    };\n    elproto.toBack = function () {\n        if (this.removed) {\n            return this;\n        }\n        if (this.node.parentNode.firstChild != this.node) {\n            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\n            R._toback(this, this.paper);\n        }\n        return this;\n    };\n    elproto.insertAfter = function (element) {\n        if (this.removed) {\n            return this;\n        }\n        if (element.constructor == R.st.constructor) {\n            element = element[element.length - 1];\n        }\n        if (element.node.nextSibling) {\n            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\n        } else {\n            element.node.parentNode.appendChild(this.node);\n        }\n        R._insertafter(this, element, this.paper);\n        return this;\n    };\n    elproto.insertBefore = function (element) {\n        if (this.removed) {\n            return this;\n        }\n        if (element.constructor == R.st.constructor) {\n            element = element[0];\n        }\n        element.node.parentNode.insertBefore(this.node, element.node);\n        R._insertbefore(this, element, this.paper);\n        return this;\n    };\n    elproto.blur = function (size) {\n        var s = this.node.runtimeStyle,\n            f = s.filter;\n        f = f.replace(blurregexp, E);\n        if (+size !== 0) {\n            this.attrs.blur = size;\n            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\n            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\n        } else {\n            s.filter = f;\n            s.margin = 0;\n            delete this.attrs.blur;\n        }\n        return this;\n    };\n\n    R._engine.path = function (pathString, vml) {\n        var el = createNode(\"shape\");\n        el.style.cssText = cssDot;\n        el.coordsize = zoom + S + zoom;\n        el.coordorigin = vml.coordorigin;\n        var p = new Element(el, vml),\n            attr = {fill: \"none\", stroke: \"#000\"};\n        pathString && (attr.path = pathString);\n        p.type = \"path\";\n        p.path = [];\n        p.Path = E;\n        setFillAndStroke(p, attr);\n        vml.canvas && vml.canvas.appendChild(el);\n        var skew = createNode(\"skew\");\n        skew.on = true;\n        el.appendChild(skew);\n        p.skew = skew;\n        p.transform(E);\n        return p;\n    };\n    R._engine.rect = function (vml, x, y, w, h, r) {\n        var path = R._rectPath(x, y, w, h, r),\n            res = vml.path(path),\n            a = res.attrs;\n        res.X = a.x = x;\n        res.Y = a.y = y;\n        res.W = a.width = w;\n        res.H = a.height = h;\n        a.r = r;\n        a.path = path;\n        res.type = \"rect\";\n        return res;\n    };\n    R._engine.ellipse = function (vml, x, y, rx, ry) {\n        var res = vml.path(),\n            a = res.attrs;\n        res.X = x - rx;\n        res.Y = y - ry;\n        res.W = rx * 2;\n        res.H = ry * 2;\n        res.type = \"ellipse\";\n        setFillAndStroke(res, {\n            cx: x,\n            cy: y,\n            rx: rx,\n            ry: ry\n        });\n        return res;\n    };\n    R._engine.circle = function (vml, x, y, r) {\n        var res = vml.path(),\n            a = res.attrs;\n        res.X = x - r;\n        res.Y = y - r;\n        res.W = res.H = r * 2;\n        res.type = \"circle\";\n        setFillAndStroke(res, {\n            cx: x,\n            cy: y,\n            r: r\n        });\n        return res;\n    };\n    R._engine.image = function (vml, src, x, y, w, h) {\n        var path = R._rectPath(x, y, w, h),\n            res = vml.path(path).attr({stroke: \"none\"}),\n            a = res.attrs,\n            node = res.node,\n            fill = node.getElementsByTagName(fillString)[0];\n        a.src = src;\n        res.X = a.x = x;\n        res.Y = a.y = y;\n        res.W = a.width = w;\n        res.H = a.height = h;\n        a.path = path;\n        res.type = \"image\";\n        fill.parentNode == node && node.removeChild(fill);\n        fill.rotate = true;\n        fill.src = src;\n        fill.type = \"tile\";\n        res._.fillpos = [x, y];\n        res._.fillsize = [w, h];\n        node.appendChild(fill);\n        setCoords(res, 1, 1, 0, 0, 0);\n        return res;\n    };\n    R._engine.text = function (vml, x, y, text) {\n        var el = createNode(\"shape\"),\n            path = createNode(\"path\"),\n            o = createNode(\"textpath\");\n        x = x || 0;\n        y = y || 0;\n        text = text || \"\";\n        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\n        path.textpathok = true;\n        o.string = Str(text);\n        o.on = true;\n        el.style.cssText = cssDot;\n        el.coordsize = zoom + S + zoom;\n        el.coordorigin = \"0 0\";\n        var p = new Element(el, vml),\n            attr = {\n                fill: \"#000\",\n                stroke: \"none\",\n                font: R._availableAttrs.font,\n                text: text\n            };\n        p.shape = el;\n        p.path = path;\n        p.textpath = o;\n        p.type = \"text\";\n        p.attrs.text = Str(text);\n        p.attrs.x = x;\n        p.attrs.y = y;\n        p.attrs.w = 1;\n        p.attrs.h = 1;\n        setFillAndStroke(p, attr);\n        el.appendChild(o);\n        el.appendChild(path);\n        vml.canvas.appendChild(el);\n        var skew = createNode(\"skew\");\n        skew.on = true;\n        el.appendChild(skew);\n        p.skew = skew;\n        p.transform(E);\n        return p;\n    };\n    R._engine.setSize = function (width, height) {\n        var cs = this.canvas.style;\n        this.width = width;\n        this.height = height;\n        width == +width && (width += \"px\");\n        height == +height && (height += \"px\");\n        cs.width = width;\n        cs.height = height;\n        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\n        if (this._viewBox) {\n            R._engine.setViewBox.apply(this, this._viewBox);\n        }\n        return this;\n    };\n    R._engine.setViewBox = function (x, y, w, h, fit) {\n        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n        var paperSize = this.getSize(),\n            width = paperSize.width,\n            height = paperSize.height,\n            H, W;\n        if (fit) {\n            H = height / h;\n            W = width / w;\n            if (w * H < width) {\n                x -= (width - w * H) / 2 / H;\n            }\n            if (h * W < height) {\n                y -= (height - h * W) / 2 / W;\n            }\n        }\n        this._viewBox = [x, y, w, h, !!fit];\n        this._viewBoxShift = {\n            dx: -x,\n            dy: -y,\n            scale: paperSize\n        };\n        this.forEach(function (el) {\n            el.transform(\"...\");\n        });\n        return this;\n    };\n    var createNode;\n    R._engine.initWin = function (win) {\n            var doc = win.document;\n            if (doc.styleSheets.length < 31) {\n                doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\n            } else {\n                // no more room, add to the existing one\n                // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n                doc.styleSheets[0].addRule(\".rvml\", \"behavior:url(#default#VML)\");\n            }\n            try {\n                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\n                createNode = function (tagName) {\n                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\n                };\n            } catch (e) {\n                createNode = function (tagName) {\n                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n                };\n            }\n        };\n    R._engine.initWin(R._g.win);\n    R._engine.create = function () {\n        var con = R._getContainer.apply(0, arguments),\n            container = con.container,\n            height = con.height,\n            s,\n            width = con.width,\n            x = con.x,\n            y = con.y;\n        if (!container) {\n            throw new Error(\"VML container not found.\");\n        }\n        var res = new R._Paper,\n            c = res.canvas = R._g.doc.createElement(\"div\"),\n            cs = c.style;\n        x = x || 0;\n        y = y || 0;\n        width = width || 512;\n        height = height || 342;\n        res.width = width;\n        res.height = height;\n        width == +width && (width += \"px\");\n        height == +height && (height += \"px\");\n        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\n        res.coordorigin = \"0 0\";\n        res.span = R._g.doc.createElement(\"span\");\n        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\n        c.appendChild(res.span);\n        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\n        if (container == 1) {\n            R._g.doc.body.appendChild(c);\n            cs.left = x + \"px\";\n            cs.top = y + \"px\";\n            cs.position = \"absolute\";\n        } else {\n            if (container.firstChild) {\n                container.insertBefore(c, container.firstChild);\n            } else {\n                container.appendChild(c);\n            }\n        }\n        res.renderfix = function () {};\n        return res;\n    };\n    R.prototype.clear = function () {\n        R.eve(\"raphael.clear\", this);\n        this.canvas.innerHTML = E;\n        this.span = R._g.doc.createElement(\"span\");\n        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\n        this.canvas.appendChild(this.span);\n        this.bottom = this.top = null;\n    };\n    R.prototype.remove = function () {\n        R.eve(\"raphael.remove\", this);\n        this.canvas.parentNode.removeChild(this.canvas);\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n        return true;\n    };\n\n    var setproto = R.st;\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n        setproto[method] = (function (methodname) {\n            return function () {\n                var arg = arguments;\n                return this.forEach(function (el) {\n                    el[methodname].apply(el, arg);\n                });\n            };\n        })(method);\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ \"./node_modules/eve-raphael/eve.js\":\n/*!*****************************************!*\\\n  !*** ./node_modules/eve-raphael/eve.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.0\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        };\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        var eve = function (name, scope) {\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    ( true && module.exports) ? (module.exports = eve) : ( true ? (!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() { return eve; }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))) : (undefined));\n})(this);\n\n\n/***/ })\n\n/******/ });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raphael/raphael.js\n// module id = 560\n// module chunks = 0 9 15 16 19","define(\"VueMorris\",[],function(){return function(t){function i(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,i),r.l=!0,r.exports}var e={};return i.m=t,i.c=e,i.i=function(t){return t},i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:o})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p=\"/dist/\",i(i.s=13)}([function(t,i,e){\"use strict\";var o={toObject:function(t){return\"string\"==typeof t?JSON.parse(t):t},toBoolean:function(t){return\"string\"==typeof t?\"true\"===t:t},toInt:function(t){return\"string\"==typeof t?parseInt(t):t}};t.exports=o},function(t,i,e){\"use strict\";Object.defineProperty(i,\"__esModule\",{value:!0});var o=e(0),r=function(t){return t&&t.__esModule?t:{default:t}}(o),n={id:{type:String,required:!0},data:{type:[String,Array],required:!0},barColors:{type:[String,Array,Function],required:!1},xkey:{type:String,required:!1,default:\"key\"},ykeys:{type:[String,Array],required:!1,default:function(){return[\"value\"]}},labels:{type:[String,Array],required:!1,default:function(){return[\"Value\"]}},hoverCallback:{type:Function,required:!1},axes:{type:[Boolean,String],required:!1,default:!0},hideHover:{type:String,required:!1},stacked:{type:[Boolean,String],required:!1},resize:{type:[Boolean,String],required:!1},horizontal:{type:[Boolean,String],required:!1,default:!1},grid:{type:[Boolean,String],required:!1,default:!0},gridTextColor:{type:String,required:!1,default:\"#888\"},gridTextSize:{type:[Number,String],required:!1,default:12},gridTextFamily:{type:String,required:!1,default:\"sans-serif\"},gridTextWeight:{type:String,required:!1,default:\"normal\"},colors:{type:[String,Array],required:!1},formatter:{type:Function,required:!1},lineColors:{type:[String,Array,Function],required:!1},xLabels:{type:String,required:!1},lineWidth:{type:[Number,String],required:!1},pointSize:{type:[Number,String],required:!1},pointFillColors:{type:[String,Array],required:!1},pointStrokeColors:{type:[String,Array],required:!1},ymax:{type:String,required:!1},ymin:{type:String,required:!1},smooth:{type:[Boolean,String],required:!1,default:!0},parseTime:{type:[Boolean,String],required:!1,default:!0},postUnits:{type:String,required:!1},preUnits:{type:String,required:!1},dateFormat:{type:Function,required:!1},xLabelFormat:{type:Function,required:!1},yLabelFormat:{type:Function,required:!1},xLabelAngle:{type:String,required:!1},goals:{type:[String,Array],required:!1},goalStrokeWidth:{type:[Number,String],required:!1},goalLineColors:{type:[String,Array],required:!1},events:{type:[String,Array],required:!1},eventStrokeWidth:{type:String,required:!1},eventLineColors:{type:[String,Array],required:!1},fillOpacity:{type:String,required:!1},behaveLikeLine:{type:[Boolean,String],required:!1,default:!1}},s={id:n.id,data:n.data,barColors:n.barColors,xkey:n.xkey,ykeys:n.ykeys,labels:n.labels,xLabelFormat:n.xLabelFormat,yLabelFormat:n.yLabelFormat,xLabelAngle:n.xLabelAngle,hoverCallback:n.hoverCallback,grid:n.grid,horizontal:n.horizontal,axes:n.axes,hideHover:n.hideHover,stacked:n.stacked,resize:n.resize,ymax:n.ymax,ymin:n.ymin,gridTextColor:n.gridTextColor,gridTextSize:n.gridTextSize,gridTextFamily:n.gridTextFamily,gridTextWeight:n.gridTextWeight},a={id:n.id,data:n.data,colors:n.colors,formatter:n.formatter,resize:n.resize},h={id:n.id,data:n.data,resize:n.resize,lineColors:n.lineColors,xkey:n.xkey,ykeys:n.ykeys,labels:n.labels,xLabels:n.xLabels,grid:n.grid,gridTextColor:n.gridTextColor,gridTextSize:n.gridTextSize,gridTextFamily:n.gridTextFamily,gridTextWeight:n.gridTextWeight,lineWidth:n.lineWidth,pointSize:n.pointSize,pointFillColors:n.pointFillColors,pointStrokeColors:n.pointStrokeColors,ymax:n.ymax,ymin:n.ymin,smooth:n.smooth,hideHover:n.hideHover,parseTime:n.parseTime,postUnits:n.postUnits,preUnits:n.preUnits,dateFormat:n.dateFormat,xLabelFormat:n.xLabelFormat,yLabelFormat:n.yLabelFormat,xLabelAngle:n.xLabelAngle,goals:n.goals,goalStrokeWidth:n.goalStrokeWidth,goalLineColors:n.goalLineColors,events:n.events,eventStrokeWidth:n.eventStrokeWidth,eventLineColors:n.eventLineColors,fillOpacity:n.fillOpacity,hoverCallback:n.hoverCallback},l={behaveLikeLine:n.behaveLikeLine};for(var p in h)h.hasOwnProperty(p)&&(l[p]=h[p]);var u={addOption:function(t,i){this[t]&&(i[t]=this[t])},addOptionAsObject:function(t,i){this[t]&&(i[t]=r.default.toObject(this[t]))}};i.default={bar:{props:s,methods:u},donut:{props:a,methods:u},line:{props:h,methods:u},area:{props:l,methods:u}}},function(t,i){/* @license\nmorris.js v0.5.1\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n(function(){var t,i,e,o,r=[].slice,n=function(t,i){return function(){return t.apply(i,arguments)}},s={}.hasOwnProperty,a=function(t,i){function e(){this.constructor=t}for(var o in i)s.call(i,o)&&(t[o]=i[o]);return e.prototype=i.prototype,t.prototype=new e,t.__super__=i.prototype,t},h=[].indexOf||function(t){for(var i=0,e=this.length;i<e;i++)if(i in this&&this[i]===t)return i;return-1};i=window.Morris={},t=jQuery,i.EventEmitter=function(){function t(){}return t.prototype.on=function(t,i){return null==this.handlers&&(this.handlers={}),null==this.handlers[t]&&(this.handlers[t]=[]),this.handlers[t].push(i),this},t.prototype.fire=function(){var t,i,e,o,n,s,a;if(e=arguments[0],t=2<=arguments.length?r.call(arguments,1):[],null!=this.handlers&&null!=this.handlers[e]){for(s=this.handlers[e],a=[],o=0,n=s.length;o<n;o++)i=s[o],a.push(i.apply(null,t));return a}},t}(),i.commas=function(t){var i,e,o,r;return null!=t?(o=t<0?\"-\":\"\",i=Math.abs(t),e=Math.floor(i).toFixed(0),o+=e.replace(/(?=(?:\\d{3})+$)(?!^)/g,\",\"),r=i.toString(),r.length>e.length&&(o+=r.slice(e.length)),o):\"-\"},i.pad2=function(t){return(t<10?\"0\":\"\")+t},i.Grid=function(e){function o(i){this.hasToShow=n(this.hasToShow,this),this.resizeHandler=n(this.resizeHandler,this);var e=this;if(\"string\"==typeof i.element?this.el=t(document.getElementById(i.element)):this.el=t(i.element),null==this.el||0===this.el.length)throw new Error(\"Graph container element not found\");\"static\"===this.el.css(\"position\")&&this.el.css(\"position\",\"relative\"),this.options=t.extend({},this.gridDefaults,this.defaults||{},i),\"string\"==typeof this.options.units&&(this.options.postUnits=i.units),this.raphael=new Raphael(this.el[0]),this.elementWidth=null,this.elementHeight=null,this.dirty=!1,this.selectFrom=null,this.init&&this.init(),this.setData(this.options.data),this.el.bind(\"mousemove\",function(t){var i,o,r,n,s;return o=e.el.offset(),s=t.pageX-o.left,e.selectFrom?(i=e.data[e.hitTest(Math.min(s,e.selectFrom))]._x,r=e.data[e.hitTest(Math.max(s,e.selectFrom))]._x,n=r-i,e.selectionRect.attr({x:i,width:n})):e.fire(\"hovermove\",s,t.pageY-o.top)}),this.el.bind(\"mouseleave\",function(t){return e.selectFrom&&(e.selectionRect.hide(),e.selectFrom=null),e.fire(\"hoverout\")}),this.el.bind(\"touchstart touchmove touchend\",function(t){var i,o;return o=t.originalEvent.touches[0]||t.originalEvent.changedTouches[0],i=e.el.offset(),e.fire(\"hovermove\",o.pageX-i.left,o.pageY-i.top)}),this.el.bind(\"click\",function(t){var i;return i=e.el.offset(),e.fire(\"gridclick\",t.pageX-i.left,t.pageY-i.top)}),this.options.rangeSelect&&(this.selectionRect=this.raphael.rect(0,0,0,this.el.innerHeight()).attr({fill:this.options.rangeSelectColor,stroke:!1}).toBack().hide(),this.el.bind(\"mousedown\",function(t){var i;return i=e.el.offset(),e.startRange(t.pageX-i.left)}),this.el.bind(\"mouseup\",function(t){var i;return i=e.el.offset(),e.endRange(t.pageX-i.left),e.fire(\"hovermove\",t.pageX-i.left,t.pageY-i.top)})),this.options.resize&&t(window).bind(\"resize\",function(t){return null!=e.timeoutId&&window.clearTimeout(e.timeoutId),e.timeoutId=window.setTimeout(e.resizeHandler,100)}),this.el.css(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\"),this.postInit&&this.postInit()}return a(o,e),o.prototype.gridDefaults={dateFormat:null,axes:!0,grid:!0,gridLineColor:\"#aaa\",gridStrokeWidth:.5,gridTextColor:\"#888\",gridTextSize:12,gridTextFamily:\"sans-serif\",gridTextWeight:\"normal\",hideHover:!1,yLabelFormat:null,xLabelAngle:0,numLines:5,padding:25,parseTime:!0,postUnits:\"\",preUnits:\"\",ymax:\"auto\",ymin:\"auto 0\",goals:[],goalStrokeWidth:1,goalLineColors:[\"#666633\",\"#999966\",\"#cc6666\",\"#663333\"],events:[],eventStrokeWidth:1,eventLineColors:[\"#005a04\",\"#ccffbb\",\"#3a5f0b\",\"#005502\"],rangeSelect:null,rangeSelectColor:\"#eef\",resize:!1},o.prototype.setData=function(e,o){var r,n,s,a,h,l,p,u,d,c,f,y,g,m,x,v,b,S,w,L,k;if(null==o&&(o=!0),this.options.data=e,null==e||0===e.length)return this.data=[],this.raphael.clear(),void(null!=this.hover&&this.hover.hide());if(x=this.cumulative?0:null,v=this.cumulative?0:null,this.options.goals.length>0&&(p=Math.min.apply(Math,this.options.goals),l=Math.max.apply(Math,this.options.goals),v=null!=v?Math.min(v,p):p,x=null!=x?Math.max(x,l):l),this.data=function(){var t,o,r;for(r=[],h=t=0,o=e.length;t<o;h=++t)d=e[h],u={src:d},u.label=d[this.options.xkey],this.options.parseTime?(u.x=i.parseDate(u.label),this.options.dateFormat?u.label=this.options.dateFormat(u.x):\"number\"==typeof u.label&&(u.label=new Date(u.label).toString())):(u.x=h,this.options.xLabelFormat&&(u.label=this.options.xLabelFormat(u))),y=0,u.y=function(){var t,i,e,o;for(e=this.options.ykeys,o=[],a=t=0,i=e.length;t<i;a=++t)m=e[a],b=d[m],\"string\"==typeof b&&(b=parseFloat(b)),null!=b&&\"number\"!=typeof b&&(b=null),null!=b&&this.hasToShow(a)&&(this.cumulative?y+=b:null!=x?(x=Math.max(b,x),v=Math.min(b,v)):x=v=b),this.cumulative&&null!=y&&(x=Math.max(y,x),v=Math.min(y,v)),o.push(b);return o}.call(this),r.push(u);return r}.call(this),this.options.parseTime&&(this.data=this.data.sort(function(t,i){return(t.x>i.x)-(i.x>t.x)})),this.xmin=this.data[0].x,this.xmax=this.data[this.data.length-1].x,this.events=[],this.options.events.length>0){if(this.options.parseTime)for(L=this.options.events,S=0,w=L.length;S<w;S++)r=L[S],r instanceof Array?(s=r[0],f=r[1],this.events.push([i.parseDate(s),i.parseDate(f)])):this.events.push(i.parseDate(r));else this.events=this.options.events;n=t.map(this.events,function(t){return t}),this.xmax=Math.max(this.xmax,Math.max.apply(Math,n)),this.xmin=Math.min(this.xmin,Math.min.apply(Math,n))}return this.xmin===this.xmax&&(this.xmin-=1,this.xmax+=1),this.ymin=this.yboundary(\"min\",v),this.ymax=this.yboundary(\"max\",x),this.ymin===this.ymax&&(v&&(this.ymin-=1),this.ymax+=1),!0!==(k=this.options.axes)&&\"both\"!==k&&\"y\"!==k&&!0!==this.options.grid||(this.options.ymax===this.gridDefaults.ymax&&this.options.ymin===this.gridDefaults.ymin?(this.grid=this.autoGridLines(this.ymin,this.ymax,this.options.numLines),this.ymin=Math.min(this.ymin,this.grid[0]),this.ymax=Math.max(this.ymax,this.grid[this.grid.length-1])):(c=(this.ymax-this.ymin)/(this.options.numLines-1),this.grid=function(){var t,i,e;for(e=[],g=t=this.ymin,i=this.ymax;c>0?t<=i:t>=i;g=t+=c)e.push(g);return e}.call(this))),this.dirty=!0,o?this.redraw():void 0},o.prototype.yboundary=function(t,i){var e,o;return e=this.options[\"y\"+t],\"string\"==typeof e?\"auto\"===e.slice(0,4)?e.length>5?(o=parseInt(e.slice(5),10),null==i?o:Math[t](i,o)):null!=i?i:0:parseInt(e,10):e},o.prototype.autoGridLines=function(t,i,e){var o,r,n,s,a,h,l,p,u;return a=i-t,u=Math.floor(Math.log(a)/Math.log(10)),l=Math.pow(10,u),r=Math.floor(t/l)*l,o=Math.ceil(i/l)*l,h=(o-r)/(e-1),1===l&&h>1&&Math.ceil(h)!==h&&(h=Math.ceil(h),o=r+h*(e-1)),r<0&&o>0&&(r=Math.floor(t/h)*h,o=Math.ceil(i/h)*h),h<1?(s=Math.floor(Math.log(h)/Math.log(10)),n=function(){var t,i;for(i=[],p=t=r;h>0?t<=o:t>=o;p=t+=h)i.push(parseFloat(p.toFixed(1-s)));return i}()):n=function(){var t,i;for(i=[],p=t=r;h>0?t<=o:t>=o;p=t+=h)i.push(p);return i}(),n},o.prototype._calc=function(){var t,i,e,o,r,n,s,a,h;if(n=this.el.width(),o=this.el.height(),(this.elementWidth!==n||this.elementHeight!==o||this.dirty)&&(this.elementWidth=n,this.elementHeight=o,this.dirty=!1,this.left=this.options.padding,this.right=this.elementWidth-this.options.padding,this.top=this.options.padding,this.bottom=this.elementHeight-this.options.padding,!0!==(a=this.options.axes)&&\"both\"!==a&&\"y\"!==a||(s=function(){var t,i,o,r;for(o=this.grid,r=[],t=0,i=o.length;t<i;t++)e=o[t],r.push(this.measureText(this.yAxisFormat(e)).width);return r}.call(this),this.options.horizontal?this.bottom-=Math.max.apply(Math,s):this.left+=Math.max.apply(Math,s)),!0!==(h=this.options.axes)&&\"both\"!==h&&\"x\"!==h||(t=this.options.horizontal?-90:-this.options.xLabelAngle,i=function(){var i,e,o;for(o=[],r=i=0,e=this.data.length;0<=e?i<e:i>e;r=0<=e?++i:--i)o.push(this.measureText(this.data[r].label,t).height);return o}.call(this),this.options.horizontal?this.left+=Math.max.apply(Math,i):this.bottom-=Math.max.apply(Math,i)),this.width=Math.max(1,this.right-this.left),this.height=Math.max(1,this.bottom-this.top),this.options.horizontal?(this.dx=this.height/(this.xmax-this.xmin),this.dy=this.width/(this.ymax-this.ymin),this.yStart=this.left,this.yEnd=this.right,this.xStart=this.top,this.xEnd=this.bottom,this.xSize=this.height,this.ySize=this.width):(this.dx=this.width/(this.xmax-this.xmin),this.dy=this.height/(this.ymax-this.ymin),this.yStart=this.bottom,this.yEnd=this.top,this.xStart=this.left,this.xEnd=this.right,this.xSize=this.width,this.ySize=this.height),this.calc))return this.calc()},o.prototype.transY=function(t){return this.options.horizontal?this.left+(t-this.ymin)*this.dy:this.bottom-(t-this.ymin)*this.dy},o.prototype.transX=function(t){return 1===this.data.length?(this.xStart+this.xEnd)/2:this.xStart+(t-this.xmin)*this.dx},o.prototype.redraw=function(){if(this.raphael.clear(),this._calc(),this.drawGrid(),this.drawGoals(),this.drawEvents(),this.draw)return this.draw()},o.prototype.measureText=function(t,i){var e,o;return null==i&&(i=0),o=this.raphael.text(100,100,t).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).rotate(i),e=o.getBBox(),o.remove(),e},o.prototype.yAxisFormat=function(t){return this.yLabelFormat(t,0)},o.prototype.yLabelFormat=function(t,e){return\"function\"==typeof this.options.yLabelFormat?this.options.yLabelFormat(t,e):\"\"+this.options.preUnits+i.commas(t)+this.options.postUnits},o.prototype.getYAxisLabelX=function(){return this.left-this.options.padding/2},o.prototype.drawGrid=function(){var t,i,e,o,r,n,s,a,h;if(!1!==this.options.grid||!0===(n=this.options.axes)||\"both\"===n||\"y\"===n){for(t=this.options.horizontal?this.getXAxisLabelY():this.getYAxisLabelX(),s=this.grid,h=[],o=0,r=s.length;o<r;o++)i=s[o],e=this.transY(i),!0!==(a=this.options.axes)&&\"both\"!==a&&\"y\"!==a||(this.options.horizontal?this.drawXAxisLabel(e,t,this.yAxisFormat(i)):this.drawYAxisLabel(t,e,this.yAxisFormat(i))),this.options.grid?(e=Math.floor(e)+.5,this.options.horizontal?h.push(this.drawGridLine(\"M\"+e+\",\"+this.xStart+\"V\"+this.xEnd)):h.push(this.drawGridLine(\"M\"+this.xStart+\",\"+e+\"H\"+this.xEnd))):h.push(void 0);return h}},o.prototype.drawGoals=function(){var t,i,e,o,r,n,s;for(n=this.options.goals,s=[],e=o=0,r=n.length;o<r;e=++o)i=n[e],t=this.options.goalLineColors[e%this.options.goalLineColors.length],s.push(this.drawGoal(i,t));return s},o.prototype.drawEvents=function(){var t,i,e,o,r,n,s;for(n=this.events,s=[],e=o=0,r=n.length;o<r;e=++o)i=n[e],t=this.options.eventLineColors[e%this.options.eventLineColors.length],s.push(this.drawEvent(i,t));return s},o.prototype.drawGoal=function(t,i){var e,o;return o=Math.floor(this.transY(t))+.5,e=this.options.horizontal?\"M\"+o+\",\"+this.xStart+\"V\"+this.xEnd:\"M\"+this.xStart+\",\"+o+\"H\"+this.xEnd,this.raphael.path(e).attr(\"stroke\",i).attr(\"stroke-width\",this.options.goalStrokeWidth)},o.prototype.drawEvent=function(t,i){var e,o,r,n;return t instanceof Array?(e=t[0],r=t[1],e=Math.floor(this.transX(e))+.5,r=Math.floor(this.transX(r))+.5,this.options.horizontal?this.raphael.rect(this.yStart,e,this.yEnd-this.yStart,r-e).attr({fill:i,stroke:!1}).toBack():this.raphael.rect(e,this.yEnd,r-e,this.yStart-this.yEnd).attr({fill:i,stroke:!1}).toBack()):(n=Math.floor(this.transX(t))+.5,o=this.options.horizontal?\"M\"+this.yStart+\",\"+n+\"H\"+this.yEnd:\"M\"+n+\",\"+this.yStart+\"V\"+this.yEnd,this.raphael.path(o).attr(\"stroke\",i).attr(\"stroke-width\",this.options.eventStrokeWidth))},o.prototype.drawYAxisLabel=function(t,i,e){return this.raphael.text(t,i,e).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor).attr(\"text-anchor\",\"end\")},o.prototype.drawGridLine=function(t){return this.raphael.path(t).attr(\"stroke\",this.options.gridLineColor).attr(\"stroke-width\",this.options.gridStrokeWidth)},o.prototype.startRange=function(t){return this.hover.hide(),this.selectFrom=t,this.selectionRect.attr({x:t,width:0}).show()},o.prototype.endRange=function(t){var i,e;if(this.selectFrom)return e=Math.min(this.selectFrom,t),i=Math.max(this.selectFrom,t),this.options.rangeSelect.call(this.el,{start:this.data[this.hitTest(e)].x,end:this.data[this.hitTest(i)].x}),this.selectFrom=null},o.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},o.prototype.hasToShow=function(t){return!0===this.options.shown||!0===this.options.shown[t]},o}(i.EventEmitter),i.parseDate=function(t){var i,e,o,r,n,s,a,h,l,p,u;return\"number\"==typeof t?t:(e=t.match(/^(\\d+) Q(\\d)$/),r=t.match(/^(\\d+)-(\\d+)$/),n=t.match(/^(\\d+)-(\\d+)-(\\d+)$/),a=t.match(/^(\\d+) W(\\d+)$/),h=t.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),l=t.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/),e?new Date(parseInt(e[1],10),3*parseInt(e[2],10)-1,1).getTime():r?new Date(parseInt(r[1],10),parseInt(r[2],10)-1,1).getTime():n?new Date(parseInt(n[1],10),parseInt(n[2],10)-1,parseInt(n[3],10)).getTime():a?(p=new Date(parseInt(a[1],10),0,1),4!==p.getDay()&&p.setMonth(0,1+(4-p.getDay()+7)%7),p.getTime()+6048e5*parseInt(a[2],10)):h?h[6]?(s=0,\"Z\"!==h[6]&&(s=60*parseInt(h[8],10)+parseInt(h[9],10),\"+\"===h[7]&&(s=0-s)),Date.UTC(parseInt(h[1],10),parseInt(h[2],10)-1,parseInt(h[3],10),parseInt(h[4],10),parseInt(h[5],10)+s)):new Date(parseInt(h[1],10),parseInt(h[2],10)-1,parseInt(h[3],10),parseInt(h[4],10),parseInt(h[5],10)).getTime():l?(u=parseFloat(l[6]),i=Math.floor(u),o=Math.round(1e3*(u-i)),l[8]?(s=0,\"Z\"!==l[8]&&(s=60*parseInt(l[10],10)+parseInt(l[11],10),\"+\"===l[9]&&(s=0-s)),Date.UTC(parseInt(l[1],10),parseInt(l[2],10)-1,parseInt(l[3],10),parseInt(l[4],10),parseInt(l[5],10)+s,i,o)):new Date(parseInt(l[1],10),parseInt(l[2],10)-1,parseInt(l[3],10),parseInt(l[4],10),parseInt(l[5],10),i,o).getTime()):new Date(parseInt(t,10),0,1).getTime())},i.Hover=function(){function e(e){null==e&&(e={}),this.options=t.extend({},i.Hover.defaults,e),this.el=t(\"<div class='\"+this.options.class+\"'></div>\"),this.el.hide(),this.options.parent.append(this.el)}return e.defaults={class:\"morris-hover morris-default-style\"},e.prototype.update=function(t,i,e,o){return t?(this.html(t),this.show(),this.moveTo(i,e,o)):this.hide()},e.prototype.html=function(t){return this.el.html(t)},e.prototype.moveTo=function(t,i,e){var o,r,n,s,a,h;return a=this.options.parent.innerWidth(),s=this.options.parent.innerHeight(),r=this.el.outerWidth(),o=this.el.outerHeight(),n=Math.min(Math.max(0,t-r/2),a-r),null!=i?!0===e?(h=i-o/2)<0&&(h=0):(h=i-o-10)<0&&(h=i+10)+o>s&&(h=s/2-o/2):h=s/2-o/2,this.el.css({left:n+\"px\",top:parseInt(h)+\"px\"})},e.prototype.show=function(){return this.el.show()},e.prototype.hide=function(){return this.el.hide()},e}(),i.Line=function(e){function o(t){if(this.hilight=n(this.hilight,this),this.onHoverOut=n(this.onHoverOut,this),this.onHoverMove=n(this.onHoverMove,this),this.onGridClick=n(this.onGridClick,this),!(this instanceof i.Line))return new i.Line(t);o.__super__.constructor.call(this,t)}return a(o,e),o.prototype.init=function(){if(\"always\"!==this.options.hideHover)return this.hover=new i.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)},o.prototype.defaults={lineWidth:3,pointSize:4,lineColors:[\"#0b62a4\",\"#7A92A3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],pointStrokeWidths:[1],pointStrokeColors:[\"#ffffff\"],pointFillColors:[],smooth:!0,shown:!0,xLabels:\"auto\",xLabelFormat:null,xLabelMargin:24,hideHover:!1,trendLine:!1,trendLineWidth:2,trendLineColors:[\"#689bc3\",\"#a2b3bf\",\"#64b764\"]},o.prototype.calc=function(){return this.calcPoints(),this.generatePaths()},o.prototype.calcPoints=function(){var t,i,e,o,r,n;for(r=this.data,n=[],e=0,o=r.length;e<o;e++)t=r[e],t._x=this.transX(t.x),t._y=function(){var e,o,r,n;for(r=t.y,n=[],e=0,o=r.length;e<o;e++)i=r[e],null!=i?n.push(this.transY(i)):n.push(i);return n}.call(this),n.push(t._ymax=Math.min.apply(Math,[this.bottom].concat(function(){var e,o,r,n;for(r=t._y,n=[],e=0,o=r.length;e<o;e++)null!=(i=r[e])&&n.push(i);return n}())));return n},o.prototype.hitTest=function(t){var i,e,o,r,n;if(0===this.data.length)return null;for(n=this.data.slice(1),i=o=0,r=n.length;o<r&&(e=n[i],!(t<(e._x+this.data[i]._x)/2));i=++o);return i},o.prototype.onGridClick=function(t,i){var e;return e=this.hitTest(t),this.fire(\"click\",e,this.data[e].src,t,i)},o.prototype.onHoverMove=function(t,i){var e;return e=this.hitTest(t),this.displayHoverForRow(e)},o.prototype.onHoverOut=function(){if(!1!==this.options.hideHover)return this.displayHoverForRow(null)},o.prototype.displayHoverForRow=function(t){var i;return null!=t?((i=this.hover).update.apply(i,this.hoverContentForRow(t)),this.hilight(t)):(this.hover.hide(),this.hilight())},o.prototype.hoverContentForRow=function(i){var e,o,r,n,s,a,h;for(r=this.data[i],e=t(\"<div class='morris-hover-row-label'>\").text(r.label),e=e.prop(\"outerHTML\"),h=r.y,o=s=0,a=h.length;s<a;o=++s)n=h[o],!1!==this.options.labels[o]&&(e+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(r,o,\"label\")+\"'>\\n  \"+this.options.labels[o]+\":\\n  \"+this.yLabelFormat(n,o)+\"\\n</div>\");return\"function\"==typeof this.options.hoverCallback&&(e=this.options.hoverCallback(i,this.options,e,r.src)),[e,r._x,r._ymax]},o.prototype.generatePaths=function(){var t,e,o,r;return this.paths=function(){var n,s,a,l;for(l=[],e=n=0,s=this.options.ykeys.length;0<=s?n<s:n>s;e=0<=s?++n:--n)r=\"boolean\"==typeof this.options.smooth?this.options.smooth:(a=this.options.ykeys[e],h.call(this.options.smooth,a)>=0),t=function(){var t,i,r,n;for(r=this.data,n=[],t=0,i=r.length;t<i;t++)o=r[t],void 0!==o._y[e]&&n.push({x:o._x,y:o._y[e]});return n}.call(this),t.length>1?l.push(i.Line.createPath(t,r,this.bottom)):l.push(null);return l}.call(this)},o.prototype.draw=function(){var t;if(!0!==(t=this.options.axes)&&\"both\"!==t&&\"x\"!==t||this.drawXAxis(),this.drawSeries(),!1===this.options.hideHover)return this.displayHoverForRow(this.data.length-1)},o.prototype.drawXAxis=function(){var t,e,o,r,n,s,a,h,l,p,u=this;for(a=this.bottom+this.options.padding/2,n=null,r=null,t=function(t,i){var e,o,s,h,l;return e=u.drawXAxisLabel(u.transX(i),a,t),l=e.getBBox(),e.transform(\"r\"+-u.options.xLabelAngle),o=e.getBBox(),e.transform(\"t0,\"+o.height/2+\"...\"),0!==u.options.xLabelAngle&&(h=-.5*l.width*Math.cos(u.options.xLabelAngle*Math.PI/180),e.transform(\"t\"+h+\",0...\")),o=e.getBBox(),(null==n||n>=o.x+o.width||null!=r&&r>=o.x)&&o.x>=0&&o.x+o.width<u.el.width()?(0!==u.options.xLabelAngle&&(s=1.25*u.options.gridTextSize/Math.sin(u.options.xLabelAngle*Math.PI/180),r=o.x-s),n=o.x-u.options.xLabelMargin):e.remove()},o=this.options.parseTime?1===this.data.length&&\"auto\"===this.options.xLabels?[[this.data[0].label,this.data[0].x]]:i.labelSeries(this.xmin,this.xmax,this.width,this.options.xLabels,this.options.xLabelFormat):function(){var t,i,e,o;for(e=this.data,o=[],t=0,i=e.length;t<i;t++)s=e[t],o.push([s.label,s.x]);return o}.call(this),o.reverse(),p=[],h=0,l=o.length;h<l;h++)e=o[h],p.push(t(e[0],e[1]));return p},o.prototype.drawSeries=function(){var t,i,e,o,r,n;for(this.seriesPoints=[],t=i=o=this.options.ykeys.length-1;o<=0?i<=0:i>=0;t=o<=0?++i:--i)this.hasToShow(t)&&((!1!==this.options.trendLine&&!0===this.options.trendLine||!0===this.options.trendLine[t])&&this._drawTrendLine(t),this._drawLineFor(t));for(n=[],t=e=r=this.options.ykeys.length-1;r<=0?e<=0:e>=0;t=r<=0?++e:--e)this.hasToShow(t)?n.push(this._drawPointFor(t)):n.push(void 0);return n},o.prototype._drawPointFor=function(t){var i,e,o,r,n,s;for(this.seriesPoints[t]=[],n=this.data,s=[],o=0,r=n.length;o<r;o++)e=n[o],i=null,null!=e._y[t]&&(i=this.drawLinePoint(e._x,e._y[t],this.colorFor(e,t,\"point\"),t)),s.push(this.seriesPoints[t].push(i));return s},o.prototype._drawLineFor=function(t){var i;if(null!==(i=this.paths[t]))return this.drawLinePath(i,this.colorFor(null,t,\"line\"),t)},o.prototype._drawTrendLine=function(t){var e,o,r,n,s,a,h,l,p,u,d,c,f,y,g;for(a=0,p=0,h=0,l=0,n=0,g=this.data,f=0,y=g.length;f<y;f++)u=g[f],d=u.x,void 0!==(c=u.y[t])&&(n+=1,a+=d,p+=c,h+=d*d,l+=d*c);return e=(n*l-a*p)/(n*h-a*a),o=p/n-e*a/n,r=[{},{}],r[0].x=this.transX(this.data[0].x),r[0].y=this.transY(this.data[0].x*e+o),r[1].x=this.transX(this.data[this.data.length-1].x),r[1].y=this.transY(this.data[this.data.length-1].x*e+o),s=i.Line.createPath(r,!1,this.bottom),s=this.raphael.path(s).attr(\"stroke\",this.colorFor(null,t,\"trendLine\")).attr(\"stroke-width\",this.options.trendLineWidth)},o.createPath=function(t,e,o){var r,n,s,a,h,l,p,u,d,c,f,y,g,m;for(p=\"\",e&&(s=i.Line.gradients(t)),u={y:null},a=g=0,m=t.length;g<m;a=++g)r=t[a],null!=r.y&&(null!=u.y?e?(n=s[a],l=s[a-1],h=(r.x-u.x)/4,d=u.x+h,f=Math.min(o,u.y+h*l),c=r.x-h,y=Math.min(o,r.y-h*n),p+=\"C\"+d+\",\"+f+\",\"+c+\",\"+y+\",\"+r.x+\",\"+r.y):p+=\"L\"+r.x+\",\"+r.y:e&&null==s[a]||(p+=\"M\"+r.x+\",\"+r.y)),u=r;return p},o.gradients=function(t){var i,e,o,r,n,s,a,h;for(e=function(t,i){return(t.y-i.y)/(t.x-i.x)},h=[],o=s=0,a=t.length;s<a;o=++s)i=t[o],null!=i.y?(r=t[o+1]||{y:null},n=t[o-1]||{y:null},null!=n.y&&null!=r.y?h.push(e(n,r)):null!=n.y?h.push(e(n,i)):null!=r.y?h.push(e(i,r)):h.push(null)):h.push(null);return h},o.prototype.hilight=function(t){var i,e,o,r,n;if(null!==this.prevHilight&&this.prevHilight!==t)for(i=e=0,r=this.seriesPoints.length-1;0<=r?e<=r:e>=r;i=0<=r?++e:--e)this.seriesPoints[i][this.prevHilight]&&this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));if(null!==t&&this.prevHilight!==t)for(i=o=0,n=this.seriesPoints.length-1;0<=n?o<=n:o>=n;i=0<=n?++o:--o)this.seriesPoints[i][t]&&this.seriesPoints[i][t].animate(this.pointGrowSeries(i));return this.prevHilight=t},o.prototype.colorFor=function(t,i,e){return\"function\"==typeof this.options.lineColors?this.options.lineColors.call(this,t,i,e):\"point\"===e?this.options.pointFillColors[i%this.options.pointFillColors.length]||this.options.lineColors[i%this.options.lineColors.length]:\"line\"===e?this.options.lineColors[i%this.options.lineColors.length]:this.options.trendLineColors[i%this.options.trendLineColors.length]},o.prototype.drawXAxisLabel=function(t,i,e){return this.raphael.text(t,i,e).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},o.prototype.drawLinePath=function(t,i,e){return this.raphael.path(t).attr(\"stroke\",i).attr(\"stroke-width\",this.lineWidthForSeries(e))},o.prototype.drawLinePoint=function(t,i,e,o){return this.raphael.circle(t,i,this.pointSizeForSeries(o)).attr(\"fill\",e).attr(\"stroke-width\",this.pointStrokeWidthForSeries(o)).attr(\"stroke\",this.pointStrokeColorForSeries(o))},o.prototype.pointStrokeWidthForSeries=function(t){return this.options.pointStrokeWidths[t%this.options.pointStrokeWidths.length]},o.prototype.pointStrokeColorForSeries=function(t){return this.options.pointStrokeColors[t%this.options.pointStrokeColors.length]},o.prototype.lineWidthForSeries=function(t){return this.options.lineWidth instanceof Array?this.options.lineWidth[t%this.options.lineWidth.length]:this.options.lineWidth},o.prototype.pointSizeForSeries=function(t){return this.options.pointSize instanceof Array?this.options.pointSize[t%this.options.pointSize.length]:this.options.pointSize},o.prototype.pointGrowSeries=function(t){if(0!==this.pointSizeForSeries(t))return Raphael.animation({r:this.pointSizeForSeries(t)+3},25,\"linear\")},o.prototype.pointShrinkSeries=function(t){return Raphael.animation({r:this.pointSizeForSeries(t)},25,\"linear\")},o}(i.Grid),i.labelSeries=function(e,o,r,n,s){var a,h,l,p,u,d,c,f,y,g,m;if(l=200*(o-e)/r,h=new Date(e),void 0===(c=i.LABEL_SPECS[n]))for(m=i.AUTO_LABEL_ORDER,y=0,g=m.length;y<g;y++)if(p=m[y],d=i.LABEL_SPECS[p],l>=d.span){c=d;break}for(void 0===c&&(c=i.LABEL_SPECS.second),s&&(c=t.extend({},c,{fmt:s})),a=c.start(h),u=[];(f=a.getTime())<=o;)f>=e&&u.push([c.fmt(a),f]),c.incr(a);return u},e=function(t){return{span:60*t*1e3,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours())},fmt:function(t){return i.pad2(t.getHours())+\":\"+i.pad2(t.getMinutes())},incr:function(i){return i.setUTCMinutes(i.getUTCMinutes()+t)}}},o=function(t){return{span:1e3*t,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes())},fmt:function(t){return i.pad2(t.getHours())+\":\"+i.pad2(t.getMinutes())+\":\"+i.pad2(t.getSeconds())},incr:function(i){return i.setUTCSeconds(i.getUTCSeconds()+t)}}},i.LABEL_SPECS={decade:{span:1728e8,start:function(t){return new Date(t.getFullYear()-t.getFullYear()%10,0,1)},fmt:function(t){return\"\"+t.getFullYear()},incr:function(t){return t.setFullYear(t.getFullYear()+10)}},year:{span:1728e7,start:function(t){return new Date(t.getFullYear(),0,1)},fmt:function(t){return\"\"+t.getFullYear()},incr:function(t){return t.setFullYear(t.getFullYear()+1)}},month:{span:24192e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),1)},fmt:function(t){return t.getFullYear()+\"-\"+i.pad2(t.getMonth()+1)},incr:function(t){return t.setMonth(t.getMonth()+1)}},week:{span:6048e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())},fmt:function(t){return t.getFullYear()+\"-\"+i.pad2(t.getMonth()+1)+\"-\"+i.pad2(t.getDate())},incr:function(t){return t.setDate(t.getDate()+7)}},day:{span:864e5,start:function(t){return new Date(t.getFullYear(),t.getMonth(),t.getDate())},fmt:function(t){return t.getFullYear()+\"-\"+i.pad2(t.getMonth()+1)+\"-\"+i.pad2(t.getDate())},incr:function(t){return t.setDate(t.getDate()+1)}},hour:e(60),\"30min\":e(30),\"15min\":e(15),\"10min\":e(10),\"5min\":e(5),minute:e(1),\"30sec\":o(30),\"15sec\":o(15),\"10sec\":o(10),\"5sec\":o(5),second:o(1)},i.AUTO_LABEL_ORDER=[\"decade\",\"year\",\"month\",\"week\",\"day\",\"hour\",\"30min\",\"15min\",\"10min\",\"5min\",\"minute\",\"30sec\",\"15sec\",\"10sec\",\"5sec\",\"second\"],i.Area=function(e){function o(e){var n;if(!(this instanceof i.Area))return new i.Area(e);n=t.extend({},r,e),this.cumulative=!n.behaveLikeLine,\"auto\"===n.fillOpacity&&(n.fillOpacity=n.behaveLikeLine?.8:1),o.__super__.constructor.call(this,n)}var r;return a(o,e),r={fillOpacity:\"auto\",behaveLikeLine:!1},o.prototype.calcPoints=function(){var t,i,e,o,r,n,s;for(n=this.data,s=[],o=0,r=n.length;o<r;o++)t=n[o],t._x=this.transX(t.x),i=0,t._y=function(){var o,r,n,s;for(n=t.y,s=[],o=0,r=n.length;o<r;o++)e=n[o],this.options.behaveLikeLine?s.push(this.transY(e)):(i+=e||0,s.push(this.transY(i)));return s}.call(this),s.push(t._ymax=Math.max.apply(Math,t._y));return s},o.prototype.drawSeries=function(){var t,i,e,o,r,n,s,a;for(this.seriesPoints=[],i=this.options.behaveLikeLine?function(){n=[];for(var t=0,i=this.options.ykeys.length-1;0<=i?t<=i:t>=i;0<=i?t++:t--)n.push(t);return n}.apply(this):function(){s=[];for(var t=r=this.options.ykeys.length-1;r<=0?t<=0:t>=0;r<=0?t++:t--)s.push(t);return s}.apply(this),a=[],e=0,o=i.length;e<o;e++)t=i[e],this._drawFillFor(t),this._drawLineFor(t),a.push(this._drawPointFor(t));return a},o.prototype._drawFillFor=function(t){var i;if(null!==(i=this.paths[t]))return i=i+\"L\"+this.transX(this.xmax)+\",\"+this.bottom+\"L\"+this.transX(this.xmin)+\",\"+this.bottom+\"Z\",this.drawFilledPath(i,this.fillForSeries(t))},o.prototype.fillForSeries=function(t){var i;return i=Raphael.rgb2hsl(this.colorFor(this.data[t],t,\"line\")),Raphael.hsl(i.h,this.options.behaveLikeLine?.9*i.s:.75*i.s,Math.min(.98,this.options.behaveLikeLine?1.2*i.l:1.25*i.l))},o.prototype.drawFilledPath=function(t,i){return this.raphael.path(t).attr(\"fill\",i).attr(\"fill-opacity\",this.options.fillOpacity).attr(\"stroke\",\"none\")},o}(i.Line),i.Bar=function(e){function o(e){if(this.onHoverOut=n(this.onHoverOut,this),this.onHoverMove=n(this.onHoverMove,this),this.onGridClick=n(this.onGridClick,this),!(this instanceof i.Bar))return new i.Bar(e);o.__super__.constructor.call(this,t.extend({},e,{parseTime:!1}))}return a(o,e),o.prototype.init=function(){if(this.cumulative=this.options.stacked,\"always\"!==this.options.hideHover)return this.hover=new i.Hover({parent:this.el}),this.on(\"hovermove\",this.onHoverMove),this.on(\"hoverout\",this.onHoverOut),this.on(\"gridclick\",this.onGridClick)},o.prototype.defaults={barSizeRatio:.75,barGap:3,barColors:[\"#0b62a4\",\"#7a92a3\",\"#4da74d\",\"#afd8f8\",\"#edc240\",\"#cb4b4b\",\"#9440ed\"],barOpacity:1,barRadius:[0,0,0,0],xLabelMargin:50,horizontal:!1,shown:!0},o.prototype.calc=function(){var t;if(this.calcBars(),!1===this.options.hideHover)return(t=this.hover).update.apply(t,this.hoverContentForRow(this.data.length-1))},o.prototype.calcBars=function(){var t,i,e,o,r,n,s;for(n=this.data,s=[],t=o=0,r=n.length;o<r;t=++o)i=n[t],i._x=this.xStart+this.xSize*(t+.5)/this.data.length,s.push(i._y=function(){var t,o,r,n;for(r=i.y,n=[],t=0,o=r.length;t<o;t++)e=r[t],null!=e?n.push(this.transY(e)):n.push(null);return n}.call(this));return s},o.prototype.draw=function(){var t;return!0!==(t=this.options.axes)&&\"both\"!==t&&\"x\"!==t||this.drawXAxis(),this.drawSeries()},o.prototype.drawXAxis=function(){var t,i,e,o,r,n,s,a,h,l,p,u,d,c,f,y,g;for(i=this.options.horizontal?this.getYAxisLabelX():this.getXAxisLabelY(),l=null,h=null,g=[],e=f=0,y=this.data.length;0<=y?f<y:f>y;e=0<=y?++f:--f)p=this.data[this.data.length-1-e],o=this.options.horizontal?this.drawYAxisLabel(i,p._x-.5*this.options.gridTextSize,p.label):this.drawXAxisLabel(p._x,i,p.label),t=this.options.horizontal?0:this.options.xLabelAngle,c=o.getBBox(),o.transform(\"r\"+-t),r=o.getBBox(),o.transform(\"t0,\"+r.height/2+\"...\"),0!==t&&(a=-.5*c.width*Math.cos(t*Math.PI/180),o.transform(\"t\"+a+\",0...\")),this.options.horizontal?(d=r.y,u=r.height,s=this.el.height()):(d=r.x,u=r.width,s=this.el.width()),(null==l||l>=d+u||null!=h&&h>=d)&&d>=0&&d+u<s?(0!==t&&(n=1.25*this.options.gridTextSize/Math.sin(t*Math.PI/180),h=d-n),this.options.horizontal?g.push(l=d):g.push(l=d-this.options.xLabelMargin)):g.push(o.remove());return g},o.prototype.getXAxisLabelY=function(){return this.bottom+(this.options.xAxisLabelTopPadding||this.options.padding/2)},o.prototype.drawSeries=function(){var t,i,e,o,r,n,s,a,h,l,p,u,d,c,f,y,g,m;if(e=this.xSize/this.options.data.length,this.options.stacked)h=1;else for(h=0,o=g=0,m=this.options.ykeys.length-1;0<=m?g<=m:g>=m;o=0<=m?++g:--g)this.hasToShow(o)&&(h+=1);return t=(e*this.options.barSizeRatio-this.options.barGap*(h-1))/h,this.options.barSize&&(t=Math.min(t,this.options.barSize)),d=e-t*h-this.options.barGap*(h-1),a=d/2,y=this.ymin<=0&&this.ymax>=0?this.transY(0):null,this.bars=function(){var o,h,d,g;for(d=this.data,g=[],r=o=0,h=d.length;o<h;r=++o)l=d[r],n=0,g.push(function(){var o,h,d,g;for(d=l._y,g=[],p=o=0,h=d.length;o<h;p=++o)f=d[p],this.hasToShow(p)&&(null!==f?(y?(c=Math.min(f,y),i=Math.max(f,y)):(c=f,i=this.bottom),s=this.xStart+r*e+a,this.options.stacked||(s+=p*(t+this.options.barGap)),u=i-c,this.options.verticalGridCondition&&this.options.verticalGridCondition(l.x)&&(this.options.horizontal?this.drawBar(this.yStart,this.xStart+r*e,this.ySize,e,this.options.verticalGridColor,this.options.verticalGridOpacity,this.options.barRadius):this.drawBar(this.xStart+r*e,this.yEnd,e,this.ySize,this.options.verticalGridColor,this.options.verticalGridOpacity,this.options.barRadius)),this.options.stacked&&(c-=n),this.options.horizontal?(this.drawBar(c,s,u,t,this.colorFor(l,p,\"bar\"),this.options.barOpacity,this.options.barRadius),g.push(n-=u)):(this.drawBar(s,c,t,u,this.colorFor(l,p,\"bar\"),this.options.barOpacity,this.options.barRadius),g.push(n+=u))):g.push(null));return g}.call(this));return g}.call(this)},o.prototype.colorFor=function(t,i,e){var o,r;return\"function\"==typeof this.options.barColors?(o={x:t.x,y:t.y[i],label:t.label},r={index:i,key:this.options.ykeys[i],label:this.options.labels[i]},this.options.barColors.call(this,o,r,e)):this.options.barColors[i%this.options.barColors.length]},o.prototype.hitTest=function(t,i){var e;return 0===this.data.length?null:(e=this.options.horizontal?i:t,e=Math.max(Math.min(e,this.xEnd),this.xStart),Math.min(this.data.length-1,Math.floor((e-this.xStart)/(this.xSize/this.data.length))))},o.prototype.onGridClick=function(t,i){var e;return e=this.hitTest(t,i),this.fire(\"click\",e,this.data[e].src,t,i)},o.prototype.onHoverMove=function(t,i){var e,o;return e=this.hitTest(t,i),(o=this.hover).update.apply(o,this.hoverContentForRow(e))},o.prototype.onHoverOut=function(){if(!1!==this.options.hideHover)return this.hover.hide()},o.prototype.hoverContentForRow=function(i){var e,o,r,n,s,a,h,l;for(r=this.data[i],e=t(\"<div class='morris-hover-row-label'>\").text(r.label),e=e.prop(\"outerHTML\"),l=r.y,o=a=0,h=l.length;a<h;o=++a)s=l[o],!1!==this.options.labels[o]&&(e+=\"<div class='morris-hover-point' style='color: \"+this.colorFor(r,o,\"label\")+\"'>\\n  \"+this.options.labels[o]+\":\\n  \"+this.yLabelFormat(s,o)+\"\\n</div>\");return\"function\"==typeof this.options.hoverCallback&&(e=this.options.hoverCallback(i,this.options,e,r.src)),this.options.horizontal?(n=this.left+.5*this.width,s=this.top+(i+.5)*this.height/this.data.length,[e,n,s,!0]):(n=this.left+(i+.5)*this.width/this.data.length,[e,n])},o.prototype.drawXAxisLabel=function(t,i,e){return this.raphael.text(t,i,e).attr(\"font-size\",this.options.gridTextSize).attr(\"font-family\",this.options.gridTextFamily).attr(\"font-weight\",this.options.gridTextWeight).attr(\"fill\",this.options.gridTextColor)},o.prototype.drawBar=function(t,i,e,o,r,n,s){var a,h;return a=Math.max.apply(Math,s),h=0===a||a>o?this.raphael.rect(t,i,e,o):this.raphael.path(this.roundedRect(t,i,e,o,s)),h.attr(\"fill\",r).attr(\"fill-opacity\",n).attr(\"stroke\",\"none\")},o.prototype.roundedRect=function(t,i,e,o,r){return null==r&&(r=[0,0,0,0]),[\"M\",t,r[0]+i,\"Q\",t,i,t+r[0],i,\"L\",t+e-r[1],i,\"Q\",t+e,i,t+e,i+r[1],\"L\",t+e,i+o-r[2],\"Q\",t+e,i+o,t+e-r[2],i+o,\"L\",t+r[3],i+o,\"Q\",t,i+o,t,i+o-r[3],\"Z\"]},o}(i.Grid),i.Donut=function(e){function o(e){this.resizeHandler=n(this.resizeHandler,this),this.select=n(this.select,this),this.click=n(this.click,this);var o=this;if(!(this instanceof i.Donut))return new i.Donut(e);if(this.options=t.extend({},this.defaults,e),\"string\"==typeof e.element?this.el=t(document.getElementById(e.element)):this.el=t(e.element),null===this.el||0===this.el.length)throw new Error(\"Graph placeholder not found.\");void 0!==e.data&&0!==e.data.length&&(this.raphael=new Raphael(this.el[0]),this.options.resize&&t(window).bind(\"resize\",function(t){return null!=o.timeoutId&&window.clearTimeout(o.timeoutId),o.timeoutId=window.setTimeout(o.resizeHandler,100)}),this.setData(e.data))}return a(o,e),o.prototype.defaults={colors:[\"#0B62A4\",\"#3980B5\",\"#679DC6\",\"#95BBD7\",\"#B0CCE1\",\"#095791\",\"#095085\",\"#083E67\",\"#052C48\",\"#042135\"],backgroundColor:\"#FFFFFF\",labelColor:\"#000000\",formatter:i.commas,resize:!1},o.prototype.redraw=function(){var t,e,o,r,n,s,a,h,l,p,u,d,c,f,y,g,m,x,v,b,S,w,L;for(this.raphael.clear(),e=this.el.width()/2,o=this.el.height()/2,c=(Math.min(e,o)-10)/3,u=0,b=this.values,f=0,m=b.length;f<m;f++)d=b[f],u+=d;for(h=5/(2*c),t=1.9999*Math.PI-h*this.data.length,s=0,n=0,this.segments=[],S=this.values,r=y=0,x=S.length;y<x;r=++y)d=S[r],l=s+h+t*(d/u),p=new i.DonutSegment(e,o,2*c,c,s,l,this.data[r].color||this.options.colors[n%this.options.colors.length],this.options.backgroundColor,n,this.raphael),p.render(),this.segments.push(p),p.on(\"hover\",this.select),p.on(\"click\",this.click),s=l,n+=1;for(this.text1=this.drawEmptyDonutLabel(e,o-10,this.options.labelColor,15,800),this.text2=this.drawEmptyDonutLabel(e,o+10,this.options.labelColor,14),a=Math.max.apply(Math,this.values),n=0,w=this.values,L=[],g=0,v=w.length;g<v;g++){if((d=w[g])===a){this.select(n);break}L.push(n+=1)}return L},o.prototype.setData=function(t){var i;return this.data=t,this.values=function(){var t,e,o,r;for(o=this.data,r=[],t=0,e=o.length;t<e;t++)i=o[t],r.push(parseFloat(i.value));return r}.call(this),this.redraw()},o.prototype.click=function(t){return this.fire(\"click\",t,this.data[t])},o.prototype.select=function(t){var i,e,o,r,n,s;for(s=this.segments,r=0,n=s.length;r<n;r++)e=s[r],e.deselect();return o=this.segments[t],o.select(),i=this.data[t],this.setLabels(i.label,this.options.formatter(i.value,i))},o.prototype.setLabels=function(t,i){var e,o,r,n,s,a,h,l;return e=2*(Math.min(this.el.width()/2,this.el.height()/2)-10)/3,n=1.8*e,r=e/2,o=e/3,this.text1.attr({text:t,transform:\"\"}),s=this.text1.getBBox(),a=Math.min(n/s.width,r/s.height),this.text1.attr({transform:\"S\"+a+\",\"+a+\",\"+(s.x+s.width/2)+\",\"+(s.y+s.height)}),this.text2.attr({text:i,transform:\"\"}),h=this.text2.getBBox(),l=Math.min(n/h.width,o/h.height),this.text2.attr({transform:\"S\"+l+\",\"+l+\",\"+(h.x+h.width/2)+\",\"+h.y})},o.prototype.drawEmptyDonutLabel=function(t,i,e,o,r){var n;return n=this.raphael.text(t,i,\"\").attr(\"font-size\",o).attr(\"fill\",e),null!=r&&n.attr(\"font-weight\",r),n},o.prototype.resizeHandler=function(){return this.timeoutId=null,this.raphael.setSize(this.el.width(),this.el.height()),this.redraw()},o}(i.EventEmitter),i.DonutSegment=function(t){function i(t,i,e,o,r,s,a,h,l,p){this.cx=t,this.cy=i,this.inner=e,this.outer=o,this.color=a,this.backgroundColor=h,this.index=l,this.raphael=p,this.deselect=n(this.deselect,this),this.select=n(this.select,this),this.sin_p0=Math.sin(r),this.cos_p0=Math.cos(r),this.sin_p1=Math.sin(s),this.cos_p1=Math.cos(s),this.is_long=s-r>Math.PI?1:0,this.path=this.calcSegment(this.inner+3,this.inner+this.outer-5),this.selectedPath=this.calcSegment(this.inner+3,this.inner+this.outer),this.hilight=this.calcArc(this.inner)}return a(i,t),i.prototype.calcArcPoints=function(t){return[this.cx+t*this.sin_p0,this.cy+t*this.cos_p0,this.cx+t*this.sin_p1,this.cy+t*this.cos_p1]},i.prototype.calcSegment=function(t,i){var e,o,r,n,s,a,h,l,p,u;return p=this.calcArcPoints(t),e=p[0],r=p[1],o=p[2],n=p[3],u=this.calcArcPoints(i),s=u[0],h=u[1],a=u[2],l=u[3],\"M\"+e+\",\"+r+\"A\"+t+\",\"+t+\",0,\"+this.is_long+\",0,\"+o+\",\"+n+\"L\"+a+\",\"+l+\"A\"+i+\",\"+i+\",0,\"+this.is_long+\",1,\"+s+\",\"+h+\"Z\"},i.prototype.calcArc=function(t){var i,e,o,r,n;return n=this.calcArcPoints(t),i=n[0],o=n[1],e=n[2],r=n[3],\"M\"+i+\",\"+o+\"A\"+t+\",\"+t+\",0,\"+this.is_long+\",0,\"+e+\",\"+r},i.prototype.render=function(){var t=this;return this.arc=this.drawDonutArc(this.hilight,this.color),this.seg=this.drawDonutSegment(this.path,this.color,this.backgroundColor,function(){return t.fire(\"hover\",t.index)},function(){return t.fire(\"click\",t.index)})},i.prototype.drawDonutArc=function(t,i){return this.raphael.path(t).attr({stroke:i,\"stroke-width\":2,opacity:0})},i.prototype.drawDonutSegment=function(t,i,e,o,r){return this.raphael.path(t).attr({fill:i,stroke:e,\"stroke-width\":3}).hover(o).click(r)},i.prototype.select=function(){if(!this.selected)return this.seg.animate({path:this.selectedPath},150,\"<>\"),this.arc.animate({opacity:1},150,\"<>\"),this.selected=!0},i.prototype.deselect=function(){if(this.selected)return this.seg.animate({path:this.path},150,\"<>\"),this.arc.animate({opacity:0},150,\"<>\"),this.selected=!1},i}(i.EventEmitter)}).call(this)},function(t,i){t.exports=function(t,i,e,o){var r,n=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(r=t,n=t.default);var a=\"function\"==typeof n?n.options:n;if(i&&(a.render=i.render,a.staticRenderFns=i.staticRenderFns),e&&(a._scopeId=e),o){var h=a.computed||(a.computed={});Object.keys(o).forEach(function(t){var i=o[t];h[t]=function(){return i}})}return{esModule:r,exports:n,options:a}}},function(t,i,e){var o=e(14);\"string\"==typeof o&&(o=[[t.i,o,\"\"]]);e(20)(o,{});o.locals&&(t.exports=o.locals)},function(t,i,e){var o=e(3)(e(9),e(16),null,null);t.exports=o.exports},function(t,i,e){var o=e(3)(e(10),e(18),null,null);t.exports=o.exports},function(t,i,e){var o=e(3)(e(11),e(19),null,null);t.exports=o.exports},function(t,i,e){var o=e(3)(e(12),e(17),null,null);t.exports=o.exports},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,\"__esModule\",{value:!0}),e(2),e(4);var r=e(0),n=o(r),s=e(1),a=o(s);i.default={name:\"area-chart\",mixins:[a.default.area],data:function(){return{chart:null}},watch:{data:function(t){var i=this;this.$nextTick(function(){i.chart.options.labels=n.default.toObject(i.labels),i.chart.options.xkey=i.xkey,i.chart.options.ykeys=n.default.toObject(i.ykeys),i.lineColors&&(i.chart.options.lineColors=n.default.toObject(i.lineColors)),i.chart.setData(n.default.toObject(i.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize),labels:n.default.toObject(this.labels),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize,ymax:this.ymax,ymin:this.ymin,smooth:n.default.toBoolean(this.smooth),hideHover:this.hideHover,parseTime:n.default.toBoolean(this.parseTime),postUnits:this.postUnits,preUnits:this.preUnits,xLabelAngle:this.xLabelAngle,goalStrokeWidth:this.goalStrokeWidth,eventStrokeWidth:this.eventStrokeWidth,fillOpacity:this.fillOpacity,behaveLikeLine:this.behaveLikeLine};this.addOptionAsObject(\"lineColors\",t),this.addOption(\"xLabels\",t),this.addOptionAsObject(\"pointFillColors\",t),this.addOptionAsObject(\"pointStrokeColors\",t),this.addOption(\"dateFormat\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOptionAsObject(\"goals\",t),this.addOptionAsObject(\"goalLineColors\",t),this.addOptionAsObject(\"events\",t),this.addOptionAsObject(\"eventLineColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Area(t)}}},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,\"__esModule\",{value:!0}),e(2),e(4);var r=e(0),n=o(r),s=e(1),a=o(s);i.default={name:\"bar-chart\",mixins:[a.default.bar],data:function(){return{chart:null}},watch:{data:function(t){var i=this;this.$nextTick(function(){i.chart.options.labels=n.default.toObject(i.labels),i.chart.options.xkey=i.xkey,i.chart.options.ykeys=n.default.toObject(i.ykeys),i.barColors&&(i.chart.options.barColors=n.default.toObject(i.barColors)),i.chart.setData(i.data)})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),labels:n.default.toObject(this.labels),resize:n.default.toBoolean(this.resize),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),axes:n.default.toBoolean(this.axes),ymax:this.ymax,ymin:this.ymin,hideHover:this.hideHover,horizontal:n.default.toBoolean(this.horizontal),stacked:n.default.toBoolean(this.stacked),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,xLabelAngle:this.xLabelAngle,lineWidth:this.lineWidth,pointSize:this.pointSize};this.addOptionAsObject(\"barColors\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Bar(t)}}},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,\"__esModule\",{value:!0}),e(2),e(4);var r=e(0),n=o(r),s=e(1),a=o(s);i.default={name:\"donut-chart\",mixins:[a.default.donut],data:function(){return{chart:null}},watch:{data:function(t){var i=this;this.$nextTick(function(){i.data&&i.data.length>0&&!i.chart&&i.createChart(),i.chart&&(i.colors&&(i.chart.options.colors=n.default.toObject(i.colors)),i.chart.setData(n.default.toObject(i.data)))})}},mounted:function(){this.data&&this.data.length>0&&this.createChart()},methods:{createChart:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize)};this.addOptionAsObject(\"colors\",t),this.addOption(\"formatter\",t),this.chart=Morris.Donut(t)}}}},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,\"__esModule\",{value:!0}),e(2),e(4);var r=e(0),n=o(r),s=e(1),a=o(s);i.default={name:\"line-chart\",mixins:[a.default.line],data:function(){return{chart:null}},watch:{data:function(t){var i=this;this.$nextTick(function(){i.chart.options.labels=n.default.toObject(i.labels),i.chart.options.xkey=i.xkey,i.chart.options.ykeys=n.default.toObject(i.ykeys),i.lineColors&&(i.chart.options.lineColors=n.default.toObject(i.lineColors)),i.chart.setData(n.default.toObject(i.data))})}},mounted:function(){var t={element:this.id,data:n.default.toObject(this.data),resize:n.default.toBoolean(this.resize),labels:n.default.toObject(this.labels),xkey:this.xkey,ykeys:n.default.toObject(this.ykeys),grid:n.default.toBoolean(this.grid),gridTextColor:this.gridTextColor,gridTextSize:n.default.toInt(this.gridTextSize),gridTextFamily:this.gridTextFamily,gridTextWeight:this.gridTextWeight,lineWidth:this.lineWidth,pointSize:this.pointSize,ymax:this.ymax,ymin:this.ymin,smooth:n.default.toBoolean(this.smooth),hideHover:this.hideHover,parseTime:n.default.toBoolean(this.parseTime),postUnits:this.postUnits,preUnits:this.preUnits,xLabelAngle:this.xLabelAngle,goalStrokeWidth:this.goalStrokeWidth,eventStrokeWidth:this.eventStrokeWidth,fillOpacity:this.fillOpacity};this.addOptionAsObject(\"lineColors\",t),this.addOption(\"xLabels\",t),this.addOptionAsObject(\"pointFillColors\",t),this.addOptionAsObject(\"pointStrokeColors\",t),this.addOption(\"dateFormat\",t),this.addOption(\"xLabelFormat\",t),this.addOption(\"yLabelFormat\",t),this.addOptionAsObject(\"goals\",t),this.addOptionAsObject(\"goalLineColors\",t),this.addOptionAsObject(\"events\",t),this.addOptionAsObject(\"eventLineColors\",t),this.addOption(\"hoverCallback\",t),this.chart=Morris.Line(t)}}},function(t,i,e){\"use strict\";function o(t){return t&&t.__esModule?t:{default:t}}var r=e(7),n=o(r),s=e(6),a=o(s),h=e(8),l=o(h),p=e(5),u=o(p),d={DonutChart:n.default,BarChart:a.default,LineChart:l.default,AreaChart:u.default};t.exports=d},function(t,i,e){i=t.exports=e(15)(),i.push([t.i,\".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}\",\"\"])},function(t,i){t.exports=function(){var t=[];return t.toString=function(){for(var t=[],i=0;i<this.length;i++){var e=this[i];e[2]?t.push(\"@media \"+e[2]+\"{\"+e[1]+\"}\"):t.push(e[1])}return t.join(\"\")},t.i=function(i,e){\"string\"==typeof i&&(i=[[null,i,\"\"]]);for(var o={},r=0;r<this.length;r++){var n=this[r][0];\"number\"==typeof n&&(o[n]=!0)}for(r=0;r<i.length;r++){var s=i[r];\"number\"==typeof s[0]&&o[s[0]]||(e&&!s[2]?s[2]=e:e&&(s[2]=\"(\"+s[2]+\") and (\"+e+\")\"),t.push(s))}},t}},function(t,i){t.exports={render:function(){var t=this,i=t.$createElement;return(t._self._c||i)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,i){t.exports={render:function(){var t=this,i=t.$createElement;return(t._self._c||i)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,i){t.exports={render:function(){var t=this,i=t.$createElement;return(t._self._c||i)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,i){t.exports={render:function(){var t=this,i=t.$createElement;return(t._self._c||i)(\"div\",{attrs:{id:t.id}})},staticRenderFns:[]}},function(t,i){function e(t,i){for(var e=0;e<t.length;e++){var o=t[e],r=p[o.id];if(r){r.refs++;for(var n=0;n<r.parts.length;n++)r.parts[n](o.parts[n]);for(;n<o.parts.length;n++)r.parts.push(a(o.parts[n],i))}else{for(var s=[],n=0;n<o.parts.length;n++)s.push(a(o.parts[n],i));p[o.id]={id:o.id,refs:1,parts:s}}}}function o(t){for(var i=[],e={},o=0;o<t.length;o++){var r=t[o],n=r[0],s=r[1],a=r[2],h=r[3],l={css:s,media:a,sourceMap:h};e[n]?e[n].parts.push(l):i.push(e[n]={id:n,parts:[l]})}return i}function r(t,i){var e=c(),o=g[g.length-1];if(\"top\"===t.insertAt)o?o.nextSibling?e.insertBefore(i,o.nextSibling):e.appendChild(i):e.insertBefore(i,e.firstChild),g.push(i);else{if(\"bottom\"!==t.insertAt)throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");e.appendChild(i)}}function n(t){t.parentNode.removeChild(t);var i=g.indexOf(t);i>=0&&g.splice(i,1)}function s(t){var i=document.createElement(\"style\");return i.type=\"text/css\",r(t,i),i}function a(t,i){var e,o,r;if(i.singleton){var a=y++;e=f||(f=s(i)),o=h.bind(null,e,a,!1),r=h.bind(null,e,a,!0)}else e=s(i),o=l.bind(null,e),r=function(){n(e)};return o(t),function(i){if(i){if(i.css===t.css&&i.media===t.media&&i.sourceMap===t.sourceMap)return;o(t=i)}else r()}}function h(t,i,e,o){var r=e?\"\":o.css;if(t.styleSheet)t.styleSheet.cssText=m(i,r);else{var n=document.createTextNode(r),s=t.childNodes;s[i]&&t.removeChild(s[i]),s.length?t.insertBefore(n,s[i]):t.appendChild(n)}}function l(t,i){var e=i.css,o=i.media,r=i.sourceMap;if(o&&t.setAttribute(\"media\",o),r&&(e+=\"\\n/*# sourceURL=\"+r.sources[0]+\" */\",e+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+\" */\"),t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}var p={},u=function(t){var i;return function(){return void 0===i&&(i=t.apply(this,arguments)),i}},d=u(function(){return/msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase())}),c=u(function(){return document.head||document.getElementsByTagName(\"head\")[0]}),f=null,y=0,g=[];t.exports=function(t,i){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");i=i||{},void 0===i.singleton&&(i.singleton=d()),void 0===i.insertAt&&(i.insertAt=\"bottom\");var r=o(t);return e(r,i),function(t){for(var n=[],s=0;s<r.length;s++){var a=r[s],h=p[a.id];h.refs--,n.push(h)}if(t){e(o(t),i)}for(var s=0;s<n.length;s++){var h=n[s];if(0===h.refs){for(var l=0;l<h.parts.length;l++)h.parts[l]();delete p[h.id]}}}};var m=function(){var t=[];return function(i,e){return t[i]=e,t.filter(Boolean).join(\"\\n\")}}()}])});\n//# sourceMappingURL=vue-morris.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-morris/dist/vue-morris.min.js\n// module id = 561\n// module chunks = 0 9 15 16 19","<!--\n   * Author : see AUTHORS\n   * Licence: MIT, see LICENSE\n-->\n\n<template>\n  <div class=\"graphContainer\">\n    <div\n      v-if=\"data === null\"\n      class=\"loading\"\n    >\n      <v-progress-circular\n        indeterminate\n        color=\"primary\"\n      />\n    </div>\n    <div\n      v-else-if=\"data.length === 0\"\n      class=\"loading\"\n    >\n      <h1>No data</h1>\n    </div>\n    <div v-else>\n      <line-chart\n        :id=\"id\"\n        class=\"maxh200\"\n        style=\"height: 200px\"\n        :data=\"data\"\n        :labels=\"labelsText\"\n        grid=\"true\"\n        xkey=\"time\"\n        :ykeys=\"labels\"\n        hide-hover=\"false\"\n        resize=\"true\"\n        :smooth=\"true\"\n        :line-colors=\"colors\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n    import Raphael from 'raphael/raphael'\n    import {LineChart} from 'vue-morris'\n\n    global.Raphael = Raphael;\n\n\n    export default {\n        name: \"FcUsageGraph\",\n        components: {\n            LineChart,\n        },\n        props: {\n          data: Array,\n          id: String,\n          type: String,\n          labels: Array,\n          labelsText: Array,\n          colors: {\n            type: Array,\n            default: ['#1a50a3', '#00b752', '#dc3043', '#eecd3b', '#768ea2', '#b300ec', '#a9d2f9', '#ffd8b1', '#008080', '#d2f53c']\n          }\n        }\n    }\n</script>\n\n<style scoped>\n    .maxh200{\n        max-height: 200px;\n    }\n\n    .graphContainer {\n        width: 100%;\n    }\n\n    .loading {\n        text-align: center;\n        padding: 20px;\n        vertical-align: middle;\n        font-weight: 200;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/graph/fc_usage_graph.vue","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-525850b2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./fc_usage_graph.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./fc_usage_graph.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./fc_usage_graph.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-525850b2\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./fc_usage_graph.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-525850b2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/graph/fc_usage_graph.vue\n// module id = 604\n// module chunks = 15 19","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-525850b2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./fc_usage_graph.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"5e565d4b\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-525850b2\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/graph/fc_usage_graph.vue\n// module id = 605\n// module chunks = 15 19","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".maxh200[data-v-525850b2]{max-height:200px}.graphContainer[data-v-525850b2]{width:100%}.loading[data-v-525850b2]{text-align:center;padding:20px;vertical-align:middle;font-weight:200}\", \"\", {\"version\":3,\"sources\":[\"/home/runner/work/fitcrack/fitcrack/webadmin/fitcrackFE/src/components/graph/fc_usage_graph.vue\"],\"names\":[],\"mappings\":\"AACA,0BACI,gBAAkB,CACrB,AACD,iCACI,UAAY,CACf,AACD,0BACI,kBAAmB,AACnB,aAAc,AACd,sBAAuB,AACvB,eAAiB,CACpB\",\"file\":\"fc_usage_graph.vue\",\"sourcesContent\":[\"\\n.maxh200[data-v-525850b2]{\\n    max-height: 200px;\\n}\\n.graphContainer[data-v-525850b2] {\\n    width: 100%;\\n}\\n.loading[data-v-525850b2] {\\n    text-align: center;\\n    padding: 20px;\\n    vertical-align: middle;\\n    font-weight: 200;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-525850b2\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/graph/fc_usage_graph.vue\n// module id = 606\n// module chunks = 15 19","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"graphContainer\"},[(_vm.data === null)?_c('div',{staticClass:\"loading\"},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"color\":\"primary\"}})],1):(_vm.data.length === 0)?_c('div',{staticClass:\"loading\"},[_c('h1',[_vm._v(\"No data\")])]):_c('div',[_c('line-chart',{staticClass:\"maxh200\",staticStyle:{\"height\":\"200px\"},attrs:{\"id\":_vm.id,\"data\":_vm.data,\"labels\":_vm.labelsText,\"grid\":\"true\",\"xkey\":\"time\",\"ykeys\":_vm.labels,\"hide-hover\":\"false\",\"resize\":\"true\",\"smooth\":true,\"line-colors\":_vm.colors}})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-525850b2\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/graph/fc_usage_graph.vue\n// module id = 607\n// module chunks = 15 19","<!--\n   * Author : see AUTHORS\n   * Licence: MIT, see LICENSE\n-->\n\n<template>\n\n  <div class=\"mx-2 my-2 d-flex\">\n    <div class=\"flex-grow-2 mx-2\">\n      <v-card>\n        <v-card-title>Hosts</v-card-title>\n        <v-list>\n          <v-divider />\n          <v-list-item-group v-model=\"selectedHost\" v-on:change=\"hostSelected()\" color=\"primary\">\n            <v-list-item v-for=\"(host, i) in hosts\" :value=\"host.id\" :key=\"i\">\n              <v-list-item-content>\n                <v-list-item-title v-text=\"host.name\" class=\"pr-5\"/>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list-item-group>\n        </v-list>\n      </v-card>\n    </div>\n\n    <div class=\"flex-grow-1 mx-2\" v-if=\"selectedHost\">\n      <v-card class=\"mb-4\">\n        <v-card-title>\n          <v-icon>mdi-memory</v-icon>CPU & Memory\n        </v-card-title>\n        <fc-graph\n          id=\"jobGraph1\"\n          :data=\"usageData\"\n          :labels=\"cpumemLabels\"\n          :labels-text=\"cpumemLabelsFriendly\"\n          :colors=\"['#2641A3','#19C019']\"\n        />\n        <p class=\"d-flex justify-center align-center mt-2 py-3\"> \n          <v-icon color=\"#2641A3\">mdi-square-medium</v-icon> CPU utilization (%)\n          <v-icon color=\"#19C019\" class=\"pl-2\">mdi-square-medium</v-icon> RAM utilization (%)\n        </p>\n      </v-card>\n      <div v-for=\"i in deviceCount\" v-bind:key=\"i\">\n        <v-card class=\"mb-4\" v-if=\"dataObtainedForDevices >= i\">\n          <v-card-title>\n            <v-icon>mdi-gauge</v-icon>\n            OpenCL device ({{i}})\n          </v-card-title>\n          <fc-graph\n            :id=\"'jobGraph'+i+1\"\n            :data=\"deviceUsage[i]\"\n            :labels=\"deviceLabels\"\n            :labels-text=\"deviceLabelsFriendly\"\n            :colors=\"['#2641A3','#F01F1F']\"\n          />\n          <p class=\"d-flex justify-center align-center mt-2 py-3\"> \n            <v-icon color=\"#2641A3\">mdi-square-medium</v-icon> Utilization (%)\n            <v-icon color=\"#F01F1F\" class=\"pl-2\">mdi-square-medium</v-icon> Temperature (°C)\n          </p>\n        </v-card>\n      </div>\n    </div>\n\n    <div class=\"flex-grow-2 mx-2\" v-if=\"(platforms != null) && selectedHost\">\n      <v-card>\n        <v-card-title>Detected platforms</v-card-title>\n\n        <v-divider />\n\n        <template v-for=\"platform in platforms\">\n          <v-row class=\"mx-1\">\n            <v-col cols=\"4\" class=\"bold\">Platform</v-col>\n            <v-col>{{ platform.name }}</v-col>\n          </v-row>\n\n          <v-row class=\"mx-1\">\n            <v-col cols=\"4\" class=\"bold\">Version</v-col>\n            <v-col>{{ platform.version }}</v-col>\n          </v-row>\n\n          <template v-for=\"dvcs in platform.platformDevices\">\n            <v-row class=\"mx-1\">\n              <v-col cols=\"4\" class=\"bold\">{{ dvcs.type }}</v-col>\n              <v-col>{{ dvcs.name }}</v-col>\n            </v-row>\n          </template>\n\n          <v-divider />\n        </template>\n      </v-card>\n    </div>\n    \n  </div>\n</template>\n\n<script>\nimport tile from \"@/components/tile/fc_tile\";\nimport graph from \"@/components/graph/fc_usage_graph\";\n\nexport default {\n  components: {\n    \"fc-tile\": tile,\n    \"fc-graph\": graph\n  },\n  data: function() {\n    return {\n      deviceCount: 0,\n      hosts: null,\n      selectedHost: null,\n      usageData: null,\n      cpumemLabels: [\"cpu_utilization\", \"memory_utilization\"],\n      cpumemLabelsFriendly: [\"CPU [%]\", \"RAM [%]\"],\n      deviceLabels: [\"utilization\", \"temperature\"],\n      deviceLabelsFriendly: [\"Utilization [%]\", \"Temperature [°C]\"],\n      deviceUsage: [],\n      platforms: null,\n      dataObtainedForDevices: 0,\n      hostSelectedBool: false,\n    };\n  },\n  watch: {\n    deviceCount: function() {\n      this.getDeviceStats();\n    },\n    hosts: function() {\n      if (!this.hostSelectedBool){\n          if (Array.isArray(this.hosts) && this.hosts.length){\n            this.selectedHost = this.hosts[0].id;\n            this.hostSelectedBool = true;\n            this.hostSelected();\n          }\n        }\n    }\n  },\n  mounted: function() {\n    this.loadData();\n    this.interval = setInterval(\n      function() {\n        this.loadData();\n      }.bind(this),\n      10000\n    );\n  },\n  beforeDestroy() {\n    clearInterval(this.interval);\n  },\n  methods: {\n    loadData: function() {\n      this.axios\n        .get(this.$serverAddr + \"/job/\" + this.$route.params.id + \"/hosts\")\n        .then(response => {\n          //console.log(\"/job/\"+this.$route.params.id+\"/hosts\",response.data.items);\n          this.hosts = response.data.items;\n        });\n      if (this.selectedHost != null) this.hostSelected();\n    },\n    hostSelected: function() {\n      if (this.selectedHost != null) {\n        var dvcCount = 0;\n        this.axios\n          .get(this.$serverAddr+\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost+\"/systemStats\")\n          .then(response => {\n            //console.log(\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost+\"/systemStats\",response.data.items);\n            this.usageData = response.data.items;\n          });\n        this.axios\n          .get(this.$serverAddr+\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost+\"/deviceCount\")\n          .then(response => {\n            //console.log(\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost+\"/deviceCount\",response.data.deviceCount);\n            this.deviceCount = response.data.deviceCount;\n          });\n        this.getDeviceStats();\n        this.axios\n          .get(this.$serverAddr+\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost+\"/platforms\")\n          .then(response => {\n            //console.log(\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost+\"/platforms\",response.data.items);\n            this.platforms = response.data.items;\n          });\n      }\n    },\n    getDeviceStats: function() {\n      if (this.selectedHost != null) {\n        for (let i = 1; i <= this.deviceCount; i++) {\n          this.axios\n            .get(this.$serverAddr +\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost + \"/deviceStats/\"+i)\n            .then(response => {\n              //console.log(\"/job/\"+this.$route.params.id+\"/hwMon/\"+this.selectedHost +\"/deviceStats/\"+i,response.data.items);\n              this.deviceUsage[i] = response.data.items;\n              this.dataObtainedForDevices++;\n            });\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.bold {\n  font-weight: bold;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/hwMon/hwMonView.vue","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0d554a5c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./hwMonView.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"3a2003e0\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0d554a5c\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/hwMon/hwMonView.vue\n// module id = 962\n// module chunks = 19","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".bold[data-v-0d554a5c]{font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"/home/runner/work/fitcrack/fitcrack/webadmin/fitcrackFE/src/components/hwMon/hwMonView.vue\"],\"names\":[],\"mappings\":\"AACA,uBACE,eAAkB,CACnB\",\"file\":\"hwMonView.vue\",\"sourcesContent\":[\"\\n.bold[data-v-0d554a5c] {\\n  font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0d554a5c\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/hwMon/hwMonView.vue\n// module id = 963\n// module chunks = 19","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mx-2 my-2 d-flex\"},[_c('div',{staticClass:\"flex-grow-2 mx-2\"},[_c('v-card',[_c('v-card-title',[_vm._v(\"Hosts\")]),_vm._v(\" \"),_c('v-list',[_c('v-divider'),_vm._v(\" \"),_c('v-list-item-group',{attrs:{\"color\":\"primary\"},on:{\"change\":function($event){return _vm.hostSelected()}},model:{value:(_vm.selectedHost),callback:function ($$v) {_vm.selectedHost=$$v},expression:\"selectedHost\"}},_vm._l((_vm.hosts),function(host,i){return _c('v-list-item',{key:i,attrs:{\"value\":host.id}},[_c('v-list-item-content',[_c('v-list-item-title',{staticClass:\"pr-5\",domProps:{\"textContent\":_vm._s(host.name)}})],1)],1)}),1)],1)],1)],1),_vm._v(\" \"),(_vm.selectedHost)?_c('div',{staticClass:\"flex-grow-1 mx-2\"},[_c('v-card',{staticClass:\"mb-4\"},[_c('v-card-title',[_c('v-icon',[_vm._v(\"mdi-memory\")]),_vm._v(\"CPU & Memory\\n      \")],1),_vm._v(\" \"),_c('fc-graph',{attrs:{\"id\":\"jobGraph1\",\"data\":_vm.usageData,\"labels\":_vm.cpumemLabels,\"labels-text\":_vm.cpumemLabelsFriendly,\"colors\":['#2641A3','#19C019']}}),_vm._v(\" \"),_c('p',{staticClass:\"d-flex justify-center align-center mt-2 py-3\"},[_c('v-icon',{attrs:{\"color\":\"#2641A3\"}},[_vm._v(\"mdi-square-medium\")]),_vm._v(\" CPU utilization (%)\\n        \"),_c('v-icon',{staticClass:\"pl-2\",attrs:{\"color\":\"#19C019\"}},[_vm._v(\"mdi-square-medium\")]),_vm._v(\" RAM utilization (%)\\n      \")],1)],1),_vm._v(\" \"),_vm._l((_vm.deviceCount),function(i){return _c('div',{key:i},[(_vm.dataObtainedForDevices >= i)?_c('v-card',{staticClass:\"mb-4\"},[_c('v-card-title',[_c('v-icon',[_vm._v(\"mdi-gauge\")]),_vm._v(\"\\n          OpenCL device (\"+_vm._s(i)+\")\\n        \")],1),_vm._v(\" \"),_c('fc-graph',{attrs:{\"id\":'jobGraph'+i+1,\"data\":_vm.deviceUsage[i],\"labels\":_vm.deviceLabels,\"labels-text\":_vm.deviceLabelsFriendly,\"colors\":['#2641A3','#F01F1F']}}),_vm._v(\" \"),_c('p',{staticClass:\"d-flex justify-center align-center mt-2 py-3\"},[_c('v-icon',{attrs:{\"color\":\"#2641A3\"}},[_vm._v(\"mdi-square-medium\")]),_vm._v(\" Utilization (%)\\n          \"),_c('v-icon',{staticClass:\"pl-2\",attrs:{\"color\":\"#F01F1F\"}},[_vm._v(\"mdi-square-medium\")]),_vm._v(\" Temperature (°C)\\n        \")],1)],1):_vm._e()],1)})],2):_vm._e(),_vm._v(\" \"),((_vm.platforms != null) && _vm.selectedHost)?_c('div',{staticClass:\"flex-grow-2 mx-2\"},[_c('v-card',[_c('v-card-title',[_vm._v(\"Detected platforms\")]),_vm._v(\" \"),_c('v-divider'),_vm._v(\" \"),_vm._l((_vm.platforms),function(platform){return [_c('v-row',{staticClass:\"mx-1\"},[_c('v-col',{staticClass:\"bold\",attrs:{\"cols\":\"4\"}},[_vm._v(\"Platform\")]),_vm._v(\" \"),_c('v-col',[_vm._v(_vm._s(platform.name))])],1),_vm._v(\" \"),_c('v-row',{staticClass:\"mx-1\"},[_c('v-col',{staticClass:\"bold\",attrs:{\"cols\":\"4\"}},[_vm._v(\"Version\")]),_vm._v(\" \"),_c('v-col',[_vm._v(_vm._s(platform.version))])],1),_vm._v(\" \"),_vm._l((platform.platformDevices),function(dvcs){return [_c('v-row',{staticClass:\"mx-1\"},[_c('v-col',{staticClass:\"bold\",attrs:{\"cols\":\"4\"}},[_vm._v(_vm._s(dvcs.type))]),_vm._v(\" \"),_c('v-col',[_vm._v(_vm._s(dvcs.name))])],1)]}),_vm._v(\" \"),_c('v-divider')]})],2)],1):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0d554a5c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/hwMon/hwMonView.vue\n// module id = 964\n// module chunks = 19"],"sourceRoot":""}